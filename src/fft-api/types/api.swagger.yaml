openapi: 3.0.1
info:
  contact:
    email: api@fulfillmenttools.com
    name: fulfillmenttools
    url: https://fulfillmenttools.com/
  description: >-
    This is the fulfillmenttools API documentation. Visit
    https://docs.fulfillmenttools.com/ for first steps.
  termsOfService: http://swagger.io/terms/
  title: fulfillmenttools - simplifying retail complexity
  version: VERSIONLESS
servers:
  - url: https://{tenant}.api.fulfillmenttools.com
    variables:
      tenant:
        default: your-tenant-name
paths:
  /api/carriers:
    get:
      parameters:
        - description: all entities after given Id
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
        - description: >-
            Provide the localized names and descriptions for the parcel label
            classifications. If not provided the default locale is used., for
            example de_DE.
          in: query
          name: locale
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StrippedCarriers'
          description: The current list of available carriers
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: No more elements available
      tags:
        - Last Mile Integration - Carriers
      description: ''
      operationId: getCarriers
      summary: Returns all configured CEP partners
    post:
      parameters:
        - description: >-
            Provide the localized names and descriptions for the parcel label
            classifications. If not provided the default locale is used., for
            example de_DE.
          in: query
          name: locale
          schema:
            type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Carrier'
          description: >-
            The carrier was successfully created. The Location header contains
            the URL of the carrier.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Last Mile Integration - Carriers
      description: ''
      operationId: addCarrier
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarrierForCreation'
        description: Carrier object
        required: true
      summary: Add a new carrier as a CEP partner
  /api/carriers/{carrierId}:
    get:
      parameters:
        - description: ID of the carrier you want to get
          in: path
          name: carrierId
          required: true
          schema:
            type: string
        - description: >-
            Provide the localized names and descriptions for the parcel label
            classifications. If not provided the default locale is used., for
            example de_DE.
          in: query
          name: locale
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Carrier'
          description: >-
            Carrier was found & you were allowed to access it. The result is in
            the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: User not found
      tags:
        - Last Mile Integration - Carriers
      description: ''
      operationId: getCarrier
      summary: Get a carrier with the given ID
    patch:
      parameters:
        - description: ID of carrier you want to patch
          in: path
          name: carrierId
          required: true
          schema:
            type: string
        - description: >-
            Provide the localized names and descriptions for the parcel label
            classifications. If not provided the default locale is used., for
            example de_DE.
          in: query
          name: locale
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Carrier'
          description: >-
            Carrier was found & patch-set has been applied. The patched entity
            is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
        '409':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity version conflict
      tags:
        - Last Mile Integration - Carriers
      description: ''
      operationId: patchCarrier
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarrierPatchActions'
        description: Patch set
        required: true
      summary: Patches a carrier with the given ID
  /api/carriers/{carrierId}/configuration:
    get:
      parameters:
        - description: ID of the carrier you want to get the configuration
          in: path
          name: carrierId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/CarrierConfiguration'
                  - $ref: '#/components/schemas/GlsCarrierConfiguration'
                  - $ref: '#/components/schemas/FedexCarrierConfiguration'
                  - $ref: '#/components/schemas/BringCarrierConfiguration'
                  - $ref: '#/components/schemas/DpdChCarrierConfiguration'
                  - $ref: '#/components/schemas/DhlV2CarrierConfiguration'
                  - $ref: '#/components/schemas/VceCarrierConfiguration'
                  - $ref: '#/components/schemas/PostNlCarrierConfiguration'
          description: >-
            Carrier Configuration was found & you were allowed to access it. The
            result is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Carrier Configuration not found
      tags:
        - Last Mile Integration - Carriers
      description: ''
      operationId: getCarrierConfiguration
      summary: Get a carrier configuration with the given ID
    put:
      parameters:
        - description: ID of the carrier you want to update the configuration
          in: path
          name: carrierId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/CarrierConfiguration'
                  - $ref: '#/components/schemas/GlsCarrierConfiguration'
                  - $ref: '#/components/schemas/FedexCarrierConfiguration'
                  - $ref: '#/components/schemas/BringCarrierConfiguration'
                  - $ref: '#/components/schemas/DpdChCarrierConfiguration'
                  - $ref: '#/components/schemas/DhlV2CarrierConfiguration'
                  - $ref: '#/components/schemas/VceCarrierConfiguration'
                  - $ref: '#/components/schemas/PostNlCarrierConfiguration'
          description: >-
            Carrier Configuration was found & you were allowed to access it. The
            result is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Carrier Configuration not found
      tags:
        - Last Mile Integration - Carriers
      description: ''
      operationId: putCarrierConfiguration
      requestBody:
        content:
          application/json:
            schema:
              anyOf:
                - $ref: '#/components/schemas/CarrierConfiguration'
                - $ref: '#/components/schemas/GlsCarrierConfiguration'
                - $ref: '#/components/schemas/FedexCarrierConfiguration'
                - $ref: '#/components/schemas/BringCarrierConfiguration'
                - $ref: '#/components/schemas/DpdChCarrierConfiguration'
                - $ref: '#/components/schemas/DhlV2CarrierConfiguration'
                - $ref: '#/components/schemas/VceCarrierConfiguration'
                - $ref: '#/components/schemas/PostNlCarrierConfiguration'
        description: Carrier Configuration
        required: true
      summary: Update a carrier configuration with the given ID
  /api/carriers/{carrierId}/configuration/countryservicemappings:
    get:
      parameters:
        - description: ID of the carrier you want to get the countryservicemappings for
          in: path
          name: carrierId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CarrierCountryServiceMapping'
          description: >-
            Carrier's countryservicemappings found & you are allowed to access
            it. The result is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Carrier's countryservicemappings Configuration not found
      tags:
        - Last Mile Integration - Carriers
      description: ''
      operationId: getCarrierCountryServiceMappings
      summary: Get a CarrierCountryServiceMappings for carrier with given ID
    post:
      parameters:
        - description: ID of the carrier you want to create a countryservicemapping for
          in: path
          name: carrierId
          required: true
          schema:
            type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarrierCountryServiceMapping'
          description: >-
            CarrierCountryServiceMapping successfully created. The result is in
            the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Carrier not found
      tags:
        - Last Mile Integration - Carriers
      description: ''
      operationId: createCarrierCountryServiceMapping
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarrierCountryServiceMappingForCreation'
        description: Carrier Configuration
        required: true
      summary: Crwate a carrierCountryServiceMapping for carrier with given ID
  /api/carriers/{carrierId}/configuration/countryservicemappings/{countryServiceMappingId}:
    get:
      parameters:
        - description: ID of the carrier you want to get a countryservicemapping for
          in: path
          name: carrierId
          required: true
          schema:
            type: string
        - description: ID of the countryservicemapping
          in: path
          name: countryServiceMappingId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarrierCountryServiceMapping'
          description: >-
            Carrier's countryservicemapping found & you are allowed to access
            it. The result is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Carrier's countryservicemappings Configuration not found
      tags:
        - Last Mile Integration - Carriers
      description: ''
      operationId: getCarrierCountryServiceMapping
      summary: Get a CarrierCountryServiceMappings for carrier with given ID
    patch:
      parameters:
        - description: ID of the carrier you want to update a countryservicemapping of
          in: path
          name: carrierId
          required: true
          schema:
            type: string
        - description: ID of the countryservicemapping
          in: path
          name: countryServiceMappingId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarrierCountryServiceMapping'
          description: >-
            CarrierCountryServiceMapping successfully updated. The result is in
            the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Carrier or CarrierCountryServiceMapping not found
      tags:
        - Last Mile Integration - Carriers
      description: ''
      operationId: updateCarrierCountryServiceMapping
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarrierCountryServiceMappingForUpdate'
        description: Carrier Mapping for update
        required: true
      summary: Update a carrierCountryServiceMapping for carrier with given ID
    delete:
      parameters:
        - description: ID of the carrier you want to delete a countryservicemapping from
          in: path
          name: carrierId
          required: true
          schema:
            type: string
        - description: ID of the countryservicemapping
          in: path
          name: countryServiceMappingId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: CarrierCountryServiceMapping successfully deleted.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Carrier or CarrierCountryServiceMapping not found
      tags:
        - Last Mile Integration - Carriers
      description: ''
      operationId: deleteCarrierCountryServiceMapping
      summary: Delete a carrierCountryServiceMapping for carrier with given ID
  /api/configurations/transittime:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransitTimeConfiguration'
          description: >-
            Transit time configuration was found & you were allowed to access
            it. The result is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Cutoff time configuration not found
      tags:
        - Last Mile Integration - Carriers
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getTransitTimeConfiguration
      summary: Get a tenant wide transit time time config
      x-badges:
        - color: orange
          label: BETA
    put:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransitTimeConfiguration'
          description: Transit time configuration was written successfully
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Transit time configuration not found
      tags:
        - Last Mile Integration - Carriers
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: putTransitTimeConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransitTimeConfigurationForUpsert'
        required: true
      summary: Update transit time configuration of a tenant
      x-badges:
        - color: orange
          label: BETA
  /api/configurations/cutofftime:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CutoffTimeConfiguration'
          description: >-
            Cutoff time configuration was found & you were allowed to access it.
            The result is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Cutoff time configuration not found
      tags:
        - Fulfillment Operations - Picking
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getCutoffTimeConfiguration
      summary: Get a tenant wide cutoff time config
      x-badges:
        - color: orange
          label: BETA
    put:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CutoffTimeConfiguration'
          description: Cutoff time configuration was written successfully
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Cutoff time configuration not found
      tags:
        - Fulfillment Operations - Picking
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: putCutoffTimeConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CutoffTimeConfiguration'
        required: true
      summary: Update cutoff time configuration of a tenant
      x-badges:
        - color: orange
          label: BETA
  /api/configurations/tenant:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantConfiguration'
          description: >-
            Tenant configuration was found & you were allowed to access it. The
            result is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Tenant configuration not found
      tags:
        - Core - Configuration
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getTenantConfiguration
      summary: Get a tenant config
      x-badges:
        - color: red
          label: ALPHA
    put:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantConfiguration'
          description: Tenant configuration was written successfully
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Tenant configuration not found
      tags:
        - Core - Configuration
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Upsert tenant configuration
      operationId: putTenantConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantConfigurationForUpsert'
        required: true
      summary: Update tenant configuration of a tenant
      x-badges:
        - color: red
          label: ALPHA
  /api/configurations/deliverynote:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryNoteConfiguration'
          description: >-
            Delivery note configuration was found & you were allowed to access
            it. The result is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Delivery note configuration not found
      tags:
        - Fulfillment Operations - Shipments
      operationId: getDeliveryNoteConfiguration
      summary: Get a tenant wide delivery configuration
    put:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryNoteConfiguration'
          description: Delivery note configuration was successfully updated
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryNoteConfiguration'
          description: Delivery note configuration was successfully created
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Fulfillment Operations - Shipments
      operationId: putDeliveryNoteConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryNoteConfigurationForUpsert'
        required: true
      summary: Update delivery note configuration of a tenant
  /api/configurations/tenantconnector:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantConnectorConfigurations'
          description: >-
            Configuration was found & you were allowed to access it. The result
            is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: configuration not found
      tags:
        - Infrastructure - Artifacts
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getTenantConnectorConfigurations
      summary: Get a tenant wide app connector configuration
      x-badges:
        - color: red
          label: ALPHA
  /api/configurations/packing:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackingConfigurations'
          description: Central Configuration of all packing related things
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Packing
      operationId: getPackingConfigurations
      summary: Get the packing configurations
    patch:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackingConfigurations'
          description: The packing central configuration was successfully updated.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackingConfigurations'
          description: The packing central configuration was successfully created.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Fulfillment Operations - Packing
      description: ''
      operationId: upsertPackingConfigurations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackingConfigurations'
        description: create/update packing central configuration
        required: true
      summary: Change the tenant wide packing central configuration
  /api/configurations/handover:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HandoverConfiguration'
          description: >-
            Handover configuration was found & you were allowed to access it.
            The result is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Handover
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getHandoverConfiguration
      summary: Read handover configuration
      x-badges:
        - color: red
          label: ALPHA
    put:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HandoverConfiguration'
          description: The handover configuration was successfully updated.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Fulfillment Operations - Handover
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: upsertHandoverConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HandoverConfigurationForCreate'
        description: Desired HandoverConfiguration
        required: true
      summary: Change the handover configuration
      x-badges:
        - color: red
          label: ALPHA
  /api/configurations/handover/refusereasons:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailableRefusedReason'
          description: Existing refuse reasons
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Fulfillment Operations - Handover
      description: ''
      operationId: getAllRefuseReasons
      summary: Get all tenant wide refuse reasons
  /api/configurations/tags/packjob:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackJobTagConfiguration'
          description: Packjob tag config is in response body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Packing
      description: ''
      operationId: getPackJobTagConfiguration
      summary: Read tag configuration for the specified section
    put:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackJobTagConfiguration'
          description: The packing configuration was successfully updated.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Fulfillment Operations - Packing
      description: ''
      operationId: putPackJobTagConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackJobTagConfiguration'
        description: Desired PackJobTagConfiguration
        required: true
      summary: Change the tag configuration for packjobs
  /api/configurations/tags/parcel:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParcelTagConfiguration'
          description: tag config is in response body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Shipments
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getParcelTagConfiguration
      summary: Read tag configuration for parcels
      x-badges:
        - color: red
          label: ALPHA
    put:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParcelTagConfiguration'
          description: The tag configuration was successfully updated.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Fulfillment Operations - Shipments
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: putParcelTagConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParcelTagConfigurationForUpsert'
        description: Desired Tag Configuration for Parcels
        required: true
      summary: Change the tag configuration for Parcels
      x-badges:
        - color: red
          label: ALPHA
  /api/configurations/tags/handoverjob:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HandoverJobTagConfiguration'
          description: handoverJob tag config is in response body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Handover
      description: ''
      operationId: getHandoverJobTagConfiguration
      summary: Read tag configuration for handoverJobs
    put:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HandoverJobTagConfiguration'
          description: The handoverjob tag configuration was successfully updated.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Fulfillment Operations - Handover
      description: ''
      operationId: putHandoverTagConfigurations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HandoverJobTagConfiguration'
        description: Desired Tag Configuration for HandoverJobs
        required: true
      summary: Change the tag configuration for HandoverJobs
  /api/configurations/tags/order:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderTagConfiguration'
          description: order tag config is in response body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - DOMS - Orders
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getOrderTagConfiguration
      summary: Read tag configuration for orders
      x-badges:
        - color: orange
          label: BETA
    put:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderTagConfiguration'
          description: The order tag configuration was successfully updated.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - DOMS - Orders
      description: ''
      operationId: putOrderTagConfigurations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderTagConfiguration'
        description: Desired Tag Configuration for orders
        required: true
      summary: Change the tag configuration for orders
  /api/configurations/domain:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainConfiguration'
          description: Domain config could be found in response body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Infrastructure - Artifacts
      description: ''
      operationId: getDomainConfiguration
      summary: Get default authentication domain of the tenant
    put:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainConfiguration'
          description: The domain configuration was successfully updated.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainConfiguration'
          description: The domain configuration was successfully created.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Infrastructure - Artifacts
      description: ''
      operationId: putDomainConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainConfiguration'
        description: Desired domain note configuration to create/update
        required: true
      summary: Change the tenant's default authentication domain configuration
  /api/configurations/fulfillmentprocessbuffer:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillmentProcessBufferConfiguration'
          description: >-
            Configuration was found & you were allowed to access it. The result
            is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Configuration not found
      tags:
        - Fulfillment Operations - Picking
      description: ''
      operationId: getFulfillmentProcessBufferConfiguration
      summary: Get a tenant fulfillment process buffer configuration
    put:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillmentProcessBufferConfiguration'
          description: Configuration was written successfully
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Configuration not found
      tags:
        - Fulfillment Operations - Picking
      description: ''
      operationId: putFulfillmentProcessBufferConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FulfillmentProcessBufferConfiguration'
        required: true
      summary: Update fulfillment process buffer configuration of a tenant
  /api/configurations/gdpr:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GdprConfiguration'
          description: >-
            Gdpr configuration was found & you were allowed to access it. The
            result is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Gdpr configuration not found
      tags:
        - Core - Configuration
      description: ''
      operationId: getGdprConfiguration
      summary: Get a tenant gdpr config
    put:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GdprConfiguration'
          description: Gdpr configuration was written successfully
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Gdpr configuration not found
      tags:
        - Core - Configuration
      description: ''
      operationId: putGdprConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GdprConfiguration'
        required: true
      summary: Update gdpr configuration of a tenant
  /api/configurations/loadunit:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadUnitConfiguration'
          description: The load unit configuration can be found in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Fulfillment Operations - Picking
      operationId: getLoadUnitConfiguration
      summary: Get the load unit configuration
    put:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadUnitConfiguration'
          description: The load unit configuration was successfully updated.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadUnitConfiguration'
          description: The load unit configuration was successfully created.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Fulfillment Operations - Picking
      description: ''
      operationId: putLoadUnitConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoadUnitConfiguration'
        description: Desired load unit configuration to create/update
        required: true
      summary: Change the tenant wide load unit configuration
  /api/configurations/locale:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocaleConfiguration'
          description: The locale Configuration can be found in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Core - Configuration
      description: ''
      operationId: getLocaleConfiguration
      summary: Get the tenant wide default locale configuration
    put:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocaleConfiguration'
          description: The locale Configuration was successfully set.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Core - Configuration
      description: ''
      operationId: putLocaleConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocaleConfiguration'
        description: Desired default locale configuration to put
        required: true
      summary: Change the tenant wide default locale configuration
  /api/configurations/oidcproviders:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OidcProviders'
          description: existing oidc providers.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Infrastructure - OIDC Configuration
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />Get
        the available OIDC providers.
      operationId: getOidcProviders
      summary: Get the available OIDC providers.
      x-badges:
        - color: red
          label: ALPHA
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OidcProviderForCreation'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StrippedOidcProvider'
          description: Provider was updated successfully
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Infrastructure - OIDC Configuration
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Create an OIDC provider.
      operationId: createOidcProvider
      summary: Create an OIDC provider.
      x-badges:
        - color: red
          label: ALPHA
  /api/configurations/oidcproviders/{oidcProviderId}:
    get:
      parameters:
        - description: ID of OIDC provider you want to get.
          in: path
          name: oidcProviderId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StrippedOidcProvider'
          description: Provider was found
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Infrastructure - OIDC Configuration
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getOidcProvider
      summary: Get OIDC provider by id.
      x-badges:
        - color: red
          label: ALPHA
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OidcProviderForUpdate'
      parameters:
        - description: ID of OIDC provider you want to update.
          in: path
          name: oidcProviderId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OidcProviderForUpdate'
          description: Provider was updated successfully
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Infrastructure - OIDC Configuration
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Update an OIDC Provider.
      operationId: updateOidcProvider
      summary: Update an OIDC Provider.
      x-badges:
        - color: red
          label: ALPHA
    delete:
      parameters:
        - description: ID of the OIDC provider you want to delete.
          in: path
          name: oidcProviderId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OIDC Provider was found & you were allowed to delete it.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: OIDC Provider not found
      tags:
        - Infrastructure - OIDC Configuration
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Delete an OIDC Provider.
      operationId: deleteOidcProvider
      summary: Delete an OIDC Provider.
      x-badges:
        - color: red
          label: ALPHA
  /api/configurations/pickingtimes:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultPickingTimesConfiguration'
          description: Picking Times config found.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Picking
      description: ''
      operationId: getDefaultPickingTimesConfiguration
      summary: Get the current configuration for tenant wide default picking times
    put:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultPickingTimesConfiguration'
          description: The default picking times configuration was successfully updated.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '409':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Configuration version conflict
      tags:
        - Fulfillment Operations - Picking
      description: ''
      operationId: putDefaultPickingTimesConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DefaultPickingTimesConfiguration'
        description: Desired default picking times configuration to create/update
        required: true
      summary: Change the tenant wide default picking times configuration
  /api/configurations/returnnote:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnNoteConfiguration'
          description: Return note config could be found in response body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Shipments
      operationId: getReturnNoteConfiguration
      summary: Get defined return notes of the tenant
    put:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnNoteConfiguration'
          description: The return note configuration was successfully updated.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnNoteConfiguration'
          description: The return note configuration was successfully created.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Fulfillment Operations - Shipments
      description: ''
      operationId: putReturnNoteConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReturnNoteConfigurationForUpsert'
        description: Desired return note configuration to create/update
        required: true
      summary: Change the tenant wide return note configuration
  /api/configurations/stock:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockConfiguration'
          description: StockConfiguration config found.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Inventory Management - Stocks
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getStockConfiguration
      summary: Get the current stock configuration
      x-badges:
        - color: orange
          label: BETA
    put:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockConfiguration'
          description: The stockConfiguration was successfully created.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Inventory Management - Stocks
      description: ''
      operationId: putStockConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StockConfiguration'
        description: Desired stock configuration to put
        required: true
      summary: Change the tenant wide stock configuration
  /api/configurations/substitution:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubstitutionConfiguration'
          description: Substitution config found.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Picking
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getSubstitutionConfiguration
      summary: Get the current configuration for substitution
      x-badges:
        - color: orange
          label: BETA
    put:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubstitutionConfiguration'
          description: The substitution configuration was successfully updated.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubstitutionConfiguration'
          description: The substitution configuration was successfully created.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '409':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Facility version conflict
      tags:
        - Fulfillment Operations - Picking
      description: ''
      operationId: putSubstitutionConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubstitutionConfiguration'
        description: Desired substitution configuration to create/update
        required: true
      summary: Change the tenant wide substitution configuration
  /api/configurations/supportedlocales:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupportedLocales'
          description: The supported locales can be found in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Core - Configuration
      description: ''
      operationId: getLocales
      summary: Get the list of supported locales
  /api/configurations/packing/containerrequired:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackingContainerRequiredConfiguration'
          description: The requirement of containers in packing can be found in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Packing
      description: >-
        This part of the API is deprecated. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Deprecated, will be replaced with /api/configurations/packing
      deprecated: true
      operationId: getPackingContainerRequirement
      summary: Get the packing container requirement configuration
    put:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackingContainerRequiredConfiguration'
          description: >-
            The packing container requirement configuration was successfully
            updated.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackingContainerRequiredConfiguration'
          description: >-
            The packing container requirement configuration was successfully
            created.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Fulfillment Operations - Packing
      description: >-
        This part of the API is deprecated. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Deprecated, will be replaced with /api/configurations/packing
      deprecated: true
      operationId: putPackingContainerRequirement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackingContainerRequiredConfiguration'
        description: Validation picking scan code to activate/deactivate
        required: true
      summary: Change the tenant wide packing container requirement configuration
  /api/deliverynotes:
    post:
      parameters:
        - description: >-
            Provide the localized values for the delivery note. If not provided
            the default locale is used. For example de_DE
          in: query
          name: locale
          schema:
            type: string
      responses:
        '201':
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/DeliveryNote'
          description: Successfully created the delivery note.
        '401':
          content:
            application/pdf:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/pdf:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Fulfillment Operations - Shipments
      operationId: createDeliveryNote
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryNote'
        required: true
      summary: Create delivery note
  /api/facilities:
    get:
      parameters:
        - description: all entities after given Id
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: Reference to the status you want to get the corresponding facilities
          explode: true
          in: query
          name: status
          required: false
          schema:
            type: array
            items:
              type: string
        - description: number of facilities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
        - description: query facilities with the given tenantFacilityId
          in: query
          name: tenantFacilityId
          required: false
          schema:
            type: string
        - description: query facilities orderBy
          in: query
          name: orderBy
          required: false
          schema:
            $ref: '#/components/schemas/FacilityOrderBy'
        - description: Filters the facilities by type
          explode: true
          in: query
          name: type
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/FacilityType'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StrippedFacilities'
          description: Facilities are found.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Core - Facilities
      description: ''
      operationId: getAllFacilities
      summary: Return all facilities
    post:
      responses:
        '201':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ManagedFacility'
                  - $ref: '#/components/schemas/Supplier'
          description: >-
            The facility was successfully created. The Location header contains
            the URL of the facility.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Core - Facilities
      description: ''
      operationId: addFacility
      requestBody:
        content:
          application/json:
            schema:
              anyOf:
                - $ref: '#/components/schemas/ManagedFacilityForCreation'
                - $ref: '#/components/schemas/SupplierForCreation'
        description: Representation that describes the facility
        required: true
      summary: Add a new facility
  /api/facilities/{facilityId}/carriers/prioritization:
    post:
      parameters:
        - description: ID of facility you want to calculate the carrier priority for
          in: path
          name: facilityId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CarrierPriorityResult'
          description: >-
            Carrier priority was calculated successfully. The result is in the
            body.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Core - Facilities
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: calculateCarrierPriority
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarrierPriorityCalculationRequest'
        description: Carrier priority calculation
        required: true
      summary: Calculate carrier priority
      x-badges:
        - color: red
          label: ALPHA
  /api/facilities/{facilityId}:
    delete:
      parameters:
        - description: ID of facility you want to delete
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: cascading deletion without pre condition check
          in: query
          name: forceDeletion
          required: false
          schema:
            default: false
            type: boolean
      responses:
        '200':
          description: Facility was found & you were allowed to delete it.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Facility not found
      tags:
        - Core - Facilities
      description: ''
      operationId: deleteFacility
      summary: deletes a facility with the given ID
    get:
      parameters:
        - description: ID of facility you want to get
          in: path
          name: facilityId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/ManagedFacility'
                  - $ref: '#/components/schemas/Supplier'
          description: >-
            Facility was found & you were allowed to access it. The result is in
            the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Facility not found
      tags:
        - Core - Facilities
      description: ''
      operationId: getFacility
      summary: Get a facility with the given ID
    patch:
      parameters:
        - description: ID of facility you want to patch
          in: path
          name: facilityId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/ManagedFacility'
                  - $ref: '#/components/schemas/Supplier'
          description: >-
            Facility was found & patch-set has been applied. The patched
            facility is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Facility not found
        '409':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Facility version conflict
      tags:
        - Core - Facilities
      description: ''
      operationId: patchFacility
      requestBody:
        content:
          application/json:
            schema:
              anyOf:
                - $ref: '#/components/schemas/FacilityPatchActions'
                - $ref: '#/components/schemas/ManagedFacilityForModification'
                - $ref: '#/components/schemas/SupplierForModification'
        description: Patch set
        required: true
      summary: Patches a facility with the given ID
    put:
      parameters:
        - description: ID of facility you want to replace
          in: path
          name: facilityId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ManagedFacility'
                  - $ref: '#/components/schemas/Supplier'
          description: Facility was replaced. The replaced facility is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Facility not found
        '409':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Facility version conflict
      tags:
        - Core - Facilities
      operationId: replaceFacility
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/ManagedFacilityForReplacement'
                - $ref: '#/components/schemas/SupplierForReplacement'
              discriminator:
                propertyName: type
                mapping:
                  MANAGED_FACILITY: '#/components/schemas/ManagedFacilityForReplacement'
                  SUPPLIER: '#/components/schemas/SupplierForReplacement'
        required: true
      summary: Replace a facility with the given ID
  /api/facilities/{facilityId}/actions:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacilityActionsParameter'
      parameters:
        - description: Reference to the facility you want to call the action for
          in: path
          name: facilityId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedFacility'
          description: Updated Facility in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Core - Facilities
      operationId: facilityAction
      summary: Call a single action on a given facility
  /api/facilities/{facilityId}/carriers:
    get:
      parameters:
        - description: ID of facility you want to get
          in: path
          name: facilityId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StrippedCarriers'
          description: >-
            Carriers are found & you were allowed to access it. The result is in
            the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Carriers not found
      tags:
        - Last Mile Integration - Carriers
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getFacilityCeps
      summary: Get the available CEPs for a facility
      x-badges:
        - color: orange
          label: BETA
  /api/facilities/{facilityId}/configurations/stock:
    get:
      parameters:
        - description: ID of facility you want to retrieve the configurations for
          in: path
          name: facilityId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityStockConfiguration'
          description: Configuration for stock routing was found.
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: No active configurations found for this facility
      tags:
        - Inventory Management - Stocks
      operationId: getFacilityStockConfiguration
      summary: >-
        Gets the facility's current configuration for stock related order
        distribution
    patch:
      parameters:
        - description: ID of facility you want to get
          in: path
          name: facilityId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityStockConfiguration'
          description: >-
            Facility was found & patch-set has been applied. The patched
            facility configuration is in the body.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Facility Configuration not found
        '409':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Facility version conflict
      tags:
        - Inventory Management - Stocks
      description: ''
      operationId: patchFacilityConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StockConfigurationPatchActions'
        description: Patch set
        required: true
      summary: Patches a facility configuration with the given ID
  /api/facilities/{facilityId}/listings:
    get:
      parameters:
        - description: ID of facility you want to get listing
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: all entities after given Id
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of facilities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
        - description: Array of tenantArticleIds
          in: query
          name: tenantArticleIds
          required: false
          explode: false
          schema:
            type: array
            maxItems: 500
            items:
              type: string
        - description: limit results to this scannableCode
          in: query
          name: scannableCode
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StrippedListings'
          description: >-
            Facility was found & you were allowed to access it. The results are
            in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Facility not found
      tags:
        - Core - Listings
      description: ''
      operationId: getFacilityListing
      summary: Get a facility with the given ID
    put:
      parameters:
        - description: ID of facility you want to put listings to
          in: path
          name: facilityId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ListingBulkOperationResult'
          description: >-
            Facility listing was found & you were allowed to access it. The
            result is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Facility listing not found
      tags:
        - Core - Listings
      description: >-
        Bulk PUT for Listings. Please note: This endpoint has legacy behaviour,
        i.e. all PUTs fail if a single PUT fails.
      operationId: putFacilityListing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListingsForReplacement'
        description: listings for put
        required: true
      summary: Create or Update listings of a facility with the given ID
    delete:
      parameters:
        - description: ID of facility you want to delete all listings of
          in: path
          name: facilityId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Facility listings were found and successfully deleted
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Facility listing not found
      tags:
        - Core - Listings
      description: ''
      operationId: deleteListingsOfFacility
      summary: deletes all listings of a facility with the given ID
  /api/facilities/{facilityId}/listings/{tenantArticleId}:
    delete:
      parameters:
        - description: ID of facility you want to delete a listing of
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: tenant ID of the articles listing you want to delete
          in: path
          name: tenantArticleId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Facility listing was found and successfully deleted
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Facility listing not found
      tags:
        - Core - Listings
      description: ''
      operationId: deleteFacilityListing
      summary: deletes a listing with the given ID of a facility with the given ID
    get:
      parameters:
        - description: ID of facility you want to get listing
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: tenantArticleId of listing you want to get
          in: path
          name: tenantArticleId
          required: true
          schema:
            type: string
        - description: >-
            Provide the localized names and descriptions for the listing. If not
            provided the default locale is used., for example de_DE.
          in: query
          name: locale
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Listing'
          description: >-
            Listing is found & you were allowed to access it. The result is in
            the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Listings not found
      tags:
        - Core - Listings
      description: ''
      operationId: getListing
      summary: Get a Listings with the given ID
    patch:
      parameters:
        - description: ID of facility you want to patch a listing of
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: tenant ID of the articles listing you want to patch
          in: path
          name: tenantArticleId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Listing'
                type: array
          description: Facility listing was found and successfully patched
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Facility listing not found
        '409':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Listing version conflict
      tags:
        - Core - Listings
      description: ''
      operationId: patchFacilityListing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListingPatchActions'
        description: listings for put
        required: true
      summary: Update a listing with the given ID of a facility with the given ID
  /api/facilities/{facilityId}/listings/{tenantArticleId}/partialstocks:
    get:
      deprecated: true
      description: >-
        This part of the API is deprecated. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />This endpoint is deprecated. Use /api/stocks endpoints instead.
      parameters:
        - description: ID of facility you want to get the partial stocks
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: ID of listing you want to get partial stocks
          in: path
          name: tenantArticleId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PartialStock'
                type: array
          description: >-
            Facility and listing were found & you are allowed to access it. The
            result is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Facility or Listing not found
      tags:
        - Core - Listings
      operationId: getFacilityListingPartialStock
      summary: Get a partial stocks for a listing
    put:
      deprecated: true
      description: >
        This part of the API is deprecated. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />This endpoint is deprecated. Use /api/stocks endpoints instead.

        Replaces the current partial stock object related to its listing
      parameters:
        - description: ID of facility you want to get listing
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: ID of listing you want to get partial stocks
          in: path
          name: tenantArticleId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Facility listing was found & you were allowed to update it.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Facility listing not found
      tags:
        - Core - Listings
      operationId: putFacilityListingPartialStock
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartialStocksForReplacement'
        description: Patch set
        required: true
      summary: Replace partial stocks of a listings of a facility with the given ID
    patch:
      deprecated: true
      description: >
        This part of the API is deprecated. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />This endpoint is deprecated. Use /api/stocks endpoints instead.

        Adds new partial stocks, updates existing partial stocks and keeps
        stocks that are previously present in the database.


        1. If a stock exists in the patch action but not in the database it is
        added.

        2. If a stock exists both in the patch action and in the database it is
        updated and the contents are merged.

        3. If a stock exists only in the database, it is left untouched.
      parameters:
        - description: ID of facility you want to patch the partial stocks
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: ID of listing you want to get partial stocks
          in: path
          name: tenantArticleId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Facility listing was found & you were allowed to update it.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Facility listing not found
      tags:
        - Core - Listings
      operationId: patchFacilityListingPartialStock
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartialStockPatchActions'
        description: Patch set
        required: true
      summary: Patches partial stocks of a listings of a facility with the given ID
    delete:
      deprecated: true
      description: >-
        This part of the API is deprecated. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />This endpoint is deprecated. Use /api/stocks endpoints instead.
      parameters:
        - description: ID of facility from whom you want to delete the partial stock
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: ID of listing you want to get partial stocks
          in: path
          name: tenantArticleId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >-
            Facility listing was found & you were allowed to delete the partial
            stock.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Facility listing not found
      tags:
        - Core - Listings
      operationId: deleteFacilityListingPartialStock
      summary: Delete partial stocks of a listings of a facility with the given ID
  /api/facilitygroups:
    get:
      parameters:
        - description: Returns all entries that were created after the entry with this ID.
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: Specifies the number of facility groups to return.
          in: query
          name: size
          required: false
          schema:
            default: 25
            maximum: 100
            type: integer
        - description: Filters facility groups by the given tenant facility group ID.
          in: query
          name: tenantFacilityGroupId
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityGroups'
          description: The facility groups that were found based on the given filters.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            The user is not authenticated or not allowed to operate against this
            API instance.
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: The user is not authorized to access this API instance.
      tags:
        - Core - FacilityGroups
      description: ''
      operationId: getAllFacilityGroups
      summary: Return all facility groups
    post:
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityGroup'
          description: The facility group was successfully created.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. Please refer to the response for more details.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            The user is not authenticated or not allowed to operate against this
            API instance.
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: The user is not authorized to access this API instance.
      tags:
        - Core - FacilityGroups
      description: ''
      operationId: addFacilityGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacilityGroupForCreation'
        description: >-
          Representation of a facility group, including relevant details such as
          ID, name, description, and associated data.
        required: true
      summary: Add a new facility group
  /api/facilitygroups/{facilityGroupId}:
    delete:
      parameters:
        - description: The ID of the facility to be deleted.
          in: path
          name: facilityGroupId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Facility group was found and deleted.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            The user is not authenticated or not allowed to operate against this
            API instance.
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: The user is not authorized to access this API instance.
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Facility group not found.
      tags:
        - Core - FacilityGroups
      description: ''
      operationId: deleteFacilityGroup
      summary: deletes a facility group with the given ID
    get:
      parameters:
        - description: The ID of the requested facility group.
          in: path
          name: facilityGroupId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityGroup'
          description: Facility group was found. The result is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            The user is not authenticated or not allowed to operate against this
            API instance.
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: The user is not authorized to access this API instance.
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Facility group not found.
      tags:
        - Core - FacilityGroups
      description: ''
      operationId: getFacilityGroup
      summary: Get a facility group with the given ID
    patch:
      parameters:
        - description: The ID of the facility group to update.
          in: path
          name: facilityGroupId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityGroup'
          description: >-
            Facility group was replaced. The replaced facility group is in the
            body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            The user is not authenticated or not allowed to operate against this
            API instance.
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: The user is not authorized to access this API instance.
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Facility group not found.
        '409':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Facility group version conflict.
      tags:
        - Core - FacilityGroups
      operationId: replaceFacilityGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacilityGroupForUpdate'
        required: true
      summary: Replace a facility group with the given ID
  /api/validations/postalcodes:
    post:
      responses:
        '200':
          description: The given postal code is valid for the given country
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: The given postal code is invalid for the given country
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '422':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: The given country can't be validated
      tags:
        - Core - Validations
      description: ''
      operationId: validatePostalCode
      summary: Validate a given postal code for a given country
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostalCodeValidation'
        description: Branding object
        required: true
  /api/features:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Feature'
          description: The available feature for all active modules
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Infrastructure - Features
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getFeatures
      summary: Returns all features grouped by active modules
      x-badges:
        - color: orange
          label: BETA
  /api/features/{featureName}:
    get:
      parameters:
        - description: Name of the feature requested
          in: path
          name: featureName
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
          description: The requested feature
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Infrastructure - Features
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getFeature
      summary: Returns a feature
      x-badges:
        - color: orange
          label: BETA
    patch:
      parameters:
        - description: Name of the feature requested
          in: path
          name: featureName
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
          description: >-
            Module was found & patch-set has been applied. The patched entity is
            in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
        '409':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity version conflict
      tags:
        - Infrastructure - Features
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: patchFeature
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeaturePatchActions'
        description: Patch set
        required: true
      summary: Patches a feature
      x-badges:
        - color: orange
          label: BETA
  /api/pickruns:
    post:
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PickRun'
          description: >-
            The PickRun was successfully created. The Location header contains
            the URL of it.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
      tags:
        - Fulfillment Operations - Picking
      description: ''
      operationId: addPickRun
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PickRunForCreation'
        required: true
      summary: Add a new PickRun
  /api/pickruns/{pickRunId}:
    get:
      parameters:
        - description: id of pickRun
          in: path
          name: pickRunId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PickRun'
          description: PickRun is found.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Fulfillment Operations - Picking
      description: ''
      operationId: getPickRun
      summary: Return a PickRun
    patch:
      parameters:
        - description: id of pickRun
          in: path
          name: pickRunId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PickRun'
          description: The updated PickRun.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '409':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Version conflict
      tags:
        - Fulfillment Operations - Picking
      description: ''
      operationId: patchPickRun
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PickRunPatchAction'
        required: true
  /api/pickruns/{pickRunId}/pickjobs:
    patch:
      parameters:
        - description: id of pickRun
          in: path
          name: pickRunId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PickRunPickJobsPatchAction'
      responses:
        '200':
          description: Pick job was successfully from pick run removed.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Fulfillment Operations - Picking
      description: ''
      operationId: patchPickRunPickJobs
      summary: Update pick jobs of a pick run
  /api/pickruns/{pickRunId}/actions:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PickRunActionsParameter'
      parameters:
        - description: Reference to the pick run you want to call the action for
          in: path
          name: pickRunId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PickRun'
          description: Updated Pick Run in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Fulfillment Operations - Picking
      operationId: pickRunAction
      summary: Call a single action on a given pickRun
  /api/handoverjobs:
    get:
      parameters:
        - description: all entities after given Id
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
        - description: This query can be used to find handoverjobs for a referenced pickjob
          in: query
          name: pickJobRef
          required: false
          schema:
            type: string
        - description: >-
            This query can be used to find handoverjobs for a referenced
            shipment
          in: query
          name: shipmentRef
          required: false
          schema:
            type: string
        - description: Reference the assigned user on this entity - id or username
          in: query
          name: assignedUser
          required: false
          schema:
            type: string
        - description: >-
            Reference to the facility you want to get the corresponding
            handoverJobs
          in: query
          name: facilityRef
          required: false
          schema:
            type: string
        - description: >-
            Reference to the status you want to get the corresponding
            handoverJobs
          explode: true
          in: query
          name: status
          required: false
          schema:
            items:
              type: string
            type: array
        - description: >-
            Reference to the carriers you want to get the corresponding
            handoverJobs
          in: query
          name: carrierRefs
          required: false
          schema:
            type: array
            items:
              type: string
        - description: >-
            Reference to the channel you want to get the corresponding
            handoverJobs
          in: query
          name: channel
          required: false
          schema:
            type: string
        - description: Parameter to filter anonymized handover jobs
          in: query
          name: anonymized
          required: false
          schema:
            type: boolean
        - description: Perform full text search over all searchable attributes
          in: query
          name: searchTerm
          required: false
          schema:
            type: string
        - description: Start date range for pick jobs
          in: query
          name: startTargetTime
          required: false
          schema:
            type: string
            example: '2020-02-03T08:45:50.525Z'
            format: date-time
        - description: End date range for pick jobs
          in: query
          name: endTargetTime
          required: false
          schema:
            type: string
            example: '2020-02-03T08:45:50.525Z'
            format: date-time
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StrippedHandoverjobs'
          description: Handoverjobs are found.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Fulfillment Operations - Handover
      description: ''
      operationId: getAllHandoverjobs
      summary: Return all handoverjobs
    post:
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Handoverjob'
          description: >-
            The handoverjob was successfully created. The Location header
            contains the URL of it.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Fulfillment Operations - Handover
      operationId: addHandoverjob
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HandoverjobForCreation'
        required: true
      summary: Add a new handoverjob
  /api/handoverjobs/{handoverjobId}:
    get:
      parameters:
        - description: ID of the handoverjob you want to get
          in: path
          name: handoverjobId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Handoverjob'
          description: >-
            Handoverjob was found & you were allowed to access it. The result is
            in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Handover
      description: ''
      operationId: getHandoverjob
      summary: Get a Handoverjob with the given ID
    patch:
      parameters:
        - description: ID of handoverjob you want to patch
          in: path
          name: handoverjobId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Handoverjob'
          description: >-
            Handoverjob was found & patch-set has been applied. The patched
            entity is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
        '409':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity version conflict
      tags:
        - Fulfillment Operations - Handover
      description: ''
      operationId: patchHandoverjob
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HandoverjobPatchActions'
        description: Patch set
        required: true
      summary: Patches a handoverjob with the given ID
  /api/handoverjobs/{handoverJobId}/actions:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HandoverJobActionsParameter'
      parameters:
        - description: Reference to the handover job you want to call the action for
          in: path
          name: handoverJobId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Handoverjob'
          description: Updated Handover job in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Fulfillment Operations - Handover
      operationId: handoverJobAction
      summary: Call a single action on a given Handover job
  /api/loadunits:
    delete:
      parameters:
        - description: Reference to the pickJob of which you want to delete the loadUnits
          in: query
          name: pickJobRef
          required: false
          schema:
            type: string
        - description: Load unit ids
          explode: true
          in: query
          name: id
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadUnits'
          description: Load units are successfully deleted.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
        '422':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: LoadUnits could not be removed due to failing conditions
      tags:
        - Fulfillment Operations - Picking
      operationId: deleteLoadUnits
      summary: Delete loadunits by pickJobRef
    get:
      parameters:
        - description: all entities after given Id
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of loadUnits to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
        - description: query load units with the given pickJobRef
          in: query
          name: pickJobRef
          required: false
          schema:
            type: string
        - description: >-
            Provide the localized names and descriptions for the routing
            configuration. If not provided the default locale is used., for
            example de_DE
          in: query
          name: locale
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadUnits'
          description: Load units are found.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Fulfillment Operations - Picking
      operationId: getAllLoadUnits
      summary: Return all load units
    post:
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadUnits'
          description: Load units are successfully created.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Fulfillment Operations - Picking
      operationId: addLoadUnit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoadUnitsForCreation'
        description: Representation that describes the unit load
        required: true
      summary: Add new load units
  /api/loadunits/{loadUnitId}:
    delete:
      parameters:
        - in: path
          name: loadUnitId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadUnit'
          description: Successfully deleted load unit.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Picking
      operationId: deleteLoadUnit
      summary: Delete load unit
    get:
      parameters:
        - in: path
          name: loadUnitId
          required: true
          schema:
            type: string
        - description: >-
            Provide the localized names and descriptions for the routing
            configuration. If not provided the default locale is used., for
            example de_DE
          in: query
          name: locale
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadUnit'
          description: The found load unit.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Picking
      operationId: getLoadUnitByID
      summary: Get a loadUnit by its ID
    patch:
      parameters:
        - in: path
          name: loadUnitId
          required: true
          schema:
            type: string
        - description: >-
            Provide the localized names and descriptions for the routing
            configuration. If not provided the default locale is used., for
            example de_DE
          in: query
          name: locale
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadUnit'
          description: The found load unit.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Picking
      operationId: patchLoadUnitByID
      summary: Patch a loadUnit by its ID
      requestBody:
        content:
          application/json:
            schema:
              anyOf:
                - $ref: '#/components/schemas/LoadUnitPatchActions'
                - $ref: '#/components/schemas/LoadUnit'
        required: true
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />LoadUnitPatchActions: Deprecated - For future usage please use the
        /actions endpoints mentioned in the corresponding PatchActions

        LoadUnit: Partial Patch on this entity.
      x-badges:
        - color: orange
          label: BETA
  /api/loadunits/{loadUnitId}/stack:
    get:
      parameters:
        - in: path
          name: loadUnitId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stack'
          description: The found stack for this load unit.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Picking
      operationId: getStackForLoadUnit
      summary: Get the stack of this load unit by its ID
  /api/loadunittypes:
    get:
      parameters:
        - description: all entities after given Id
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
        - description: >-
            Provide the localized names and descriptions for the routing
            configuration. If not provided the default locale is used., for
            example de_DE
          in: query
          name: locale
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadUnitTypes'
          description: All load unit types.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Picking
      operationId: getLoadUnitTypes
      summary: Get all load unit types, use operative container types
      deprecated: true
    post:
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadUnitType'
          description: Successfully created resource.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Fulfillment Operations - Picking
      operationId: createLoadUnitTypes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoadUnitTypeForCreation'
        required: true
      summary: Create new load unit type, use operative container types
      deprecated: true
  /api/loadunittypes/{loadUnitTypeId}:
    get:
      parameters:
        - in: path
          name: loadUnitTypeId
          required: true
          schema:
            type: string
        - description: >-
            Provide the localized names and descriptions for the routing
            configuration. If not provided the default locale is used., for
            example de_DE
          in: query
          name: locale
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadUnitType'
          description: The found load unit type.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Picking
      operationId: getLoadUnitTypeByID
      summary: Get a loadUnitType by its ID, use operative container types
      deprecated: true
    patch:
      parameters:
        - in: path
          name: loadUnitTypeId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadUnitType'
          description: Successfully updated load unit type.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Picking
      operationId: updateLoadUnitType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoadUnitTypePatchActions'
        description: Patch set
        required: true
      summary: Update load unit type, use operative container types
      deprecated: true
  /api/loadunittypes/{loadUnitTypeId}/icon:
    put:
      parameters:
        - in: path
          name: loadUnitTypeId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadUnitType'
          description: Successfully updated load unit type icon.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadUnitType'
          description: Successfully created load unit type icon.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Picking
      operationId: uploadLoadUnitTypeIcon
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NamedFile'
        description: Base64 encoded icon to upload
        required: true
      summary: Upload icon for load unit type, use operative container types
      deprecated: true
  /api/measurementunits:
    get:
      parameters:
        - description: all entities after given Id
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of measurementUnits to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
        - description: key of the measurementUnit
          in: query
          name: key
          required: false
          schema:
            type: string
        - description: >-
            Provide the localized names for the measurementUnit. If not provided
            the default locale is used., for example de_DE.
          in: query
          name: locale
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeasurementUnits'
          description: The found measurementUnit.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Core - Listings
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getAllMeasurementUnits
      summary: Get all measurementUnits
      x-badges:
        - color: orange
          label: BETA
    post:
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeasurementUnit'
          description: Successfully created the measurementUnit.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Core - Listings
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: createMeasurementUnit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeasurementUnitForCreation'
      summary: Create measurementUnit
      x-badges:
        - color: orange
          label: BETA
  /api/measurementunits/{measurementUnitId}:
    delete:
      parameters:
        - in: path
          name: measurementUnitId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully deleted the measurementUnit.
        '401':
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Core - Listings
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: deleteMeasurementUnit
      summary: Delete measurementUnit
      x-badges:
        - color: orange
          label: BETA
    get:
      parameters:
        - in: path
          name: measurementUnitId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeasurementUnit'
          description: The found measurementUnit.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Core - Listings
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getMeasurementUnitByID
      summary: Get a measurementUnit by its ID
      x-badges:
        - color: orange
          label: BETA
    put:
      parameters:
        - in: path
          name: measurementUnitId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeasurementUnit'
          description: Successfully updated the measurementUnit.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Core - Listings
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: updateMeasurementUnit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeasurementUnitForCreation'
        required: true
      summary: Update measurementUnit
      x-badges:
        - color: orange
          label: BETA
  /api/parcels:
    get:
      parameters:
        - description: all entities after given Id
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StrippedParcels'
          description: Parcels are found.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Fulfillment Operations - Shipments
      description: ''
      operationId: getAllParcels
      summary: Return all parcels
  /api/parcels/{parcelId}:
    delete:
      parameters:
        - description: ID of the parcel you want to delete
          in: path
          name: parcelId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Parcel was successfully deleted
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Shipments
      description: ''
      operationId: deleteParcel
      summary: Delete a parcel with the given ID
    get:
      parameters:
        - description: ID of the parcel you want to get
          in: path
          name: parcelId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parcel'
          description: >-
            Parcel was found & you were allowed to access it. The result is in
            the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Shipments
      description: ''
      operationId: getParcel
      summary: Get a parcel with the given ID
    patch:
      parameters:
        - description: ID of the parcel you want to get
          in: path
          name: parcelId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parcel'
          description: Successfully updated the parcel.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Shipments
      description: ''
      operationId: patchParcel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParcelPatchActions'
        description: Patch set
        required: true
      summary: Patches a parcel with the given ID
  /api/parcels/{parcelId}/actions:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParcelActionsParameter'
      parameters:
        - description: Reference to the parcel you want to call an action for
          in: path
          name: parcelId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parcel'
          description: Updated Parcel in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Fulfillment Operations - Shipments
      operationId: parcelAction
      summary: Call a single action on a given parcel
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      x-badges:
        - color: red
          label: ALPHA
  /api/parcels/{parcelId}/labels/{labelDocument}:
    get:
      parameters:
        - description: ID of the parcel you want to get a label for
          in: path
          name: parcelId
          required: true
          schema:
            type: string
        - description: >-
            Within a parcel different labels can be created. The following types
            of labels are currently supported: all.pdf, send.pdf and return.pdf
            = Parcel label plus (if configured) retoure label.
          in: path
          name: labelDocument
          required: true
          schema:
            $ref: '#/components/schemas/ParcelLabelTypeEnum'
      responses:
        '200':
          content:
            application/pdf: {}
          description: >-
            Parcel was found & you were allowed to access it. The label is in
            the body.
        '401':
          content:
            application/pdf:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/pdf:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/pdf:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Shipments
      description: ''
      operationId: getLabelForParcel
      summary: Get a label for the parcel with the given ID
  /api/parcels/{parcelId}/deliverynote:
    get:
      parameters:
        - description: ID of parcel you want to retrieve deliveryNote for
          in: path
          name: parcelId
          required: true
          schema:
            type: string
        - description: >-
            Provide the localized values for the delivery note. If not provided
            the default locale is used. For example de_DE.
          in: query
          name: locale
          schema:
            type: string
      responses:
        '200':
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/DeliveryNote'
          description: Get delivery note as pdf.
        '401':
          content:
            application/pdf:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/pdf:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/pdf:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Parcel not found
      tags:
        - Fulfillment Operations - Shipments
      operationId: getParcelDeliveryNote
      summary: Get deliveryNote for a parcel
  /api/parcels/{parcelId}/returnnote:
    get:
      parameters:
        - description: ID of parcel you want to retrieve returnNote for
          in: path
          name: parcelId
          required: true
          schema:
            type: string
        - description: >-
            Provide the localized values for the returnNote. If not provided the
            default locale is used. For example de_DE.
          in: query
          name: locale
          schema:
            type: string
      responses:
        '200':
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/ReturnNote'
          description: Get delivery note as pdf.
        '401':
          content:
            application/pdf:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/pdf:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/pdf:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Parcel not found
      tags:
        - Fulfillment Operations - Shipments
      operationId: getParcelReturnNote
      summary: Get returnNote for a parcel
  /api/parcels/{parcelId}/transferlabel:
    get:
      parameters:
        - description: ID of the parcel for which you want to get a transfer label
          in: path
          name: parcelId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/pdf: {}
          description: The transfer label for the given parcel
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Shipments
      description: ''
      operationId: getParcelTransferLabel
      summary: Get a transfer label for the parcel with the given ID
  /api/pickjobs:
    get:
      parameters:
        - description: >-
            Search term you want to get the corresponding pickjobs. Search will
            be performed on multiple fields, like tenantOrderId, consumerName,
            tenantArticleId and more
          in: query
          name: searchTerm
          required: false
          schema:
            type: string
        - description: Reference to the carrier you want to get the corresponding pickjobs
          explode: false
          in: query
          name: carrierKeys
          required: false
          schema:
            items:
              type: string
              maxItems: 100
            type: array
        - description: >-
            Reference to the orderDate you want to get the corresponding
            pickjobs
          in: query
          name: startOrderDate
          required: false
          schema:
            type: string
        - description: >-
            Reference to the orderDate you want to get the corresponding
            pickjobs
          in: query
          name: endOrderDate
          required: false
          schema:
            type: string
        - description: Reference to the order you want to get the corresponding pickjobs
          in: query
          name: orderRef
          required: false
          schema:
            type: string
        - description: Reference to the facility you want to get the corresponding pickjobs
          in: query
          name: facilityRef
          required: false
          schema:
            type: string
        - description: Reference the assigned user on this entity - id or username
          in: query
          name: assignedUser
          required: false
          schema:
            type: string
        - description: Reference to the status you want to get the corresponding pickjobs
          explode: false
          in: query
          name: status
          required: false
          schema:
            items:
              type: string
            type: array
        - description: Reference to the zones you want to get the corresponding pickjobs
          explode: false
          in: query
          name: zoneRefs
          required: false
          schema:
            items:
              type: string
            type: array
        - description: >-
            Reference to the tenantOrderId you want to get the corresponding
            pickjobs
          in: query
          name: tenantOrderId
          required: false
          schema:
            type: string
        - description: The channel of the pickJob you want to filter by
          in: query
          name: channel
          required: false
          schema:
            enum:
              - COLLECT
              - SHIPPING
            type: string
        - description: >-
            Reference to the consumer name you want to get the corresponding
            pickjobs
          in: query
          name: consumerName
          required: false
          schema:
            type: string
        - description: Reference to the shortId you want to get the corresponding pickjobs
          in: query
          name: shortId
          required: false
          schema:
            type: string
        - description: >-
            Reference to the articleTitle you want to get the corresponding
            pickjobs
          in: query
          name: articleTitle
          required: false
          schema:
            type: string
        - description: >-
            Reference to the anonymized you want to get the corresponding
            pickjobs
          in: query
          name: anonymized
          required: false
          schema:
            type: boolean
        - description: all entities after given Id
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
        - description: query pickjobs orderBy
          in: query
          name: orderBy
          required: false
          schema:
            type: string
        - description: Start date range for pick jobs
          in: query
          name: startTargetTime
          required: false
          schema:
            type: string
            example: '2020-02-03T08:45:50.525Z'
            format: date-time
        - description: End date range for pick jobs
          in: query
          name: endTargetTime
          required: false
          schema:
            type: string
            example: '2020-02-03T08:45:50.525Z'
            format: date-time
        - description: Reference to pickjobs
          explode: false
          in: query
          name: pickJobRefs
          required: false
          schema:
            items:
              type: string
              maxItems: 100
            type: array
        - description: Reference to the user ID you want to get the corresponding pickjobs
          in: query
          name: modifiedByUsername
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StrippedPickJobs'
          description: PickJobs were found. The results are in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Fulfillment Operations - Picking
      operationId: queryPickJobs
      summary: Simple query interface to find pickjobs
    post:
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PickJob'
          description: >-
            The pick job was successfully created. The Location header contains
            the URL of the pickjob.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Fulfillment Operations - Picking
      description: ''
      operationId: addPickJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PickJobForCreation'
        description: Pick job object
        required: true
      summary: Add a new pick job for fulfillment
  /api/documents/{documentId}/file:
    get:
      parameters:
        - in: path
          name: documentId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The document with given id
      tags:
        - Core - Processes
      description: ''
      operationId: downloadProcessDocument
      summary: Download a document
  /api/documentSet/{documentSetRef}:
    get:
      parameters:
        - description: Reference to the entity you want to get
          in: path
          name: documentSetRef
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentSet'
          description: Documents were found. The results are in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Core - Document Sets
      operationId: getDocumentSetDeprecated
      summary: Simple query interface to find documents
      deprecated: true
      description: Deprecated, use /api/documentsets/{documentSetRef} instead
  /api/documentSet/{documentSetRef}/documents:
    post:
      parameters:
        - description: Reference to the documentSet you want to add a file to
          in: path
          name: documentSetRef
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalPrintableDocumentForCreation'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrintableDocument'
          description: Document was found. The results are in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Core - Document Sets
      operationId: addDocumentDeprecated
      deprecated: true
      description: Deprecated, use /api/documentsets/{documentSetRef}/documents instead
  /api/documentSet/{documentSetRef}/documents/{documentRef}:
    patch:
      parameters:
        - description: Reference to the documentSet you want to update
          in: path
          name: documentSetRef
          required: true
          schema:
            type: string
        - description: Reference to the single document you want to update
          in: path
          name: documentRef
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrintableDocumentForUpdate'
        description: PartialDocument
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrintableDocument'
          description: Document was found. The results are in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Core - Document Sets
      operationId: updateDocumentDeprecated
      summary: Simple query interface to find documents
      deprecated: true
      description: >-
        Deprecated, use
        /api/documentsets/{documentSetRef}/documents/{documentRef} instead
  /api/documentSet/{documentSetRef}/documents/{documentRef}/file:
    get:
      parameters:
        - description: Reference to the documentSet you want to download a file from
          in: path
          name: documentSetRef
          required: true
          schema:
            type: string
        - description: Reference to the single document you want to download
          in: path
          name: documentRef
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The document as a stream
      tags:
        - Core - Document Sets
      description: ''
      operationId: downloadDocumentDeprecated
      summary: Download a document
    put:
      parameters:
        - description: Reference to the documentSet you want to update
          in: path
          name: documentSetRef
          required: true
          schema:
            type: string
        - description: Reference to the single document you want to update
          in: path
          name: documentRef
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalDocumentContentForUpdate'
        description: Document Content with id and version
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrintableDocument'
          description: Changed Document
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Core - Document Sets
      operationId: addContentToDocumentDeprecated
      deprecated: true
      description: >-
        Deprecated, use
        /api/documentsets/{documentSetRef}/documents/{documentRef}/file instead
  /api/documentsets/{documentSetRef}:
    get:
      parameters:
        - description: Reference to the entity you want to get
          in: path
          name: documentSetRef
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentSet'
          description: Documents were found. The results are in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Core - Document Sets
      operationId: getDocumentSet
      description: ''
      summary: Simple query interface to find documents
  /api/documentsets/{documentSetRef}/documents:
    post:
      parameters:
        - description: Reference to the documentSet you want to add a file to
          in: path
          name: documentSetRef
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalPrintableDocumentForCreation'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrintableDocument'
          description: Document was found. The results are in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Core - Document Sets
      operationId: addDocument
  /api/documentsets/{documentSetRef}/documents/{documentRef}:
    patch:
      parameters:
        - description: Reference to the documentSet you want to update
          in: path
          name: documentSetRef
          required: true
          schema:
            type: string
        - description: Reference to the single document you want to update
          in: path
          name: documentRef
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrintableDocumentForUpdate'
        description: PartialDocument
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrintableDocument'
          description: Document was found. The results are in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Core - Document Sets
      operationId: updateDocument
      summary: Simple query interface to find documents
  /api/documentsets/{documentSetRef}/documents/{documentRef}/file:
    get:
      parameters:
        - description: Reference to the documentSet you want to download a file from
          in: path
          name: documentSetRef
          required: true
          schema:
            type: string
        - description: Reference to the single document you want to download
          in: path
          name: documentRef
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The document as a stream
      tags:
        - Core - Document Sets
      description: ''
      operationId: downloadDocument
      summary: Download a document
    put:
      parameters:
        - description: Reference to the documentSet you want to update
          in: path
          name: documentSetRef
          required: true
          schema:
            type: string
        - description: Reference to the single document you want to update
          in: path
          name: documentRef
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalDocumentContentForUpdate'
        description: Document Content with id and version
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrintableDocument'
          description: Changed Document
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Core - Document Sets
      operationId: addContentToDocument
  /api/pickjobs/{pickJobId}/actions:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PickJobActionsParameter'
      parameters:
        - description: Reference to the pick job you want to call an action for
          in: path
          name: pickJobId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PickJob'
          description: Updated PickJob in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Fulfillment Operations - Picking
      operationId: pickJobAction
      summary: Call a single action on a given pickJob
  /api/pickjobs/{pickJobId}/picklineitems/{pickLineItemId}/availablesubstitutes:
    get:
      parameters:
        - description: Reference to the pick job you to get the available substitutes for
          in: path
          name: pickJobId
          required: true
          schema:
            type: string
        - description: >-
            Reference to the pickLineItem you to get the available substitutes
            for
          in: path
          name: pickLineItemId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResolvedSubstitutes'
          description: Available substitutes for given pickLineItem
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Fulfillment Operations - Picking
      operationId: queryPickLineItemsSubstitutes
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      x-badges:
        - color: red
          label: ALPHA
  /api/pickjobs/{pickJobId}/loadunits:
    get:
      parameters:
        - description: >-
            Reference to the pick job you want to get the corresponding
            loadunits
          in: path
          name: pickJobId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadUnits'
          description: Loadunits were found. The results are in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Fulfillment Operations - Picking
      operationId: queryPickJobLoadUnits
      summary: Simple query interface to find load units of a pickjob
    post:
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PickingLoadUnit'
          description: The load units was successfully created.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Fulfillment Operations - Picking
      description: ''
      operationId: addPickJobLoadUnits
      parameters:
        - description: >-
            Reference to the pick job you want to get the corresponding
            loadunits
          in: path
          name: pickJobId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PickingLoadUnitForCreation'
        description: Pick job load unit object
        required: true
      summary: Add a new load unit for pick job
  /api/pickjobs/{pickJobId}:
    get:
      parameters:
        - description: ID of the pickjob you want to get
          in: path
          name: pickJobId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PickJob'
          description: >-
            PickJob was found & you were allowed to access it. The result is in
            the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Picking
      description: ''
      operationId: getPickJob
      summary: Get a pick job with the given ID
    patch:
      parameters:
        - description: ID of the pickjob you want to get
          in: path
          name: pickJobId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PickJob'
          description: >-
            PickJob was found & patch-set has been applied. The patched pick job
            is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: PickJob not found
        '409':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: PickJob version conflict
      tags:
        - Fulfillment Operations - Picking
      description: ''
      operationId: patchPickJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PickingPatchActions'
        description: Patch set
        required: true
      summary: Patches a pick job with the given ID
  /api/pickjobs/{pickjobId}/returnnote:
    get:
      parameters:
        - description: ID of the Pickjob
          in: path
          name: pickjobId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/pdf: {}
          description: Returns a return note for the pickjob.
        '401':
          content:
            application/pdf:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/pdf:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/pdf:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Picking
      description: ''
      operationId: getReturnNotesForPickjob
      summary: Get the return note for the pickjob with the given ID
  /api/pickjobs/{pickJobId}/deliverynote:
    get:
      parameters:
        - description: ID of the pick job for which you want to get a deliverynote
          in: path
          name: pickJobId
          required: true
          schema:
            type: string
        - description: >-
            Provide the localized values for the delivery note. If not provided
            the default locale is used. For example de_DE
          in: query
          name: locale
          schema:
            type: string
      responses:
        '200':
          content:
            application/pdf: {}
          description: The deliverynote for the given pickjob
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Picking
      description: ''
      operationId: getPickJobDeliveryNote
      summary: Get a deliverynote for the pick job with the given ID
  /api/pickjobs/{pickJobId}/transferlabel:
    get:
      parameters:
        - description: ID of the pick job for which you want to get a transfer label
          in: path
          name: pickJobId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/pdf: {}
          description: The transfer label for the given pickjob
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Picking
      description: ''
      operationId: getPickJobTransferLabel
      summary: Get a transfer label for the pick job with the given ID
  /api/process:
    get:
      parameters:
        - in: query
          name: tenantOrderId
          required: false
          schema:
            type: string
        - in: query
          name: orderRef
          required: false
          schema:
            type: string
        - in: query
          name: pickJobRef
          required: false
          schema:
            type: string
        - in: query
          name: shipmentRef
          required: false
          schema:
            type: string
        - in: query
          name: handoverJobRef
          required: false
          schema:
            type: string
        - in: query
          name: returnRef
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
          description: Process belonging to the given parameters
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: The given parameters are invalid
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Core - Processes
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getProcesses
      summary: >-
        Returns a process belonging to the given parameters. At least one
        parameter needs to be supplied.
      x-badges:
        - color: orange
          label: BETA
  /api/processes:
    get:
      parameters:
        - description: all entities after given Id
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
        - description: Reference to the status you want to get the corresponding processes
          explode: true
          in: query
          name: status
          required: false
          schema:
            type: array
            items:
              type: string
        - description: >-
            Reference to the operativeStatus you want to get the corresponding
            processes
          explode: true
          in: query
          name: operativeStatus
          required: false
          schema:
            type: array
            items:
              type: string
        - description: >-
            Reference to the trackingStatus you want to get the corresponding
            processes
          explode: true
          in: query
          name: trackingStatus
          required: false
          schema:
            type: array
            items:
              type: string
        - description: Perform full text search based on the tenantOrderId
          in: query
          name: tenantOrderId
          required: false
          schema:
            type: string
        - description: Perform full text search based on the consumerId
          in: query
          name: consumerId
          required: false
          schema:
            type: string
        - description: >-
            Return the Processes which have related pickjobs with a targettime
            on or after this date
          in: query
          name: startTargetTime
          required: false
          schema:
            type: string
            example: '2020-02-03T08:45:50.525Z'
            format: date-time
        - description: >-
            Return the Processes which have related pickjobs with a targettime
            on or before this date
          in: query
          name: endTargetTime
          required: false
          schema:
            type: string
            example: '2020-02-03T08:45:50.525Z'
            format: date-time
        - description: Return the Processes created on or after this date
          in: query
          name: startDate
          required: false
          schema:
            type: string
            example: '2020-02-03T08:45:50.525Z'
            format: date-time
        - description: Return the Processes created on or before this date
          in: query
          name: endDate
          required: false
          schema:
            type: string
            example: '2020-02-03T08:45:50.525Z'
            format: date-time
        - description: Id's of the facilities from which you want to get the processes
          explode: true
          in: query
          name: facilityRefs
          required: false
          schema:
            type: array
            items:
              type: string
        - description: >-
            Id's of the active facilities based on processes from which you want
            to get the processes
          explode: true
          in: query
          name: facilityRefsWithActiveOperations
          required: false
          schema:
            type: array
            items:
              type: string
        - description: Consumer country codes from which you want to get the processes
          explode: true
          in: query
          name: countries
          required: false
          schema:
            type: array
            items:
              type: string
        - description: Facility country codes from which you want to get the processes
          explode: true
          in: query
          name: facilityCountries
          required: false
          schema:
            type: array
            items:
              type: string
        - description: Brand ids for which you want to get the processes
          explode: true
          in: query
          name: brandRefs
          required: false
          schema:
            type: array
            items:
              type: string
        - description: Order delivery preferences service level
          explode: true
          in: query
          name: serviceLevels
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - DELIVERY
                - SAMEDAY
        - description: Whether an order is click and collect or delivery
          explode: true
          in: query
          name: serviceTypes
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - COLLECT
                - SHIPPING
        - description: >-
            Reference to the orderDomainStatus you want to get the corresponding
            processes
          explode: true
          in: query
          name: orderDomainStatus
          required: false
          schema:
            type: array
            items:
              type: string
        - description: >-
            Reference to the routingDomainStatus you want to get the
            corresponding processes
          explode: true
          in: query
          name: routingDomainStatus
          required: false
          schema:
            type: array
            items:
              type: string
        - description: >-
            Reference to the pickingDomainStatus you want to get the
            corresponding processes
          explode: true
          in: query
          name: pickingDomainStatus
          required: false
          schema:
            type: array
            items:
              type: string
        - description: >-
            Reference to the packingDomainStatus you want to get the
            corresponding processes
          explode: true
          in: query
          name: packingDomainStatus
          required: false
          schema:
            type: array
            items:
              type: string
        - description: >-
            Reference to the shippingDomainStatus you want to get the
            corresponding processes
          explode: true
          in: query
          name: shippingDomainStatus
          required: false
          schema:
            type: array
            items:
              type: string
        - description: >-
            Reference to the handoverDomainStatus you want to get the
            corresponding processes
          explode: true
          in: query
          name: handoverDomainStatus
          required: false
          schema:
            type: array
            items:
              type: string
        - description: >-
            Reference to the returnDomainStatus you want to get the
            corresponding processes
          explode: true
          in: query
          name: returnDomainStatus
          required: false
          schema:
            type: array
            items:
              type: string
        - description: Stickers attached to a order
          explode: true
          in: query
          name: stickers
          required: false
          schema:
            type: array
            items:
              type: string
        - description: Perform full text search over all searchable attributes
          in: query
          name: searchTerm
          required: false
          schema:
            type: string
        - description: SortingParameter name for the query
          in: query
          name: sortBy
          required: false
          schema:
            $ref: '#/components/schemas/SortParameterName'
        - description: Sorting direction for the query
          in: query
          name: sortByDirection
          required: false
          schema:
            $ref: '#/components/schemas/SortDirection'
        - description: '@deprecated Use orderStatus instead'
          in: query
          name: locked
          required: false
          schema:
            type: boolean
        - description: Order status for the query
          in: query
          name: orderStatus
          required: false
          schema:
            $ref: '#/components/schemas/OrderStatus'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Processes'
          description: Process are found.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Core - Processes
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getAllProcesses
      summary: Return all processes
      x-badges:
        - color: orange
          label: BETA
  /api/processes/retrynotroutable:
    post:
      responses:
        '204':
          description: >-
            The retry for all not routable proceses has been succesfully
            triggered
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: The retry task can not be triggered due to a conflicting operation
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Core - Processes
      description: ''
      operationId: triggerRetryNotRoutable
      summary: triggers the retry of not routable plans
  /api/processes/{processId}:
    patch:
      parameters:
        - description: ID of process you want to patch
          in: path
          name: processId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
          description: >-
            Process was found & patch-set has been applied. The patched process
            is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Process not found
        '409':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Process version conflict
      tags:
        - Core - Processes
      description: ''
      operationId: patchProcess
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessPatchActions'
        description: Patch set
        required: true
      summary: Patches a process with the given ID
    get:
      parameters:
        - in: path
          name: processId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
          description: The found process.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Core - Processes
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getProcessByID
      summary: Get a process by its ID
      x-badges:
        - color: orange
          label: BETA
  /api/processes/{processId}/reroute:
    post:
      parameters:
        - description: ID of process you want to reroute
          in: path
          name: processId
          required: true
          schema:
            type: string
        - description: Version of process you want to reroute
          in: query
          name: version
          required: true
          schema:
            type: number
        - description: The id of the rerouteDescription
          in: query
          name: rerouteDescriptionId
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
          description: >-
            Process was found the corresponding reroute operations have been
            triggered.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Process not found
        '409':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Process version conflict
      tags:
        - Core - Processes
      description: ''
      operationId: postProcess
      summary: Reroutes a process with the given ID
  /api/processes/{processId}/documents:
    post:
      parameters:
        - in: path
          name: processId
          required: true
          schema:
            type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalDocument'
          description: The document was successfully created
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalDocumentForCreation'
        description: ''
        required: true
      tags:
        - Core - Processes
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: addDocumentToProcess
      summary: Create a new document on this process
      x-badges:
        - color: orange
          label: BETA
  /api/processes/{processId}/documents/{documentId}/file:
    get:
      parameters:
        - in: path
          name: processId
          required: true
          schema:
            type: string
        - in: path
          name: documentId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/pdf: {}
          description: The document with given id attached to the selected process
      tags:
        - Core - Processes
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: downloadDocumentInProcess
      summary: Read a document on this process
      x-badges:
        - color: orange
          label: BETA
    put:
      parameters:
        - in: path
          name: processId
          required: true
          schema:
            type: string
        - in: path
          name: documentId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalDocument'
          description: The document was successfully updated
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalDocumentForUpdate'
        description: ''
        required: true
      tags:
        - Core - Processes
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: updateDocumentInProcess
      summary: Update a document on this process
      x-badges:
        - color: orange
          label: BETA
  /api/processes/{processId}/documents/{documentId}:
    get:
      parameters:
        - in: path
          name: processId
          required: true
          schema:
            type: string
        - in: path
          name: documentId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalDocument'
          description: >-
            The document meta information with given id attached to the selected
            process
      tags:
        - Core - Processes
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: readDocumentMetaInProcess
      summary: Read meta information about document on this process
      x-badges:
        - color: orange
          label: BETA
  /api/returns:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnJobs'
          description: Return Jobs that were found in response body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Fulfillment Operations - Returns
      operationId: getReturnJobs
      parameters:
        - description: all entities after given Id
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show (max 500 per request)
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
        - description: Reference to the facility you want to filter for
          in: query
          name: facilityRef
          required: false
          schema:
            type: string
        - description: >-
            Reference to the status you want to get the corresponding return
            jobs to
          in: query
          name: status
          required: false
          schema:
            items:
              type: string
            type: array
      summary: Get Return Jobs
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      x-badges:
        - color: red
          label: ALPHA
    post:
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnJob'
          description: The return was successfully created
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Fulfillment Operations - Returns
      description: >-
        This part of the API is deprecated. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      deprecated: true
      operationId: addReturn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReturnJobForCreation'
        description: 'ReturnJob object '
        required: true
      summary: Add a new return
  /api/returns/{returnId}:
    get:
      parameters:
        - description: ID of the return you want to get
          in: path
          name: returnId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnJob'
          description: >-
            Return was found & you were allowed to access it. The result is in
            the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: User not found
      tags:
        - Fulfillment Operations - Returns
      description: >-
        This part of the API is deprecated. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Will be replaced in the future with the new /itemreturnjob.
      deprecated: true
      operationId: getReturnLines
      summary: Get return with the given return ID
    patch:
      parameters:
        - description: ID of return you want to patch
          in: path
          name: returnId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnJob'
          description: >-
            Return was found & patch-set has been applied. The patched entity is
            in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
        '409':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity version conflict
      tags:
        - Fulfillment Operations - Returns
      description: >-
        This part of the API is deprecated. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: patchReturn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReturnPatchActions'
        description: Patch set
        required: true
      summary: Patches a return with the given ID
      deprecated: true
  /api/scopedcapabilities:
    get:
      parameters:
        - description: id of the facility
          in: query
          name: facilityId
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ScopedCapability'
          description: All ScopedCapabilities whic are at least inactive
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Infrastructure - Features
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getCapabilities
      summary: >-
        Returns all scopedcapabilities which are at least inactive and available
        to a facility/user
      x-badges:
        - color: orange
          label: BETA
  /api/shipments:
    get:
      parameters:
        - description: all entities after given Id
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
        - description: This query can be used to find shipments for a referenced pickjob
          in: query
          name: pickJobRef
          required: false
          schema:
            type: string
        - description: >-
            This query can be used to find shipments belonging to the referenced
            facility
          in: query
          name: facilityRef
          required: false
          schema:
            type: string
        - description: This query can be used to find shipments for a referenced carrier
          in: query
          name: carrierRef
          required: false
          schema:
            type: string
        - description: Find shipments with one the the given carriers
          explode: false
          in: query
          name: carrierKeys
          required: false
          schema:
            items:
              type: string
            type: array
        - description: Find shipments in one of the given status
          explode: false
          in: query
          name: status
          required: false
          schema:
            items:
              type: string
            type: array
        - description: Find shipments with parcels in one of the given status
          explode: false
          in: query
          name: parcelStatus
          required: false
          schema:
            items:
              type: string
            type: array
        - description: Start date range for shipments
          in: query
          name: startTargetTime
          required: false
          schema:
            type: string
            example: '2020-02-03T08:45:50.525Z'
            format: date-time
        - description: End date range for shipments
          in: query
          name: endTargetTime
          required: false
          schema:
            type: string
            example: '2020-02-03T08:45:50.525Z'
            format: date-time
        - description: Parameter to filter anonymized shipments
          in: query
          name: anonymized
          required: false
          schema:
            type: boolean
        - description: >-
            Fulltext search in shipment's tenantOrderId, shortId,
            parcels.carrierTrackingNumber, lineItems.article.tenantArticleId,
            lineItems.article.title, invoiceAddress, targetAddress and
            customerName
          in: query
          name: searchTerm
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StrippedShipments'
          description: Shipments are found.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Fulfillment Operations - Shipments
      description: ''
      operationId: getAllShipments
      summary: Return all shipments
    post:
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shipment'
          description: >-
            The Shipment was successfully created. The Location header contains
            the URL of the Shipment.
        '303':
          description: >-
            The Shipment already exists. The Location header contains the URL of
            the Shipment.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Fulfillment Operations - Shipments
      operationId: addShipment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShipmentForCreation'
        description: Shipment object supplied by your picking app
        required: true
      summary: Add a new Shipment
  /api/shipments/{shipmentId}:
    get:
      parameters:
        - description: ID of Shipment you want to get
          in: path
          name: shipmentId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shipment'
          description: >-
            Shipment was found & you were allowed to access it. The result is in
            the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Shipment not found
      tags:
        - Fulfillment Operations - Shipments
      description: ''
      operationId: getShipment
      summary: Get a Shipment with the given ID
    patch:
      parameters:
        - description: ID of shipment you want to patch
          in: path
          name: shipmentId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shipment'
          description: >-
            Shipment was found & patch-set has been applied. The patched entity
            is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
        '409':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity version conflict
      tags:
        - Fulfillment Operations - Shipments
      description: ''
      operationId: patchShipment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShipmentPatchActions'
        description: Patch set
        required: true
      summary: Patches a shipment with the given ID
  /api/shipments/{shipmentId}/actions:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShipmentActionsParameter'
      parameters:
        - description: Reference to the shipment you want to call an action for
          in: path
          name: shipmentId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shipment'
          description: Updated Shipment in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Fulfillment Operations - Shipments
      operationId: shipmentActions
      summary: Call a single action on a given shipment
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      x-badges:
        - color: red
          label: ALPHA
  /api/shipments/{shipmentId}/deliverynote:
    get:
      parameters:
        - description: ID of shipment you want to retrieve delivery note for
          in: path
          name: shipmentId
          required: true
          schema:
            type: string
        - description: >-
            Provide the localized values for the delivery note. If not provided
            the default locale is used. For example de_DE.
          in: query
          name: locale
          schema:
            type: string
      responses:
        '200':
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/DeliveryNote'
          description: Get delivery note as pdf.
        '401':
          content:
            application/pdf:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/pdf:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/pdf:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Shipment not found
      tags:
        - Fulfillment Operations - Shipments
      operationId: getShipmentDeliveryNote
      summary: Get delivery note for a shipment
  /api/shipments/parcels:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParcelForDirectCreation'
        description: Representation that describes the parcel you want to create
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parcel'
          description: Parcel was successfully created
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Fulfillment Operations - Shipments
      description: >-
        This endpoints directly creates a parcel. If no ShipmentRef was
        provided, a shipment will be created and linked to this parcel
      operationId: directCreateParcel
      summary: Creates a parcel directly
  /api/shipments/{shipmentId}/parcels:
    post:
      parameters:
        - description: ID of shipment you want to create parcel for
          in: path
          name: shipmentId
          required: true
          schema:
            type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parcel'
          description: >-
            The Parcel was successfully created. The Location header contains
            the URL of the Shipment.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '422':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Parcel could not be processed due to failing conditions
      tags:
        - Fulfillment Operations - Shipments
      description: ''
      operationId: addParcel
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParcelForCreation'
        description: Payload of the parcel you want to create
      summary: Creates a new parcel for a shipment
  /api/status:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: The status result
      tags:
        - Infrastructure - Health
      description: ''
      operationId: status
      summary: A public status endpoint that renders general availability information
  /api/itemreturnjobs/{itemReturnJobId}/itemreturns/{itemReturnId}/parcels:
    post:
      parameters:
        - description: itemReturnJobId
          in: path
          name: itemReturnJobId
          required: true
          schema:
            type: string
        - description: id of the itemReturn to create a parcel for
          in: path
          name: itemReturnId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParcelForCreation'
        description: Payload of the parcel you want to create
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parcel'
          description: Create a parcel for an itemReturn
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Returns
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: createItemReturnParcel
      summary: Create a parcel for an itemReturn
      x-badges:
        - color: red
          label: ALPHA
  /api/subscriptions:
    get:
      parameters:
        - description: all entities after given Id
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriptions'
          description: All subscriptions.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Core - Eventing
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getSubscriptions
      summary: Get all subscriptions
      x-badges:
        - color: orange
          label: BETA
    post:
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: Subscription is successfully created.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Core - Eventing
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: addSubscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionForCreation'
        description: Representation that describes the subscription
        required: true
      summary: >-
        Add new Subscription. Please note: Currently it is only possible to add
        one subscription per event.
      x-badges:
        - color: orange
          label: BETA
  /api/subscriptions/{subscriptionId}:
    delete:
      parameters:
        - description: ID of the subscription you want to delete
          in: path
          name: subscriptionId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: Subscription is successfully deleted.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Core - Eventing
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: deleteSubscription
      summary: Delete subscription by Id
      x-badges:
        - color: orange
          label: BETA
  /api/substitutes:
    get:
      parameters:
        - description: the tenantArticleId substitutes are requested for
          in: query
          name: tenantArticleId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Substitutes'
          description: >-
            There are substitutes for the given tenantArticleId. The result can
            be found in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Facility not found
      tags:
        - Fulfillment Operations - Picking
      operationId: getResultingSubstitutesForTenantArticleId
      summary: Get the resulting substitutes for a specific tenantArticleId.
  /api/substitutes/{tenantArticleId}:
    delete:
      parameters:
        - description: the tenant article ID the subsitutes should be deleted for
          in: path
          name: tenantArticleId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >-
            The substitutes for the given tenantArticleId were successfully
            deleted
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Facility listing not found
      tags:
        - Fulfillment Operations - Picking
      description: ''
      operationId: deleteSubstitutesForTenantArticleId
      summary: deletes substitutes for the given tenant article id
    get:
      parameters:
        - description: ''
          in: path
          name: tenantArticleId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Substitutes'
          description: >-
            The substitutes for the given tenantArticleId can be found in the
            body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Facility not found
      tags:
        - Fulfillment Operations - Picking
      description: Get the substitutes for a given tenant article id
      operationId: getSubstitutesForTenantArticleId
      summary: Get the substitutes for a given tenant article id
    put:
      parameters:
        - description: Tenant article ID of the article the substitutes should be set for
          in: path
          name: tenantArticleId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Substitutes'
          description: The substitutes for tenantArticleId were successfully updated
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Facility listing not found
      tags:
        - Fulfillment Operations - Picking
      description: ''
      operationId: putSubstitutesForTenantArticleID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubstitutesForUpsert'
        description: substitutes to set
        required: true
      summary: Set possible substitutes for a tenant article ID
  /api/supportedevents:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupportedEvents'
          description: All supported events.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Core - Eventing
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getEvents
      summary: Get a list of supported events you can subscribe to.
      x-badges:
        - color: orange
          label: BETA
  /api/brands:
    get:
      parameters:
        - description: all entities after given Id
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StrippedBrands'
          description: All brands on listings for this tenant
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Core - Processes
      description: ''
      operationId: getAllBrands
      summary: Return all brands
  /api/returnnotes:
    post:
      parameters:
        - description: >-
            Provide the localized values for the return note. If not provided
            the default locale is used. For example de_DE.
          in: query
          name: locale
          schema:
            type: string
      responses:
        '201':
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/ReturnNote'
          description: Successfully created the return note.
        '401':
          content:
            application/pdf:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/pdf:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Fulfillment Operations - Shipments
      operationId: createReturnNote
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReturnNote'
        required: true
      summary: Create return note
  /api/packjobs:
    get:
      parameters:
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
        - description: all entities after given Id
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: Parameter to filter anonymized pack jobs
          in: query
          name: anonymized
          required: false
          schema:
            type: boolean
        - description: Reference the assigned user on this entity - id or username
          in: query
          name: assignedUser
          required: false
          schema:
            type: string
        - description: Reference to the status you want to get the corresponding packJobs
          explode: false
          in: query
          name: status
          required: false
          schema:
            items:
              type: string
            type: array
        - description: Reference to the facility you want to get the corresponding packJobs
          in: query
          name: facilityRef
          required: false
          schema:
            type: string
        - description: Term by which to search through the fields
          in: query
          name: searchTerm
          required: false
          schema:
            type: string
        - description: Reference to the channel you want to get the corresponding packJobs
          in: query
          name: channel
          required: false
          schema:
            enum:
              - COLLECT
              - SHIPPING
            type: string
        - description: filter by packingsourcecontainer containing codes
          in: query
          name: sourceContainerCodes
          required: false
          schema:
            type: array
            items:
              type: string
        - description: query packjobs orderBy
          in: query
          name: orderBy
          required: false
          schema:
            $ref: '#/components/schemas/PackJobOrderBy'
        - description: Start date range for pack jobs
          in: query
          name: startTargetTime
          required: false
          schema:
            type: string
            example: '2020-02-03T08:45:50.525Z'
            format: date-time
        - description: End date range for pack jobs
          in: query
          name: endTargetTime
          required: false
          schema:
            type: string
            example: '2020-02-03T08:45:50.525Z'
            format: date-time
        - description: Reference to the order you want to get the corresponding packJobs
          in: query
          name: orderRef
          required: false
          schema:
            type: string
        - description: Reference to the packJobs you want to get
          in: query
          name: packJobIds
          required: false
          schema:
            type: array
            items:
              type: string
        - description: Reference to the process you want to get the corresponding packJobs
          in: query
          name: processId
          required: false
          schema:
            type: string
        - description: >-
            Reference to the pickJobRef you want to get the corresponding
            packJobs
          in: query
          name: pickJobRef
          required: false
          schema:
            type: string
        - description: Reference to the shortId you want to get the corresponding packJobs
          in: query
          name: shortId
          required: false
          schema:
            type: string
        - description: >-
            Reference to the articleTitle you want to get the corresponding
            packJobs
          in: query
          name: articleTitle
          required: false
          schema:
            type: string
        - description: Start date range of the order for the corresponding pack jobs
          in: query
          name: startOrderDate
          required: false
          schema:
            type: string
            example: '2020-02-03T08:45:50.525Z'
            format: date-time
        - description: End date range of the order for the corresponding pack jobs
          in: query
          name: endOrderDate
          required: false
          schema:
            type: string
            example: '2020-02-03T08:45:50.525Z'
            format: date-time
        - description: >-
            Reference to the username you want to get the corresponding pack
            jobs
          in: query
          name: modifiedByUsername
          required: false
          schema:
            type: string
        - description: >-
            Reference to the tenantOrderId you want to get the corresponding
            packJobs
          in: query
          name: tenantOrderId
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackJobs'
          description: >-
            Pack jobs was loaded & you were allowed to access it. The result is
            in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Packing
      description: ''
      operationId: getPackJobs
      summary: Get all pack jobs
    post:
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackJob'
          description: >-
            The pack job was successfully created. The Location header contains
            the URL of the pack job.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Fulfillment Operations - Packing
      description: ''
      operationId: addPackJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackJobForCreation'
        description: Pack job object
        required: true
      summary: Add a new pack job
  /api/packingcontainertypes:
    post:
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackingContainerType'
          description: >-
            The packing container type was successfully created. The Location
            header contains the URL of the packing container type.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Fulfillment Operations - Packing
      description: ''
      operationId: addPackingContainerType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackingContainerTypeForCreation'
        description: Packing type object
        required: true
      summary: Add a new packing container type, use operative container types
      deprecated: true
    get:
      parameters:
        - description: >-
            Provide the localized values for the entity. If not provided the
            default locale is used. For example de_DE.
          in: query
          name: locale
          schema:
            type: string
        - description: all entities after given id
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PackingContainerType'
                type: array
          description: Found PackingContainerTypes
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Fulfillment Operations - Packing
      description: ''
      operationId: getPackingContainerTypes
      summary: Get all packing container types, use operative container types
      deprecated: true
  /api/packingcontainertypes/{packingContainerTypeId}:
    get:
      parameters:
        - description: >-
            Provide the localized values for the entity. If not provided the
            default locale is used. For example de_DE.
          in: query
          name: locale
          schema:
            type: string
        - description: id of entity
          in: path
          name: packingContainerTypeId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackingContainerType'
          description: Found PackingContainerType
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Fulfillment Operations - Packing
      description: ''
      operationId: getPackingContainerType
      summary: Get a packing container type by its id, use operative container types
      deprecated: true
    patch:
      parameters:
        - description: ID of the packingcontainertype you want to change
          in: path
          name: packingContainerTypeId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackingContainerType'
          description: >-
            PackingContainerType was found & patch-set has been applied. The
            patched PackingContainerType is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: PackingContainerType not found
        '409':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: PackingContainerType version conflict
      tags:
        - Fulfillment Operations - Packing
      description: ''
      operationId: updatePackingContainerType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackingContainerTypePatchActions'
        description: Patch set
        required: true
      summary: >-
        Patches a PackingContainerType with the given ID, use operative
        container types
      deprecated: true
  /api/pickjobs/{pickJobId}/documenthandling:
    get:
      parameters:
        - description: ID of the pick job you want to get document handling information
          in: path
          name: pickJobId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentHandling'
          description: >-
            Pick job document handling was found & you were allowed to access
            it. The result is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Picking
      description: ''
      operationId: getPickJobDocumentHandling
      summary: Get a pick job document handling information with the given ID
  /api/packingsourcecontainers/{packingSourceContainerId}:
    get:
      parameters:
        - description: ID of the packingSourceContainer
          in: path
          name: packingSourceContainerId
          required: true
          schema:
            type: string
        - description: >-
            Provide the localized values for the entity. If not provided the
            default locale is used. For example de_DE.
          in: query
          name: locale
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PackingSourceContainer'
                type: array
          description: Found packingSourceContainer
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Packing
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />Get
        PackingSourceContainer by ID.
      operationId: getPackingSourceContainerById
      summary: Get a single packingSourceContainer
      x-badges:
        - color: orange
          label: BETA
  /api/packingsourcecontainers:
    post:
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackingSourceContainer'
          description: >-
            The packing source container  was successfully created. The Location
            header contains the URL of the packing source container.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Fulfillment Operations - Packing
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Creating new packingSourceContainer.
      operationId: addPackingSourceContainer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackingSourceContainerForCreation'
        description: Packing type object
        required: true
      summary: Add a new packingSourceContainer
      x-badges:
        - color: orange
          label: BETA
    get:
      parameters:
        - description: >-
            Provide the localized values for the entity. If not provided the
            default locale is used. For example de_DE.
          in: query
          name: locale
          schema:
            type: string
        - description: all entities after given id
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
            maximum: 500
        - description: filter by packJobRef
          in: query
          name: packJobRef
          required: false
          schema:
            type: string
        - description: filter by facilityRef
          in: query
          name: facilityRef
          required: true
          schema:
            type: string
        - description: filter by scannablecodes
          in: query
          name: codes
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PaginatedPackingSourceContainers'
                type: array
          description: Found Packing Source Container
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Fulfillment Operations - Packing
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Listing packingSourceContainer.
      operationId: getPackingSourceContainers
      summary: Get all packingSourceContainers
      x-badges:
        - color: red
          label: ALPHA
  /api/packjobs/{packJobId}/actions:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackJobActionsParameter'
      parameters:
        - description: Reference to the pack job you want to call an action for
          in: path
          name: packJobId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackJob'
          description: Updated PackJob in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Enitity not found
      tags:
        - Fulfillment Operations - Packing
      operationId: packJobAction
      summary: Call a single action on a given packJob
  /api/packjobs/{packJobId}/documenthandling:
    get:
      parameters:
        - description: ID of the pack job you want to get document handling information
          in: path
          name: packJobId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentHandling'
          description: >-
            Pack job document handling was found & you were allowed to access
            it. The result is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Packing
      description: ''
      operationId: getPackJobDocumentHandling
      summary: Get a pack job document handling information with the given ID
  /api/packjobs/{packJobId}:
    get:
      parameters:
        - description: ID of the pack job you want to get
          in: path
          name: packJobId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackJob'
          description: >-
            Pack job was found & you were allowed to access it. The result is in
            the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Packing
      description: ''
      operationId: getPackJob
      summary: Get a pack job with the given ID
    patch:
      parameters:
        - description: ID of the packjob you want to get
          in: path
          name: packJobId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackJob'
          description: >-
            PackJob was found & patch-set has been applied. The patched pack job
            is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: PackJob not found
        '409':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: PackJob version conflict
      tags:
        - Fulfillment Operations - Packing
      description: ''
      operationId: patchPackJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackJobPatchActions'
        description: Patch set
        required: true
      summary: Patches a pack job with the given ID
  /api/packjobs/{packJobId}/returnnote:
    get:
      parameters:
        - description: ID of the PackJob
          in: path
          name: packJobId
          required: true
          schema:
            type: string
        - description: >-
            Provide the localized values for the delivery note. If not provided
            the default locale is used. For example de_DE.
          in: query
          name: locale
          schema:
            type: string
      responses:
        '200':
          content:
            application/pdf: {}
          description: Returns a return note for the packjob.
        '401':
          content:
            application/pdf:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/pdf:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/pdf:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Packing
      description: ''
      operationId: getReturnNotesForPackJob
      summary: Get the return note for the packjob with the given ID
  /api/packjobs/{packJobId}/deliverynote:
    get:
      parameters:
        - description: ID of the pack job for which you want to get a deliverynote
          in: path
          name: packJobId
          required: true
          schema:
            type: string
        - description: >-
            Provide the localized values for the delivery note. If not provided
            the default locale is used. For example de_DE.
          in: query
          name: locale
          schema:
            type: string
      responses:
        '200':
          content:
            application/pdf: {}
          description: The deliverynote for the given packjob
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Packing
      description: ''
      operationId: getPackJobDeliveryNote
      summary: Get a deliverynote for the pack job with the given ID
  /api/packjobs/{packJobId}/transferlabel:
    get:
      parameters:
        - description: ID of the pack job for which you want to get a transfer label
          in: path
          name: packJobId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/pdf: {}
          description: The transfer label for the given packjob
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Packing
      description: ''
      operationId: getPackJobTransferLabel
      summary: Get a transfer label for the pack job with the given ID
  /api/packjobs/{packJobId}/targetcontainers/{targetcontainerId}/returnnote:
    get:
      parameters:
        - description: ID of the pack job for which you want to get a deliverynote
          in: path
          name: packJobId
          required: true
          schema:
            type: string
        - description: ID of the PackingTargetContainer
          in: path
          name: targetcontainerId
          required: true
          schema:
            type: string
        - description: >-
            Provide the localized values for the return note. If not provided
            the default locale is used. For example de_DE.
          in: query
          name: locale
          schema:
            type: string
      responses:
        '200':
          content:
            application/pdf: {}
          description: Returns a return note for the PackingTargetContainer.
        '401':
          content:
            application/pdf:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/pdf:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/pdf:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Packing
      description: ''
      operationId: getReturnNotesForPackingTargetContainer
      summary: Get the return note for the packingTargetContainer with the given ID
  /api/packjobs/{packJobId}/targetcontainers/{targetcontainerId}/deliverynote:
    get:
      parameters:
        - description: ID of the pack job for which you want to get a deliverynote
          in: path
          name: packJobId
          required: true
          schema:
            type: string
        - description: >-
            ID of the packingTargetContainer for which you want to get a
            deliverynote
          in: path
          name: targetcontainerId
          required: true
          schema:
            type: string
        - description: >-
            Provide the localized values for the delivery note. If not provided
            the default locale is used. For example de_DE.
          in: query
          name: locale
          schema:
            type: string
      responses:
        '200':
          content:
            application/pdf: {}
          description: The deliverynote for the given packingTargetContainer
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Packing
      description: ''
      operationId: getPackingTargetContainerDeliveryNote
      summary: Get a deliverynote for the packingTargetContainer with the given ID
  /api/packjobs/{packJobId}/targetcontainers/{targetcontainerId}/transferlabel:
    get:
      parameters:
        - description: ID of the pack job for which you want to get a transfer label
          in: path
          name: packJobId
          required: true
          schema:
            type: string
        - description: >-
            ID of the packingTargetContainer for which you want to get a
            transfer label
          in: path
          name: targetcontainerId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/pdf: {}
          description: The transfer label for the given packingTargetContainer
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Packing
      description: ''
      operationId: getPackingTargetContainerTransferLabel
      summary: Get a transfer label for the packingTargetContainer with the given ID
  /api/packjobs/{packJobId}/targetcontainers/{targetcontainerId}:
    get:
      parameters:
        - description: >-
            Provide the localized values for the entity. If not provided the
            default locale is used. For example de_DE.
          in: query
          name: locale
          schema:
            type: string
        - description: ID of the pack job you want to get
          in: path
          name: packJobId
          required: true
          schema:
            type: string
        - description: ID of the target container you want to get
          in: path
          name: targetcontainerId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackingTargetContainer'
          description: >-
            Entity was found & you were allowed to access it. The result is in
            the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Packing
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getTargetcontainer
      summary: Get a packing target container with the given ID on given packJob
      x-badges:
        - color: red
          label: ALPHA
    patch:
      parameters:
        - description: ID of corresponding packJob you want to patch
          in: path
          name: packJobId
          required: true
          schema:
            type: string
        - description: ID of container you want to patch
          in: path
          name: targetcontainerId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackingTargetContainer'
          description: >-
            Container was found & patch-set has been applied. The patched entity
            is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
        '409':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity version conflict
      tags:
        - Fulfillment Operations - Packing
      operationId: patchTargetcontainer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackingTargetContainerPatchActions'
        description: Patch set
        required: true
      summary: Patches a packing container with the given ID
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      x-badges:
        - color: red
          label: ALPHA
    post:
      parameters:
        - description: ID of the pack job you want to get
          in: path
          name: packJobId
          required: true
          schema:
            type: string
        - description: ID of the container you want to add new line item to it
          in: path
          name: targetcontainerId
          required: true
          schema:
            type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackingTargetContainer'
          description: The packing container was successfully created.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Fulfillment Operations - Packing
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: addTargetcontainer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackingTargetContainerLineItemForCreation'
        description: Packing Container line item object
        required: true
      summary: Add a new packing container line item
      x-badges:
        - color: red
          label: ALPHA
    delete:
      parameters:
        - description: ID of corresponding packJob you want to patch
          in: path
          name: packJobId
          required: true
          schema:
            type: string
        - description: ID of container you want to delete
          in: path
          name: targetcontainerId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Container was found & you were allowed to delete it.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Packing
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: deletePackingTargetContainer
      summary: deletes a packing target container with the given ID
      x-badges:
        - color: red
          label: ALPHA
  /api/packjobs/{packJobId}/targetcontainers/{targetcontainerId}/lineitems/{lineItemId}:
    patch:
      parameters:
        - description: ID of corresponding packJob you want to patch
          in: path
          name: packJobId
          required: true
          schema:
            type: string
        - description: ID of container you want to patch
          in: path
          name: targetcontainerId
          required: true
          schema:
            type: string
        - description: ID of line item you want to patch
          in: path
          name: lineItemId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackingTargetContainer'
          description: >-
            Container was found & patch-set has been applied. The patched entity
            is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
        '409':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity version conflict
      tags:
        - Fulfillment Operations - Packing
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Patch line item of a packing container
      operationId: patchTargetContainerLineItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackingTargetContainerActionsParameter'
        description: Patch set
        required: true
      summary: Patches a packing container with the given ID
      x-badges:
        - color: red
          label: ALPHA
    delete:
      parameters:
        - description: ID of corresponding packJob you want to patch
          in: path
          name: packJobId
          required: true
          schema:
            type: string
        - description: ID of container you want to patch
          in: path
          name: targetcontainerId
          required: true
          schema:
            type: string
        - description: ID of line item you want to patch
          in: path
          name: lineItemId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: LineItem was found & you were allowed to delete it.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Facility not found
      tags:
        - Fulfillment Operations - Packing
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: deleteLineItemTargetContainers
      summary: deletes a lineItem of a packing container with the given ID
      x-badges:
        - color: red
          label: ALPHA
  /api/packjobs/{packJobId}/targetcontainers:
    get:
      parameters:
        - description: ID of the pack job you want to get
          in: path
          name: packJobId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PackingTargetContainer'
          description: >-
            Entity was found & you were allowed to access it. The result is in
            the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Packing
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getAllTargetcontainers
      summary: Get all packing container on given packJob
      x-badges:
        - color: red
          label: ALPHA
    post:
      parameters:
        - description: ID of the pack job you want to get
          in: path
          name: packJobId
          required: true
          schema:
            type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackingTargetContainer'
          description: The packing container was successfully created.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Fulfillment Operations - Packing
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: addTargetContainers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackingTargetContainerForCreation'
        description: Packing Container object
        required: true
      summary: Add a new packing container
      x-badges:
        - color: red
          label: ALPHA
  /api/tags:
    get:
      parameters:
        - description: all entities
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StrippedTags'
          description: The current list of available tags
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: No more elements available
      tags:
        - Core - Tags
      description: ''
      operationId: getTags
      summary: Returns all tags
    post:
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: The tag was successfully created.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Core - Tags
      description: ''
      operationId: addTag
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagForCreation'
        description: Tag object
        required: true
      summary: Add a new tag
  /api/tags/{tagRef}:
    get:
      parameters:
        - description: Id of the tag you want to get
          in: path
          name: tagRef
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: >-
            Tag was found & you were allowed to access it. The result is in the
            body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: User not found
      tags:
        - Core - Tags
      description: ''
      operationId: getTag
      summary: Get a tag with the given key
    patch:
      parameters:
        - description: Id of the tag you want to update
          in: path
          name: tagRef
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: >-
            Tag was found & you were allowed to access it. The result is in the
            body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Tag not found
      tags:
        - Core - Tags
      description: ''
      operationId: putTag
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagPatchActions'
        description: Tag patch action
        required: true
      summary: Update a tag with the given key
  /api/tags/packing/needspacking:
    post:
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/TagReference'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NeedsPacking'
          description: >-
            NeedsPacking information for this tag was found & you were allowed
            to access it. The result is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Packing
      description: ''
      operationId: getNeedsPacking
      summary: Get packing information for given Tag
  /api/configurations/operativerestowing:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationalRestowingConfigurations'
          description: Configuration of all restow item related things
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Restow
      operationId: getOperationalRestowingConfigurations
      summary: Get the operational restowing configurations
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      x-badges:
        - color: red
          label: ALPHA
    patch:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationalRestowingConfigurations'
          description: The restowing configurations were successfully updated.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationalRestowingConfigurations'
          description: The restowing configurations were successfully created.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Fulfillment Operations - Restow
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: putOperationalRestowingConfigurations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationalRestowingConfigurations'
        description: create/update operational restowing configurations
        required: true
      summary: Change the tenant wide restowing configurations
      x-badges:
        - color: red
          label: ALPHA
  /api/restowitems:
    get:
      parameters:
        - description: Reference to the facility you want to get the corresponding restows
          in: query
          name: facilityRef
          required: false
          schema:
            type: string
        - description: Reference restowed status of the restow items
          in: query
          name: restowed
          required: false
          schema:
            type: boolean
        - description: Reference status of the restow items
          in: query
          name: status
          required: false
          schema:
            type: array
            items:
              type: string
        - description: all entities after given Id
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
        - description: query orderBy
          in: query
          name: orderBy
          required: false
          schema:
            $ref: '#/components/schemas/RestowItemsSortOptionsEnum'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestowedItems'
          description: Restow items were found. The results are in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Fulfillment Operations - Restow
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: queryRestowItems
      summary: Simple query interface to find restowItems
      x-badges:
        - color: orange
          label: BETA
  /api/restowitems/{restowItemId}:
    get:
      parameters:
        - description: ID of the restow item you want to get
          in: path
          name: restowItemId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestowItem'
          description: >-
            RestowItem was found & you were allowed to access it. The result is
            in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Restow
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getRestowItem
      summary: Get a restow item with the given ID
      x-badges:
        - color: orange
          label: BETA
    patch:
      parameters:
        - description: ID of the restow item you want to update
          in: path
          name: restowItemId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestowItem'
          description: >-
            RestowItem was found & patch-set has been applied. The patched
            restow item is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: RestowItem not found
        '409':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: RestowItem version conflict
      tags:
        - Fulfillment Operations - Restow
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: patchRestowItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestowItemPatchActions'
        description: Patch set
        required: true
      summary: >-
        Patches a restow item with the given ID - Deprecated, please use
        /api/restowitems/{restowItemId}/actions
      x-badges:
        - color: orange
          label: BETA
  /api/restowitems/{restowItemId}/actions:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestowItemActionsParameter'
      parameters:
        - description: Reference to the restow item you want to call an action for
          in: path
          name: restowItemId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestowItem'
          description: Updated RestowItem in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: The entity you want to call an action for was not found.
      tags:
        - Fulfillment Operations - Restow
      operationId: restowItemAction
      summary: Call a single action on a given restowitem
  /api/configurations/picking:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PickingConfigurations'
          description: Central Configuration of all picking related things
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Picking
      operationId: getPickingConfigurations
      summary: Get the picking configurations
    patch:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PickingConfigurations'
          description: The picking central configuration was successfully updated.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PickingConfigurations'
          description: The picking central configuration was successfully created.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Fulfillment Operations - Picking
      description: ''
      operationId: putPickingConfigurations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PickingConfigurations'
        description: create/update picking central configuration
        required: true
      summary: Change the tenant wide picking central configuration
  /api/configurations/tags/pickjob:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PickJobTagConfiguration'
          description: pickjob tag config is in response body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Picking
      description: ''
      operationId: getPickJobTagConfiguration
      summary: Read tag configuration for pickjobs
    put:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PickJobTagConfiguration'
          description: The packing configuration was successfully updated.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Fulfillment Operations - Picking
      description: ''
      operationId: putPickJobTagConfigurations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PickJobTagConfiguration'
        description: Desired Tag Configuration for Pickjobs
        required: true
      summary: Change the tag configuration for Pickjobs
  /api/handovercontainers:
    get:
      parameters:
        - description: entity to start after
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
        - description: facilities to filter the results
          in: query
          name: facilityRefs
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/StrippedHandoverContainer'
          description: All HandoverContainer matching the given parameters.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Handover
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />Get
        all Handover Container respecting the given filter
      operationId: getHandoverContainer
      summary: Get Handover Container
      x-badges:
        - color: red
          label: ALPHA
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HandoverContainerForCreation'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/HandoverContainer'
          description: Created Handover Container.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Handover
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Create new Handover Container
      operationId: createHandoverContainer
      summary: Create Handover Container
      x-badges:
        - color: red
          label: ALPHA
  /api/handovercontainers/{handoverContainerId}:
    get:
      parameters:
        - description: id of the handover container
          in: path
          name: handoverContainerId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HandoverContainer'
          description: HandoverContainer matching the given id.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Handover
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />Get
        Handover Container respecting the given id
      operationId: getHandoverContainerById
      summary: Get Handover Container by id
      x-badges:
        - color: red
          label: ALPHA
    delete:
      parameters:
        - description: id of the handover container
          in: path
          name: handoverContainerId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: HandoverContainer successfully deleted.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Handover
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Delete Handover Container respecting the given id
      operationId: deleteHandoverContainerById
      summary: Delete Handover Container by id
      x-badges:
        - color: red
          label: ALPHA
  /api/handovercontainers/{handoverContainerId}/stack:
    get:
      parameters:
        - description: id of the handover container
          in: path
          name: handoverContainerId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stack'
          description: Stack for the given handoverContainer matching the given id.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Handover
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />Get
        Stack for Handover Container respecting the given id
      operationId: getStackForHandoverContainer
      summary: Get Stack for Handover Container
      x-badges:
        - color: red
          label: ALPHA
  /api/stacks:
    get:
      parameters:
        - description: entity to start after
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
        - description: facilities to filter the results
          in: query
          name: facilityRefs
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/StacksResponse'
          description: All Stacks matching the given parameters.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Stacks
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />Get
        all Stacks respecting the given filter
      operationId: getStacks
      summary: Get Stacks
      x-badges:
        - color: red
          label: ALPHA
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StackForCreation'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Stack'
          description: Created Stack.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Stacks
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Create new Stack
      operationId: createStack
      summary: Create Stack
      x-badges:
        - color: red
          label: ALPHA
  /api/stacks/{stackId}:
    get:
      parameters:
        - description: id of the stack
          in: path
          name: stackId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stack'
          description: Stack matching the given id.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Stacks
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />Get
        Stack respecting the given id
      operationId: getStackById
      summary: Get Stack by id
      x-badges:
        - color: red
          label: ALPHA
  /api/remoteconfigs:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoteConfigurationForCreation'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteConfiguration'
          description: Created entity in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Core - Remote Configuration
      operationId: createRemoteConfiguration
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      summary: Create a new remote configuration
      x-badges:
        - color: orange
          label: BETA
    get:
      parameters:
        - description: all entities after given Id
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
        - description: facility to filter to
          in: query
          name: facilityId
          required: false
          schema:
            type: string
        - description: groups to filter to
          in: query
          name: groups
          required: false
          schema:
            type: array
            items:
              type: string
        - description: userId to filter to
          in: query
          name: userId
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteConfigurations'
          description: Central RemoteConfiguration
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Core - Remote Configuration
      operationId: getAllRemoteConfigurations
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      summary: Get all remote configurations
      x-badges:
        - color: orange
          label: BETA
  /api/remoteconfigs/{id}:
    get:
      parameters:
        - description: Reference to the remote config you want to get
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteConfiguration'
          description: Central RemoteConfiguration
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Core - Remote Configuration
      operationId: getRemoteConfiguration
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      summary: Get a single remote configuration
      x-badges:
        - color: orange
          label: BETA
    delete:
      parameters:
        - description: Reference to the remote config you want to delete
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully Deleted
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Core - Remote Configuration
      operationId: deleteRemoteConfiguration
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      summary: Delete a single remote configuration
      x-badges:
        - color: orange
          label: BETA
    patch:
      parameters:
        - description: Reference to the remote config you want to change
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoteConfigurationForUpdate'
      responses:
        '200':
          description: Successfully Changed
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Core - Remote Configuration
      operationId: updateRemoteConfiguration
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      summary: Update a single remote configuration
      x-badges:
        - color: red
          label: ALPHA
    put:
      parameters:
        - description: Reference to the remote config you want to change
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoteConfigurationForPut'
      responses:
        '200':
          description: Successfully Changed
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Core - Remote Configuration
      operationId: putRemoteConfiguration
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      summary: Override a single remote configuration
      x-badges:
        - color: red
          label: ALPHA
  /api/remoteconfigs/{id}/scopes:
    post:
      parameters:
        - description: Reference to the remote config you want to change
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddRemoteConfigurationScopeParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteConfiguration'
          description: Updated RemoteConfiguration in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Core - Remote Configuration
      operationId: addRemoteConfigurationScope
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      summary: add a new scope to a remote configuration
      x-badges:
        - color: orange
          label: BETA
  /api/remoteconfigs/{id}/scopes/{scopeId}:
    delete:
      parameters:
        - description: Reference to the remote config you want to alter
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: Reference to the remote config scope you want to delete
          in: path
          name: scopeId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteConfiguration'
          description: Successfully Deleted
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Core - Remote Configuration
      operationId: deleteScopeFromRemoteConfiguration
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      summary: Delete a scope from a given remote configuration
      x-badges:
        - color: orange
          label: BETA
  /api/configurations/return:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalizedReturnConfiguration'
          description: Return config found.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Returns
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getReturnConfiguration
      summary: Get the current configuration for returns
      x-badges:
        - color: orange
          label: BETA
    put:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalizedReturnConfiguration'
          description: The return configuration was successfully updated.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalizedReturnConfiguration'
          description: The return configuration was successfully created.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '409':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity version conflict
      tags:
        - Fulfillment Operations - Returns
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: upsertReturnConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReturnConfiguration'
        description: Desired return configuration to create/update
        required: true
      summary: Change the tenant wide return configuration
      x-badges:
        - color: orange
          label: BETA
  /api/itemreturns:
    get:
      parameters:
        - description: >-
            Search term you want to get the corresponding item returns. Search
            will be performed on multiple fields, including return id, tenant
            order id, customer name, tenant article ids, artile titles
          in: query
          name: searchTerm
          required: false
          schema:
            type: string
        - description: facilities to filter the results
          in: query
          name: facilityRefs
          required: false
          schema:
            type: array
            items:
              type: string
        - description: ItemReturnStatus of an included ItemReturn to filter the results
          in: query
          name: itemReturnStatus
          required: false
          schema:
            type: array
            items:
              type: string
        - description: >-
            ItemReturnLineItemStatus of an included itemReturnLineItem to filter
            the results
          in: query
          name: itemReturnLineItemStatus
          required: false
          schema:
            type: array
            items:
              type: string
        - description: entity to start after
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
        - description: show anonymized entities or not
          in: query
          name: anonymized
          required: false
          schema:
            type: boolean
            default: false
        - description: sorting for the results
          in: query
          name: orderBy
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ItemReturn'
          description: All Item Returns matching the given parameters
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Fulfillment Operations - Returns
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: findItemReturns
      summary: Get all Item Returns
      x-badges:
        - color: red
          label: ALPHA
  /api/itemreturnjobs/{itemReturnJobId}/itemreturns:
    get:
      parameters:
        - description: item return job to read the item return for
          in: path
          name: itemReturnJobId
          required: true
          schema:
            type: string
        - description: entity to start after
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ItemReturn'
          description: Get all item returns for a given item return job
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Returns
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getItemReturns
      summary: Get item returns
      x-badges:
        - color: orange
          label: BETA
    post:
      parameters:
        - description: Id of the item return job to create the item return for
          in: path
          name: itemReturnJobId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddItemReturnToItemReturnJob'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemReturnJob'
          description: ItemReturnJob containing the newly created item return
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Fulfillment Operations - Returns
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Create a new item return for an item return job
      operationId: createItemReturn
      summary: Creates a new ItemReturn
      x-badges:
        - color: red
          label: ALPHA
  /api/itemreturnjobs/{itemReturnJobId}/itemreturns/{itemReturnId}:
    get:
      parameters:
        - description: item return job to read the item return for
          in: path
          name: itemReturnJobId
          required: true
          schema:
            type: string
        - description: id of the item return you want to read
          in: path
          name: itemReturnId
          required: true
          schema:
            type: string
        - description: entity to start after
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemReturn'
          description: Get a specific item return
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Returns
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getItemReturn
      summary: Get item return by id
      x-badges:
        - color: red
          label: ALPHA
    delete:
      parameters:
        - description: id of the item return job to delete the item return for
          in: path
          name: itemReturnJobId
          required: true
          schema:
            type: string
        - description: id of the item return you want to delete
          in: path
          name: itemReturnId
          required: true
          schema:
            type: string
        - description: version of the item return job to delete the item return for
          in: query
          name: itemReturnJobVersion
          required: true
          schema:
            type: number
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemReturn'
          description: >-
            item return was found and successfully deleted. Updated item return
            job is returned.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Returns
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Delete an item return from an item return job
      operationId: deleteItemReturn
      summary: Delete an item return from an item return job
      x-badges:
        - color: red
          label: ALPHA
  /api/itemreturnjobs/{itemReturnJobId}/itemreturns/{itemReturnId}/returnedlineitems:
    put:
      parameters:
        - description: id of the item return job the item return belongs to
          in: path
          name: itemReturnJobId
          required: true
          schema:
            type: string
        - description: id of the item return the returned line items belong to
          in: path
          name: itemReturnId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReplaceReturnedLineItems'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemReturnJob'
          description: >-
            The returned line items were successfully updated. Updated item
            return job is returned.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '409':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity version conflict
      tags:
        - Fulfillment Operations - Returns
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Replace returned line items of an item return of an item return job.
      operationId: replaceReturnedLineItems
      summary: replace returned line items
      x-badges:
        - color: red
          label: ALPHA
  /api/itemreturnjobs:
    get:
      parameters:
        - description: facility to filter the results
          in: query
          name: facilityId
          required: false
          schema:
            type: string
        - description: scannableCodes of the item return job to filter the results
          in: query
          name: itemReturnJobScannableCodes
          required: false
          schema:
            type: array
            items:
              type: string
        - description: scannableCodes of the item return to filter the results
          in: query
          name: itemReturnScannableCodes
          required: false
          schema:
            type: array
            items:
              type: string
        - description: ItemReturnJobStatus to filter the results
          in: query
          name: itemReturnJobStatus
          required: false
          schema:
            type: array
            items:
              type: string
        - description: ItemReturnStatus of an included ItemReturn to filter the results
          in: query
          name: itemReturnStatus
          required: false
          schema:
            type: array
            items:
              type: string
        - description: Term by which to search through the fields
          in: query
          name: searchTerm
          required: false
          schema:
            type: string
        - description: entity to start after
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
        - description: show anonymized entities or not
          in: query
          name: anonymized
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ItemReturnJob'
          description: All Item Return Jobs matching the given parameters
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Fulfillment Operations - Returns
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getItemReturnJobs
      summary: Get all Item Return Jobs
      x-badges:
        - color: red
          label: ALPHA
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemReturnJobForCreation'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemReturnJob'
          description: Created entity
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Fulfillment Operations - Returns
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: createItemReturnJob
      summary: Creates a new ItemReturnJob
      x-badges:
        - color: red
          label: ALPHA
  /api/itemreturnjobs/{itemReturnJobId}:
    get:
      parameters:
        - description: id of the item return job
          in: path
          name: itemReturnJobId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemReturnJob'
          description: Returns Item Return Job with the provided id
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Returns
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getItemReturnJob
      summary: Get Item Return Job by id
      x-badges:
        - color: red
          label: ALPHA
  /api/itemreturnjobs/{itemReturnJobId}/actions:
    post:
      parameters:
        - description: id of the Item Return Job
          in: path
          name: itemReturnJobId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemReturnJobActionsParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemReturnJob'
          description: Updated entity
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Returns
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: updateItemReturnJob
      summary: Updates a new ItemReturnJob
      x-badges:
        - color: red
          label: ALPHA
  /api/itemreturnjobs/{itemReturnJobId}/itemreturns/{itemReturnId}/actions:
    post:
      parameters:
        - description: id of the Item Return Job
          in: path
          name: itemReturnJobId
          required: true
          schema:
            type: string
        - description: id of the Item Return
          in: path
          name: itemReturnId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemReturnActionsParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemReturnJob'
          description: Updated entity
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Returns
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: itemReturnActions
      summary: Actions for a ItemReturn
      x-badges:
        - color: red
          label: ALPHA
  /api/itemreturnjobs/{itemReturnJobId}/itemreturns/{itemReturnId}/returnedlineitems/{returnedLineItemId}:
    patch:
      parameters:
        - description: id of the Item Return Job
          in: path
          name: itemReturnJobId
          required: true
          schema:
            type: string
        - description: id of the Item Return
          in: path
          name: itemReturnId
          required: true
          schema:
            type: string
        - description: id of the returnedLineItem
          in: path
          name: returnedLineItemId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemReturnLineItemForUpdate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemReturnJob'
          description: Updated ItemReturnJob
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Returns
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: updateItemReturnLineItem
      summary: Patch for a ItemReturn LineItem
      x-badges:
        - color: red
          label: ALPHA
  /api/configurations/expiry:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpiryConfiguration'
          description: config found.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Core - Expiries
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getExpiryConfiguration
      summary: Get the current configuration
      x-badges:
        - color: orange
          label: BETA
    put:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpiryConfiguration'
          description: The configuration was successfully updated.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpiryConfiguration'
          description: The configuration was successfully created.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '409':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity version conflict
      tags:
        - Core - Expiries
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: upsertExpiryConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpiryConfiguration'
        description: Desired configuration to create/update
        required: true
      summary: Change the tenant wide configuration
      x-badges:
        - color: orange
          label: BETA
  /api/expiries:
    get:
      parameters:
        - description: Status to filter the results
          in: query
          name: status
          required: false
          schema:
            $ref: '#/components/schemas/ExpiryEntityStatus'
        - description: ProcessRef to filter the results
          in: query
          name: processRef
          required: false
          schema:
            type: string
        - description: >-
            StartDate to filter the results. Expiry Date of results is after or
            equals the given value
          in: query
          name: startDate
          required: false
          schema:
            type: string
            format: date-time
            example: '2020-02-03T08:45:51.525Z'
        - description: >-
            EndDate to filter the results. Expiry Date of results is before or
            equals the given value
          in: query
          name: endDate
          required: false
          schema:
            type: string
        - description: entity to start after
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExpiryEntity'
          description: found entities in the result.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Core - Expiries
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getExpiries
      summary: Get expiries by filter parameter
      x-badges:
        - color: orange
          label: BETA
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpiryEntityForCreation'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpiryEntity'
          description: created entity in the result.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Core - Expiries
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: createExpiry
      summary: Create Expiry
      x-badges:
        - color: orange
          label: BETA
  /api/expiries/{expiryId}:
    get:
      parameters:
        - description: id for the searched entity
          in: path
          name: expiryId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpiryEntity'
          description: found entity in the result.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Core - Expiries
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getExpiry
      summary: Get Expiry by Id
      x-badges:
        - color: orange
          label: BETA
    patch:
      parameters:
        - description: id of the entity to be changed
          in: path
          name: expiryId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpiryEntityForUpdate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpiryEntity'
          description: changed entity in the result.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Core - Expiries
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: updateExpiry
      summary: Update Expiry
      x-badges:
        - color: orange
          label: BETA
  /api/externalactions:
    get:
      parameters:
        - description: all entities after given Id.
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
        - description: Filter by the given group or groups
          explode: true
          in: query
          name: groups
          required: false
          schema:
            type: array
            items:
              type: string
        - description: Filter by the given processRef
          in: query
          name: processRef
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ExternalAction'
                type: array
          description: Returning the list of external actions available.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: External action not found
      tags:
        - Core - External Actions
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Returns a list with all external actions.
      operationId: getExternalActions
      summary: Get the external actions related to a process
      x-badges:
        - color: orange
          label: BETA
    post:
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalAction'
          description: The external action was successfully created.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: External action not found
      tags:
        - Core - External Actions
      description: Creates a new external action for a process.
      operationId: postExternalAction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalActionForCreation'
        description: The external action to be created
        required: true
      summary: Create an external action
  /api/externalactions/{externalActionId}:
    get:
      parameters:
        - description: Id of the external action you want to get
          in: path
          name: externalActionId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ExternalAction'
                type: array
          description: >-
            External action was found & you are allowed to get it. The result is
            in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: External action not found
      tags:
        - Core - External Actions
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Returns an external action with the given id if found.
      operationId: getExternalAction
      summary: Get an external action
      x-badges:
        - color: orange
          label: BETA
    delete:
      parameters:
        - description: ID of the external action that you want delete
          in: path
          name: externalActionId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: External action was found & you were allowed to delete it.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: External action not found
      tags:
        - Core - External Actions
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: deleteExternalAction
      summary: Delete an external action with the given id.
      x-badges:
        - color: orange
          label: BETA
    put:
      parameters:
        - description: ID of the external action that you want update
          in: path
          name: externalActionId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ExternalAction'
          description: External action was found & you are allowed to update it.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Facility not found
      tags:
        - Core - External Actions
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Replaces the external action with the provided in the body.
      operationId: putExternalAction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalActionForReplacement'
        description: Updates an external action
        required: true
      summary: Replace an external action
      x-badges:
        - color: orange
          label: BETA
  /api/externalactions/{externalActionId}/logs:
    post:
      parameters:
        - description: ID of the external action you want to create the log for
          in: path
          name: externalActionId
          required: true
          schema:
            type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalActionLog'
          description: The log for the external action was successfully created.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: External action not found
      tags:
        - Core - External Actions
      description: Creates a new external action log.
      operationId: postExternalActionLog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalActionLogForCreation'
        description: The external action log to be created
        required: true
      summary: Creates a log for an external action
    get:
      parameters:
        - description: all entities after given Id
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
        - description: Id of the external action you want to get the logs from
          in: path
          name: externalActionId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ExternalActionLogs'
                type: array
          description: >-
            Logs were found & you are allowed to get it. The result is in the
            body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: External action logs not found
      tags:
        - Core - External Actions
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Returns the logs related with the given external action.
      operationId: getExternalActionLogs
      summary: Get the logs for an external action
      x-badges:
        - color: orange
          label: BETA
  /api/facilities/{facilityId}/carriers/{carrierRef}:
    get:
      parameters:
        - description: ID of facility you want to get listing
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: >-
            The ID that describes the connection of this facility to the
            referenced carrier
          in: path
          name: carrierRef
          required: true
          schema:
            type: string
        - description: >-
            Provide the localized names and descriptions for the parcel label
            classifications. If not provided the default locale is used., for
            example de_DE.
          in: query
          name: locale
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityCarrierConnection'
          description: >-
            Carrier to facility connections was found & you were allowed to
            access it. The result is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            There is no connection to a carrier with this facility referenced by
            the provided facilityCarrierConnectionId
      tags:
        - Core - Facilities
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getFacilityCarrier
      summary: Get the details for a carrier related to the facility with the given ID
      x-badges:
        - color: orange
          label: BETA
    post:
      parameters:
        - description: ID of facility you want to get
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: The referenced carrier ID
          in: path
          name: carrierRef
          required: true
          schema:
            type: string
        - description: >-
            Provide the localized names and descriptions for the parcel label
            classifications. If not provided the default locale is used., for
            example de_DE.
          in: query
          name: locale
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityCarrierConnection'
          description: Creation was successful.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            There is no connection to a carrier with this facility referenced by
            the provided facilityCarrierConnectionId.
      tags:
        - Core - Facilities
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: createCarrierToFacility
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacilityCarrierConnectionForCreation'
        description: Representation that describes the facility
        required: true
      summary: >-
        Create a connection of a configured carrier to the facility with given
        ID
      x-badges:
        - color: orange
          label: BETA
    put:
      parameters:
        - description: ID of facility you want to get
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: The referenced carrier ID
          in: path
          name: carrierRef
          required: true
          schema:
            type: string
        - description: >-
            Provide the localized names and descriptions for the parcel label
            classifications. If not provided the default locale is used., for
            example de_DE.
          in: query
          name: locale
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityCarrierConnection'
          description: Modification was successful.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            There is no connection to a carrier with this facility referenced by
            the provided facilityCarrierConnectionId.
      tags:
        - Core - Facilities
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: connectCarrierToFacility
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacilityCarrierConnectionForModification'
        description: Representation that describes the facility
        required: true
      summary: 'Connect a configured carrier to the facility with given ID '
      x-badges:
        - color: orange
          label: BETA
  /api/facilities/{facilityId}/connections:
    get:
      parameters:
        - description: ID of facility you want to get connections
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: The targetFacilityRef of the connection
          in: query
          name: targetFacilityRef
          required: false
          schema:
            type: string
        - description: all entities
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
        - description: >-
            Provide the localized names and descriptions for the parcel label
            classifications. If not provided the default locale is used., for
            example de_DE.
          in: query
          name: locale
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterFacilityConnections'
          description: >-
            Facility connections was found & you were allowed to access it. The
            result is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Core - Facilities
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getFacilityConnections
      summary: >-
        Get the details for all connections related to the facility with the
        given ID
      x-badges:
        - color: orange
          label: BETA
    post:
      parameters:
        - description: ID of facility you want to create a connection for
          in: path
          name: facilityId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterFacilityConnection'
          description: Creation was successful.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Core - Facilities
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: createConnectionToFacility
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: >-
                    #/components/schemas/InterFacilityConnectionToSupplierForCreation
                - $ref: >-
                    #/components/schemas/InterFacilityConnectionToManagedFacilityForCreation
                - $ref: >-
                    #/components/schemas/InterFacilityConnectionToCustomerForCreation
              discriminator:
                propertyName: type
                mapping:
                  SUPPLIER: >-
                    #/components/schemas/InterFacilityConnectionToSupplierForCreation
                  MANAGED_FACILITY: >-
                    #/components/schemas/InterFacilityConnectionToManagedFacilityForCreation
                  CUSTOMER: >-
                    #/components/schemas/InterFacilityConnectionToCustomerForCreation
        description: Representation that the connection
        required: true
      summary: Create a connections for a suppplier facility with given ID
      x-badges:
        - color: orange
          label: BETA
  /api/facilities/{facilityId}/connections/{connectionId}:
    get:
      parameters:
        - description: ID of facility you want to get connections
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: >-
            The ID that describes the connection of this facility to the its
            connections
          in: path
          name: connectionId
          required: true
          schema:
            type: string
        - description: >-
            Provide the localized names and descriptions for the parcel label
            classifications. If not provided the default locale is used., for
            example de_DE.
          in: query
          name: locale
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterFacilityConnection'
          description: >-
            Facility connections was found & you were allowed to access it. The
            result is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            There is no connection for this facility referenced by the provided
            connectionId
      tags:
        - Core - Facilities
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getFacilityConnection
      summary: >-
        Get the details for a facility connection related to the facility with
        the given ID
      x-badges:
        - color: orange
          label: BETA
    put:
      parameters:
        - description: ID of facility you want to get
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: The referenced connection ID
          in: path
          name: connectionId
          required: true
          schema:
            type: string
        - description: >-
            Provide the localized names and descriptions for the parcel label
            classifications. If not provided the default locale is used., for
            example de_DE.
          in: query
          name: locale
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterFacilityConnection'
          description: Modification was successful.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            There is no connection with this facility referenced by the provided
            cnnectionId.
      tags:
        - Core - Facilities
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: updateFacilityConnection
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: >-
                    #/components/schemas/InterFacilityConnectionToSupplierForUpdate
                - $ref: >-
                    #/components/schemas/InterFacilityConnectionToManagedFacilityForUpdate
                - $ref: >-
                    #/components/schemas/InterFacilityConnectionToCustomerForUpdate
              discriminator:
                propertyName: type
                mapping:
                  SUPPLIER: >-
                    #/components/schemas/InterFacilityConnectionToSupplierForUpdate
                  MANAGED_FACILITY: >-
                    #/components/schemas/InterFacilityConnectionToManagedFacilityForUpdate
                  CUSTOMER: >-
                    #/components/schemas/InterFacilityConnectionToCustomerForUpdate
        description: Representation that describes the facility
        required: true
      summary: Update the given connection for a facility
      x-badges:
        - color: orange
          label: BETA
    delete:
      parameters:
        - description: ID of facility you want to delete a connection
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: The ID of the connection you want to delete
          in: path
          name: connectionId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Deletion was successful
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: There is no connection for the facility and the provided id
      tags:
        - Core - Facilities
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: deleteFacilityConnection
      summary: Delete the connection for facility with the given ID
      x-badges:
        - color: orange
          label: BETA
  /api/health:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResult'
          description: Result of all tested dependencies for their health status
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Manual reroute configuration not found
      tags:
        - Infrastructure - Health
      description: ''
      operationId: healthCheck
      summary: Do a health check
  /api/facilities/{facilityId}/storagelocations:
    get:
      parameters:
        - description: ID of facility from whom you want to get the storage locations
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: all entities after given Id
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
        - description: limit result to storage locations with scannable code
          in: query
          name: scannableCode
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/StorageLocation'
                type: array
          description: >-
            Facility was found & you are allowed to get the storage locations.
            The result is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Facility not found
      tags:
        - Inventory Management – Storage Locations
      description: ''
      operationId: getFacilityStorageLocations
      summary: Get the storage locations of this facility
    post:
      parameters:
        - description: ID of facility from whom you want to create the storage location
          in: path
          name: facilityId
          required: true
          schema:
            type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageLocation'
          description: The storage location was successfully created.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Facility not found
      tags:
        - Inventory Management – Storage Locations
      description: Creates a new storage location in this facility.
      operationId: postFacilityStorageLocations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageLocationForCreation'
        description: Patch set
        required: true
      summary: Create a new storage location
  /api/facilities/{facilityId}/storagelocations/{storageLocationId}:
    get:
      parameters:
        - description: ID of facility from whom you want to get the storage locations
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: the ID of the storageLocation
          in: path
          name: storageLocationId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/StorageLocation'
                type: array
          description: >-
            Facility was found & you are allowed to get the storage locations.
            The result is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Facility not found
      tags:
        - Inventory Management – Storage Locations
      description: ''
      operationId: getFacilityStorageLocation
      summary: Get the storage location of this facility
    delete:
      parameters:
        - description: ID of facility from whom you want to delete the storage location
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: ID of the storageLocation you want to delete
          in: path
          name: storageLocationId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Storage location was found & you were allowed to delete it.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Facility or storage location not found
      tags:
        - Inventory Management – Storage Locations
      description: ''
      operationId: deleteFacilityStorageLocation
      summary: Delete a storage location of a facility with the given ID
    put:
      parameters:
        - description: ID of facility from whom you want to put the storage locations
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: the ID of the storageLocation
          in: path
          name: storageLocationId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageLocation'
          description: Storage location was found & you were allowed to update it.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Facility or Storage Location not found
      tags:
        - Inventory Management – Storage Locations
      description: >-
        Replaces the current storage locations of this Facility with the
        provided in the body.
      operationId: putFacilityStorageLocation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageLocationForReplacement'
        description: Patch set
        required: true
      summary: Replace the storage locations of a Facility
    patch:
      parameters:
        - description: ID of facility you want to patch the storage locations
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: the ID of the storageLocation
          in: path
          name: storageLocationId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageLocation'
          description: Storage location was found & you were allowed to update it.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Facility or Storage location not found
      tags:
        - Inventory Management – Storage Locations
      description: >
        Adds new storage locations, updates existing ones and keeps the
        previously present ones in the database.


        1. If a storage location exists in the patch action but not in the
        database it is added.

        2. If a storage location exists both in the patch action and in the
        database it is updated and the contents merged.

        3. If a storage location exists only in the database, it is left
        untouched.
      operationId: patchFacilityStorageLocation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageLocationPatchActions'
        description: Patch set
        required: true
      summary: Patches the storage locations of a facility with the given ID
  /api/facilities/{facilityId}/zones:
    get:
      parameters:
        - description: ID of facility from whom you want to get the zones
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: all entities after given Id
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Zone'
                type: array
          description: >-
            Facility was found & you are allowed to get the zones. The result is
            in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Facility not found
      tags:
        - Inventory Management – Storage Locations
      description: ''
      operationId: getFacilityZones
      summary: Get the zones of this facility
    post:
      parameters:
        - description: ID of facility from whom you want to create the zone
          in: path
          name: facilityId
          required: true
          schema:
            type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Zone'
          description: The zone was successfully created.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Zone not found
      tags:
        - Inventory Management – Storage Locations
      description: Creates a new zone in this facility.
      operationId: postFacilityZone
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZoneForCreation'
        description: The zone to be created
        required: true
      summary: Create a zone
  /api/facilities/{facilityId}/zones/{zoneId}:
    get:
      parameters:
        - description: ID of facility from whom you want to get the zones
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: the ID of the zone
          in: path
          name: zoneId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Zone'
                type: array
          description: >-
            Zone was found & you are allowed to get it. The result is in the
            body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Facility not found
      tags:
        - Inventory Management – Storage Locations
      description: ''
      operationId: getFacilityZone
      summary: Get the zone of this facility
    delete:
      parameters:
        - description: ID of facility from whom you want to delete the zone
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: ID of the zone you want to delete
          in: path
          name: zoneId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Zone was found & you were allowed to delete it.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Facility or storage location not found
      tags:
        - Inventory Management – Storage Locations
      description: ''
      operationId: deleteFacilityZone
      summary: Delete a zone of a facility with the given ID
    put:
      parameters:
        - description: ID of facility from whom you want to put the zone
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: the ID of the zone
          in: path
          name: zoneId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Zone'
          description: Zone was found & you are allowed to update it.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Facility not found
      tags:
        - Inventory Management – Storage Locations
      description: >-
        Replaces the current zone of this Facility with the provided in the
        body.
      operationId: putFacilityZone
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZoneForReplacement'
        description: Patch set
        required: true
      summary: Replace the zones of a Facility
  /api/customservices/{customServiceId}:
    patch:
      parameters:
        - description: ID of custom service you want to patch
          in: path
          name: customServiceId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomService'
          description: >-
            custom service was found & patch-set has been applied. The patched
            custom service is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: custom service not found
        '409':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: custom service version conflict
      tags:
        - Core - Custom Services
      operationId: patchCustomService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomServicePatchActions'
        description: Patch set
        required: true
      summary: Patches a custom service with the given ID
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      x-badges:
        - color: red
          label: ALPHA
    get:
      parameters:
        - description: ID of custom service you want to get
          in: path
          name: customServiceId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomService'
          description: Custom service config could be found in response body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Core - Custom Services
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getCustomService
      summary: Get requested Custom service
      x-badges:
        - color: red
          label: ALPHA
  /api/customservices/{customServiceId}/additionalinformation:
    post:
      parameters:
        - description: ID of custom service you want to create service job for
          in: path
          name: customServiceId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomService'
          description: The custom service was successfully updated.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomService'
          description: The custom service was successfully created.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Core - Custom Services
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: createCustomServiceAdditionalInformation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdditionalInformationForCreation'
        description: Desired custom service to create
        required: true
      summary: Create a custom service additional information
      x-badges:
        - color: red
          label: ALPHA
  /api/customservices/{customServiceId}/additionalinformation/{additionalInformationId}:
    delete:
      parameters:
        - description: ID of custom service
          in: path
          name: customServiceId
          required: true
          schema:
            type: string
        - description: ID of additional information you want to delete
          in: path
          name: additionalInformationId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomService'
          description: The custom service was successfully updated.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomService'
          description: The custom service was successfully created.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Core - Custom Services
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: deleteAdditionalInfo
      summary: Delete a custom service
      x-badges:
        - color: red
          label: ALPHA
    put:
      parameters:
        - description: ID of custom service
          in: path
          name: customServiceId
          required: true
          schema:
            type: string
        - description: ID of additional information you want to put
          in: path
          name: additionalInformationId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomService'
          description: The custom service was successfully updated.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomService'
          description: The custom service was successfully created.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Core - Custom Services
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: updateCustomServiceAdditionalInformation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdditionalInformationForCreation'
        description: Desired custom service to create
        required: true
      summary: Update a custom service additional information
      x-badges:
        - color: red
          label: ALPHA
  /api/customservices:
    get:
      parameters:
        - description: all entities after given Id
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
        - description: tenantCustomServiceId to filter for
          in: query
          name: tenantCustomServiceId
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StrippedCustomServices'
          description: Custom service config could be found in response body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Core - Custom Services
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getCustomServices
      summary: Get Custom services
      x-badges:
        - color: red
          label: ALPHA
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomService'
          description: The custom service was successfully updated.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomService'
          description: The custom service was successfully created.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Core - Custom Services
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: createCustomService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomServiceForCreation'
        description: Desired custom service to create
        required: true
      summary: Create a custom service
      x-badges:
        - color: red
          label: ALPHA
  /api/facilities/{facilityId}/customservices:
    get:
      parameters:
        - description: ID of facility
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: all entities after given Id
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StrippedFacilityCustomServiceConnections'
          description: Custom service connections could be found in response body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Core - Custom Services
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getFacilityCustomServiceConnections
      summary: Get requested Custom service connection for a facility
      x-badges:
        - color: red
          label: ALPHA
  /api/facilities/{facilityId}/customservices/{customServiceId}:
    get:
      parameters:
        - description: ID of facility
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: ID of the custom service
          in: path
          name: customServiceId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityCustomServiceConnection'
          description: Custom service connection could be found in response body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Core - Custom Services
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getFacilityCustomService
      summary: Get requested Custom service connection for a facility
      x-badges:
        - color: red
          label: ALPHA
    patch:
      parameters:
        - description: ID of facility
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: ID of the custom service
          in: path
          name: customServiceId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityCustomServiceConnection'
          description: The custom service connection was successfully created.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Core - Custom Services
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: updateFacilityCustomServiceConnction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacilityCustomServiceConnectionForUpdate'
        description: Desired custom service connection to create/update
        required: true
      summary: Update a facility custom service connection
      x-badges:
        - color: red
          label: ALPHA
    post:
      parameters:
        - description: ID of facility
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: ID of the custom service
          in: path
          name: customServiceId
          required: true
          schema:
            type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityCustomServiceConnection'
          description: The custom service connection was successfully created.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Core - Custom Services
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: createFacilityCustomServiceConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacilityCustomServiceConnectionForCreation'
        description: Desired custom service connection to create/update
        required: true
      summary: Create a facility custom service connection
      x-badges:
        - color: red
          label: ALPHA
    delete:
      parameters:
        - description: ID of facility
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: ID of the custom service
          in: path
          name: customServiceId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The custom service connection was successfully deleted.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Core - Custom Services
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: deleteFacilityCustomServiceConnection
      summary: Delete a facility custom service connection
      x-badges:
        - color: red
          label: ALPHA
  /api/servicejobs:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceJobs'
          description: Service Jobs could be found in response body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Fulfillment Operations - Custom Services
      operationId: getServiceJobs
      parameters:
        - description: all entities after given Id
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
        - description: Reference of the facility you want to filter for
          in: query
          name: facilityRef
          required: false
          schema:
            type: string
        - description: Reference the assigned user on this entity - id or username
          in: query
          name: assignedUser
          required: false
          schema:
            type: string
        - description: >-
            Reference to the statuses you want to get the corresponding service
            job
          in: query
          name: status
          required: false
          schema:
            type: array
            items:
              type: string
        - description: Type of channel you want to filter for
          in: query
          name: channel
          required: false
          schema:
            $ref: '#/components/schemas/ServiceJobFilterChannel'
        - description: Start target date range for service jobs
          in: query
          name: startTargetTime
          required: false
          schema:
            type: string
            example: '2020-02-03T08:45:50.525Z'
            format: date-time
        - description: End target date range for service jobs
          in: query
          name: endTargetTime
          required: false
          schema:
            type: string
            example: '2020-02-03T08:45:50.525Z'
            format: date-time
        - description: >-
            Search term you want to get the corresponding service jobs. Search
            will be performed on multiple fields, like tenantOrderId,
            consumerName, tenantArticleId and more
          in: query
          name: searchTerm
          required: false
          schema:
            type: string
      summary: Get Service Jobs
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      x-badges:
        - color: red
          label: ALPHA
    post:
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceJob'
          description: The service job was successfully created.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Fulfillment Operations - Custom Services
      operationId: createServiceJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceJobForCreation'
        description: Desired service job to create
        required: true
      summary: Create a service job
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      x-badges:
        - color: red
          label: ALPHA
  /api/servicejobs/{serviceJobId}:
    get:
      parameters:
        - description: ID of service job you want to get
          in: path
          name: serviceJobId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceJob'
          description: Service Job could be found in response body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Custom Services
      operationId: getServiceJob
      summary: Get requested service job
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      x-badges:
        - color: red
          label: ALPHA
  /api/servicejobs/{serviceJobId}/actions:
    post:
      parameters:
        - description: ID of service job you want to update
          in: path
          name: serviceJobId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceJob'
          description: The service job was successfully updated.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Fulfillment Operations - Custom Services
      operationId: updateServiceJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceJobActionsParameter'
        description: Desired change to a service job
        required: true
      summary: Update a service job
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      x-badges:
        - color: red
          label: ALPHA
  /api/linkedservicejobs:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedServiceJobsPaginatedResult'
          description: LinkedServiceJobs could be found in response body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Fulfillment Operations - Custom Services
      operationId: getLinkedServiceJobs
      parameters:
        - description: all entities after given Id
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
        - description: facilities to filter to
          in: query
          name: facilityIds
          required: false
          schema:
            type: array
            items:
              type: string
        - description: >-
            Reference to the statuses you want to get the corresponding linked
            service jobs
          in: query
          name: status
          required: false
          schema:
            type: array
            items:
              type: string
        - description: sort order
          in: query
          name: orderBy
          required: false
          schema:
            $ref: '#/components/schemas/LinkedServiceJobsOrderBy'
        - description: type of channel you want to filter for
          in: query
          name: channel
          required: false
          schema:
            $ref: '#/components/schemas/LinkedServiceJobsFilterChannel'
        - description: Start target date range for linked service jobs
          in: query
          name: startTargetTime
          required: false
          schema:
            type: string
            example: '2020-02-03T08:45:50.525Z'
            format: date-time
        - description: End target date range for linked service jobs
          in: query
          name: endTargetTime
          required: false
          schema:
            type: string
            example: '2020-02-03T08:45:50.525Z'
            format: date-time
        - description: >-
            Search term you want to get the corresponding linked service jobs.
            Search will be performed on multiple fields, like tenantOrderId,
            consumerName, tenantArticleId and more
          in: query
          name: searchTerm
          required: false
          schema:
            type: string
        - description: >-
            Reference to the username you want to get the corresponding
            linkedServiceJobs for
          in: query
          name: modifiedByUsername
          required: false
          schema:
            type: string
      summary: Get LinkedServiceJobs
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      x-badges:
        - color: red
          label: ALPHA
  /api/linkedservicejobs/{linkedServiceJobsId}:
    get:
      parameters:
        - description: ID of LinkedServiceJobs you want to get
          in: path
          name: linkedServiceJobsId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedServiceJobs'
          description: LinkedServiceJobs could be found in response body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Custom Services
      operationId: getLinkedServiceJobsById
      summary: Get requested LinkedServiceJobs
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      x-badges:
        - color: red
          label: ALPHA
  /api/linkedservicejobs/{linkedServiceJobsId}/servicejoblinks:
    post:
      parameters:
        - description: ID of LinkedServiceJobs you want to alter
          in: path
          name: linkedServiceJobsId
          required: true
          schema:
            type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedServiceJobs'
          description: The ServiceJobLink was successfully added to the LinkedServiceJobs.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Fulfillment Operations - Custom Services
      operationId: addServiceJobLink
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceJobLinkForAdding'
        description: Desired ServiceJobLink to add
        required: true
      summary: Add a ServiceJobLink to an LinkedServiceJobs on root level
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      x-badges:
        - color: red
          label: ALPHA
  /api/linkedservicejobs/{linkedServiceJobsId}/servicejoblinks/{serviceJobLinkId}:
    post:
      parameters:
        - description: ID of LinkedServiceJobs you want to alter
          in: path
          name: linkedServiceJobsId
          required: true
          schema:
            type: string
        - description: >-
            ID of ServiceJobLink you want to add the new ServiceJobLink
            underneath
          in: path
          name: serviceJobLinkId
          required: true
          schema:
            type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedServiceJobs'
          description: >-
            The ServiceJobLink was successfully added nested inside the
            LinkedServiceJobs.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Fulfillment Operations - Custom Services
      operationId: addNestedServiceJobLink
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceJobLinkForAdding'
        description: Desired ServiceJobLink to add
        required: true
      summary: Add a ServiceJobLink to an ServiceJobLInk inside the LinkedServiceJobs
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      x-badges:
        - color: red
          label: ALPHA
  /api/configurations/operativeservice:
    get:
      parameters:
        - description: >-
            Provide the localized names and descriptions for operative service
            configuration.
             If not provided the default locale is used. for
             example de_DE.
          in: query
          name: locale
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperativeServiceConfiguration'
          description: Central Configuration of all Service related operations
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Custom Services
      operationId: getOperativeServiceConfiguration
      summary: Get the operative service configuration
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      x-badges:
        - color: red
          label: ALPHA
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperativeServiceConfigurationForUpsert'
        description: create/update operative service configuration
        required: true
      parameters:
        - description: >-
            Provide the localized names and descriptions for the operative
            service configuration.
             If not provided the default locale is used. for
             example de_DE.
          in: query
          name: locale
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperativeServiceConfiguration'
          description: The operative service configuration was successfully updated.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperativeServiceConfiguration'
          description: The operative service configuration was successfully created.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Fulfillment Operations - Custom Services
      operationId: upsertOperativeServiceConfigurations
      summary: Change the tenant wide operative service  configuration
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      x-badges:
        - color: red
          label: ALPHA
  /api/operativeprocesses:
    get:
      parameters:
        - description: facility to filter the results
          in: query
          name: facilityId
          required: true
          schema:
            type: string
        - description: entity to start after
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
            maximum: 500
            minimum: 1
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OperativeProcess'
          description: All operative processes matching the given parameters
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Operative Process
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getOperativeProcesses
      summary: Get all operativeProcesses
      x-badges:
        - color: red
          label: ALPHA
  /api/operativeprocesses/{operativeProcessId}:
    get:
      parameters:
        - description: id of the operativeProcess you want to retrieve
          in: path
          name: operativeProcessId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperativeProcess'
          description: Found operativeProcess by given ID
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Operative Process
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getOperativeProcessById
      summary: Get operativeProcess by ID
      x-badges:
        - color: red
          label: ALPHA
  /api/operativecontainertypes/{operativeContainerTypeId}:
    get:
      parameters:
        - description: id of the operativeContainer you want to retrieve
          in: path
          name: operativeContainerTypeId
          required: true
          schema:
            type: string
        - description: >-
            Provide the localized names and descriptions for the
            operativeContainerTypes. If not provided the default locale is
            used., for example de_DE.
          in: query
          name: locale
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperativeContainerType'
          description: Found operativeContainerType by given ID
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Operative Container
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getOperativeContainerTypeById
      summary: Get operativeContainerType by ID
      x-badges:
        - color: red
          label: ALPHA
    patch:
      parameters:
        - description: id of the operativeContainer you want to update
          in: path
          name: operativeContainerTypeId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperativeContainerTypeForUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperativeContainerType'
          description: Found operativeContainerType by given ID
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Operative Container
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: updateOperativeContainerTypeById
      summary: Update operativeContainerType by ID
      x-badges:
        - color: red
          label: ALPHA
  /api/operativecontainertypes:
    get:
      parameters:
        - description: entity to start after
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
            maximum: 500
            minimum: 1
        - description: OperativeType you want to filter by
          in: query
          name: operativeType
          required: false
          schema:
            type: string
        - description: ScannableIdentifier you want to filter by
          in: query
          name: scannableIdentifier
          required: false
          schema:
            type: string
        - description: >-
            Provide the localized names and descriptions for the
            operativContainerType. If not provided the default locale is used.,
            for example de_DE.
          in: query
          name: locale
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperativeContainerTypesResponse'
          description: Found operativeProcess by given ID
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Operative Container
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getOperativeContainerTypes
      summary: Get operativeContainerTypes
      x-badges:
        - color: red
          label: ALPHA
    post:
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperativeContainerType'
          description: Successfully created resource.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - Fulfillment Operations - Operative Container
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: createOperativeContainerType
      summary: Create operativeContainerType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperativeContainerTypeForCreation'
        required: true
      x-badges:
        - color: red
          label: ALPHA
  /api/operativecontainertypes/{operativeContainerTypeId}/icon:
    put:
      parameters:
        - in: path
          name: operativeContainerTypeId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperativeContainerType'
          description: Successfully updated operative container type icon.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperativeContainerType'
          description: Successfully created operative container type icon.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - Fulfillment Operations - Operative Container
      operationId: uploadOperativeContainerTypeIcon
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NamedFile'
        description: Base64 encoded icon to upload
        required: true
      summary: Upload icon for operative container types
  /api/cancelationreasons:
    get:
      parameters:
        - description: all entities after given Id
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelationReasons'
          description: >-
            Cancelation reasons were found & you were allowed to access them.
            The result is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Cancelation reason not found
      tags:
        - DOMS - Orders
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getCancelationReasons
      summary: Get a list with all cancelation reasons
      x-badges:
        - color: red
          label: ALPHA
    post:
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelationReason'
          description: >-
            The cancelation reason has been successfully created. The Location
            header includes the URL of the document.
        '303':
          description: >-
            The Cancelation Reason already exists. The Location header contains
            the URL of the document.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - DOMS - Orders
      operationId: postCancelationReason
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelationReasonForCreation'
        description: Cancelation reason
        required: true
      summary: Post a new cancelation reason
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      x-badges:
        - color: red
          label: ALPHA
  /api/cancelationreasons/{cancelationReasonId}:
    get:
      parameters:
        - description: Id of the cancelation reason you wish to retrieve
          in: path
          name: cancelationReasonId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelationReason'
          description: >-
            Cancelation reason was found & you were allowed to access it. The
            result is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Cancelation reason not found
      tags:
        - DOMS - Orders
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getCancelationReasonById
      summary: Get a cancelation reason with the given id
      x-badges:
        - color: orange
          label: BETA
    put:
      parameters:
        - description: ID of the cancelation reason you intend to modify
          in: path
          name: cancelationReasonId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelationReasonForModification'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelationReason'
          description: >-
            Cancelation reason was found & you were allowed to access it. The
            result is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Cancelation reason not found
      tags:
        - DOMS - Orders
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: putCancelationReason
      summary: Update a cancelation reason
      x-badges:
        - color: red
          label: ALPHA
    delete:
      parameters:
        - description: ID of the cancelation reason you intend to delete
          in: path
          name: cancelationReasonId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >-
            The cancelation reason was found, and you have been granted
            permission to delete it.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Cancelation reason not found
      tags:
        - DOMS - Orders
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: deleteCancelationReason
      summary: Delete a cancelation reason
      x-badges:
        - color: red
          label: ALPHA
  /api/configurations/routing/toolkit/fences:
    get:
      parameters:
        - description: all entities
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolkitFencesTransporter'
          description: The current list of available toolkit fences
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: No more elements available
      tags:
        - DOMS - Routing Plans
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getToolkitFences
      summary: Returns all toolkit fences
      x-badges:
        - color: orange
          label: BETA
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ToolkitFenceForCreation'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ToolkitFence'
          description: Toolkit Fence was created successfully.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - DOMS - Routing Plans
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: postToolkitFence
      summary: Creates a toolkit fence
      x-badges:
        - color: orange
          label: BETA
  /api/configurations/routing/toolkit/fences/{toolkitFenceId}:
    get:
      parameters:
        - description: Id of the toolkit fence you want to get
          in: path
          name: toolkitFenceId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolkitFence'
          description: >-
            ToolkitFence was found & you were allowed to access it. The result
            is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: User not found
      tags:
        - DOMS - Routing Plans
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getToolkitFenceById
      summary: Get a tag with the given key
      x-badges:
        - color: orange
          label: BETA
    put:
      parameters:
        - description: ID of the toolkit fence you want to update
          in: path
          name: toolkitFenceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ToolkitFenceForModification'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolkitFence'
          description: >-
            Toolkit fence was found & you were allowed to access it. The result
            is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Toolkit fence not found
      tags:
        - DOMS - Routing Plans
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: putToolkitFence
      summary: Update a toolkit fence
      x-badges:
        - color: orange
          label: BETA
    delete:
      parameters:
        - description: ID of the toolkit fence you want to delete
          in: path
          name: toolkitFenceId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Toolkit fence was found & you were allowed to delete it.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Toolkit fence not found
      tags:
        - DOMS - Routing Plans
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: deleteToolkitFence
      summary: Delete a toolkit fence
      x-badges:
        - color: orange
          label: BETA
  /api/configurations/routing/toolkit/ratings:
    get:
      parameters:
        - description: all entities
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolkitRatingTransporter'
          description: The current list of available toolkit fences
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: No more elements available
      tags:
        - DOMS - Routing Plans
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getToolkitRatings
      summary: Returns all toolkit ratings
      x-badges:
        - color: orange
          label: BETA
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ToolkitRatingForCreation'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ToolkitRating'
          description: Toolkit Rating was created successfully.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - DOMS - Routing Plans
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: postToolkitRating
      summary: Creates a toolkit rating
      x-badges:
        - color: orange
          label: BETA
  /api/fulfillability:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fulfillability'
          description: The result of the fulfillability .
        '204':
          description: >-
            There was no result of the fulfillability request. Please make sure
            to provide at least one of the attributes shipping or collect.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - DOMS - Checkout Options
      deprecated: true
      description: >-
        This part of the API is deprecated. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Deprecated: use /api/promises instead
      operationId: queryFulfillability
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FulfillabilityQuery'
        description: Representation that describes the fulfillability query
        required: true
      summary: >-
        Provides information which kind of fulfillment is possible under given
        circumstances.
  /api/fulfillability/clickandcollect:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillabilityResult'
          description: The result of the fulfillability for click and collect.
        '204':
          description: >-
            There was no result of the fulfillability request. Please make sure
            to provide at least one of the attributes shipping or collect.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - DOMS - Checkout Options
      deprecated: true
      description: >-
        This part of the API is deprecated. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Deprecated: use /api/promises instead
      operationId: queryFulfillabilityClickAndCollect
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FulfillabilityClickAndCollectQuery'
        description: Representation that describes the fulfillability query
        required: true
      summary: >-
        Provides information which kind of fulfillment is possible under given
        circumstances.
  /api/fulfillability/shipfromstore:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillabilityResult'
          description: The result of the fulfillability for ship from store.
        '204':
          description: There was no result of the fulfillability request.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - DOMS - Checkout Options
      deprecated: true
      description: >-
        This part of the API is deprecated. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Deprecated: use /api/promises instead
      operationId: queryFulfillabilityShipFromStore
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FulfillabilityShipFromStoreQuery'
        description: Representation that describes the fulfillability query
        required: true
      summary: >-
        Provides information which kind of fulfillment is possible under given
        circumstances.
  /api/routing/sourcingoptions:
    post:
      parameters:
        - description: >-
            This part of the API is in Alpha status. For details please check
            the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />respond with mock
          in: query
          name: returnMockResponse
          required: false
          schema:
            type: boolean
          x-badges:
            - color: red
              label: ALPHA
      tags:
        - DOMS - Sourcing Options
      summary: Create a new sourcing option request
      operationId: createSourcingOptionsRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourcingOptionsRequest'
        required: true
      responses:
        '201':
          description: Sourcing Option successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourcingOptionsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/SourcingOptionsResponse'
        '400':
          description: Validation exception
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
  /api/routing/sourcingoptions/{sourcingOptionsRequestId}:
    get:
      tags:
        - DOMS - Sourcing Options
      summary: Get a single sourcing options response
      operationId: getSourcingOption
      parameters:
        - description: Id of the sourcing option request
          in: path
          name: sourcingOptionsRequestId
          required: true
          schema:
            type: string
        - description: >-
            This part of the API is in Alpha status. For details please check
            the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />respond with mock
          in: query
          name: returnMockResponse
          required: false
          schema:
            type: boolean
          x-badges:
            - color: red
              label: ALPHA
      responses:
        '200':
          description: Sourcing Options successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourcingOptionsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/SourcingOptionsResponse'
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
  /api/routing/strategies:
    post:
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingStrategy'
          description: The created routing strategy.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - DOMS - Routing Strategy
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />creates a new revision of the routing strategy
      operationId: postRoutingStrategy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingStrategyForCreation'
        description: The desired routing strategy
        required: true
      summary: Creates a new revision of the routing strategy.
      x-badges:
        - color: red
          label: ALPHA
    get:
      parameters:
        - description: all entities
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingStrategyTransporter'
          description: The current list of available routing strategies
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: No more elements available
      tags:
        - DOMS - Routing Strategy
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getRoutingStrategies
      summary: Returns all routing strategies
      x-badges:
        - color: red
          label: ALPHA
  /api/routing/nodeconfigcategories:
    post:
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/RoutingStrategyNodeConfigCategoryForResponse
          description: The created routing strategy.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - DOMS - Routing Strategy
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />creates a new category for a routing strategys node config
      operationId: postRoutingStrategyNodeConfigCategory
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/RoutingStrategyNodeConfigCategoryForCreation
        description: The desired category
        required: true
      summary: Creates a category for node configurations
      x-badges:
        - color: red
          label: ALPHA
    get:
      parameters:
        - description: all entities
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/RoutingStrategyNodeConfigCategoryTransporter
          description: The current list of available categories
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: No more elements available
      tags:
        - DOMS - Routing Strategy
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getRoutingStrategyNodeConfigCategories
      summary: Returns all node configuration categories
      x-badges:
        - color: red
          label: ALPHA
  /api/routing/nodeconfigcategories/{categoryId}:
    get:
      parameters:
        - description: Id of the category you wish to retrieve
          in: path
          name: categoryId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/RoutingStrategyNodeConfigCategoryForResponse
          description: The returned category.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - DOMS - Routing Strategy
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />returns the category
      operationId: getRoutingStrategyNodeConfigCategory
      summary: Returns a category.
      x-badges:
        - color: red
          label: ALPHA
    delete:
      parameters:
        - description: Id of the category you want to delete
          in: path
          name: categoryId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The category has been deleted.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - DOMS - Routing Strategy
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />deletes the category
      operationId: deleteRoutingStrategyNodeConfigCategory
      summary: deletes a category.
      x-badges:
        - color: red
          label: ALPHA
    put:
      parameters:
        - description: Id of the category you wish to update
          in: path
          name: categoryId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/RoutingStrategyNodeConfigCategoryForResponse
          description: The updated category.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - DOMS - Routing Strategy
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Updates a category
      operationId: putRoutingStrategyNodeConfigCategory
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/RoutingStrategyNodeConfigCategoryForModification
        description: The updated category
        required: true
      summary: Updates a category.
      x-badges:
        - color: red
          label: ALPHA
  /api/routing/strategies/{strategyId}:
    get:
      parameters:
        - description: Id of the routing strategy you wish to retrieve
          in: path
          name: strategyId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingStrategy'
          description: The returned routing strategy.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - DOMS - Routing Strategy
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />returns the routing strategy
      operationId: getRoutingStrategy
      summary: Returns a revision of the routing strategy.
      x-badges:
        - color: red
          label: ALPHA
    put:
      parameters:
        - description: Id of the routing strategy you wish to update
          in: path
          name: strategyId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingStrategy'
          description: The updated routing strategy.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - DOMS - Routing Strategy
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Updates a routing strategy
      operationId: putRoutingStrategy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingStrategyForModification'
        description: The updated routing strategy
        required: true
      summary: Updates a revision of the routing strategy.
      x-badges:
        - color: red
          label: ALPHA
  /api/routing/strategies/{strategyId}/actions:
    post:
      parameters:
        - description: Id of the routing strategy
          in: path
          name: strategyId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingStrategyActionsParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingStrategy'
          description: The updated routing strategy.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - DOMS - Routing Strategy
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />performs an action on a routing strategy
      operationId: actionsRoutingStrategy
      summary: Performs Actions on a routing strategy.
      x-badges:
        - color: red
          label: ALPHA
  /api/routing/strategies/{strategyId}/evaluation:
    post:
      parameters:
        - description: Id of the routing strategy
          in: path
          name: strategyId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderForCreation'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingStrategyEvaluationResult'
          description: The result of the evaluation of the routing strategy.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: The routing strategy does not exist
      tags:
        - DOMS - Routing Strategy
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Evaluates a routing strategy against a given order
      operationId: evaluateRoutingStrategy
      summary: Evaluates a routing strategy.
      x-badges:
        - color: red
          label: ALPHA
  /api/routing/strategies/{strategyId}/nodes/{nodeId}/evaluation:
    post:
      parameters:
        - description: Id of the routing strategy
          in: path
          name: strategyId
          required: true
          schema:
            type: string
        - description: Id of the node
          in: path
          name: nodeId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingStrategyEvaluationResult'
          description: The result of the evaluation of this routing strategy node.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: The routing strategy node does not exist
      tags:
        - DOMS - Routing Strategy
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Evaluates a routing strategy node and return the path
      operationId: evaluateRoutingStrategyNode
      summary: Evaluates a routing strategy node and return the path.
      x-badges:
        - color: red
          label: ALPHA
  /api/promises/checkoutoptions/delivery/earliest:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckoutOptionsDeliveryEarliestResponse'
          description: |-

            The request could be evaluated.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: |-

            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - DOMS - Checkout Options
      description: >-
        The list of items depicts the items you would like to get information
        about their earliest possbile delivery. The provided list of tenant
        article ids are considered individual (as if not in a basket together,
        but seperately ordered). Additionally you can add information about the
        address these items should be delivered to to further refine the
        response. 
      operationId: checkoutoptionDeliveryEarliest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckoutOptionsDeliveryEarliestRequest'
        required: true
      summary: delivery/earliest
  /api/promises/checkoutoptions/delivery/timeperiod:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckoutOptionsDeliveryTimePeriodResponse'
          description: |-

            The request could be evaluated.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - DOMS - Checkout Options
      operationId: checkoutoptionDeliveryTimePeriod
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckoutOptionsDeliveryTimePeriodRequest'
        required: true
      summary: delivery/timeperiod
      description: >-
        The basket attribute depicts the items you would like to get details
        about their possbile delivery. All the provided tenantArticleIds within
        the basket are considered together (as if they are in the same
        basket/order). Additionally you can add information about the address
        these items should be delivered to to further refine the quality of the
        response.
  /api/promises/checkoutoptions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/ResponseForCNCCheckoutOptions'
                  - $ref: '#/components/schemas/ResponseForSFSCheckoutOptions'
          description: ''
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - DOMS - Checkout Options
      description: ''
      operationId: postCheckoutOptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckoutOptionsInput'
        description: The CheckoutOptionsInput
        required: true
      summary: Evaluate a checkout options input against the DOMS
  /api/promises/checkoutoptions/delivery/timepoint:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckoutOptionsDeliveryTimePointResponse'
          description: |-

            The request could be evaluated.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - DOMS - Checkout Options
      operationId: checkoutOptionsTimepoint
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckoutOptionsDeliveryTimePointRequest'
        required: true
      summary: >-
        This endpoint is to be used to get information about the possible
        delivery of items
  /api/orders:
    get:
      parameters:
        - description: all entities after given Id
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
        - description: filter orders by tenantOrderId
          in: query
          name: tenantOrderId
          required: false
          schema:
            type: string
        - description: filter orders by consumerId
          in: query
          name: consumerId
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StrippedOrders'
          description: Orders are found.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - DOMS - Orders
      description: ''
      operationId: getAllOrders
      summary: Return all orders
    post:
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: >-
            The order was successfully created. The Location header contains the
            URL of the order.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - DOMS - Orders
      description: ''
      operationId: addOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderForCreation'
        description: Order object supplied by your shop instance
        required: true
      summary: Add a new order for future fulfillment
  /api/orders/{orderId}:
    get:
      parameters:
        - description: ID of order you want to get
          in: path
          name: orderId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: >-
            Order was found & you were allowed to access it. The result is in
            the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - DOMS - Orders
      description: ''
      operationId: getOrder
      summary: Get a order with the given ID
    patch:
      parameters:
        - description: ID of Order you want to patch
          in: path
          name: orderId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: >-
            Order was found & patch-set has been applied. The patched entity is
            in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found, for more information please look at details.
      tags:
        - DOMS - Orders
      description: ''
      operationId: updateOrder
      summary: Update an order by the given ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderForUpdate'
        description: Request body for updating an order
        required: true
  /api/orders/{orderId}/actions:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderActionsParameter'
      parameters:
        - description: Reference to the order you want to call the action for
          in: path
          name: orderId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: Updated Order in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Order not found or expired
      tags:
        - DOMS - Orders
      operationId: orderAction
      summary: Call a single action on a given order
  /api/orders/{orderId}/orderlineitems/{orderLineItemId}/actions:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderLineItemActionsParameter'
      parameters:
        - description: Reference to the order you want to call the action for
          in: path
          name: orderId
          required: true
          schema:
            type: string
        - description: Reference to the order line item you want to call the action for
          in: path
          name: orderLineItemId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: Updated Order in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - DOMS - Orders
      operationId: orderLineItemAction
      summary: Call a single action on a given order and line item
  /api/routing/commands/reroute:
    post:
      responses:
        '200':
          description: Rerouting was successfully triggered
        '401':
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - DOMS - Routing Plans
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: reRoute
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RerouteRoutingPlan'
        description: >-
          An object, that can contain either lists of identifiers for which a
          reroute should be executed or an option to reroute every reroutable
          plan.
        required: true
      summary: Triggers rerouting of failed routing plans
      x-badges:
        - color: orange
          label: BETA
  /api/routingplansgraph:
    get:
      parameters:
        - description: >-
            Reference to the process you want to get the corresponding routing
            plans graph.
          in: query
          name: processRef
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingPlansGraph'
          description: >-
            Routing plans graph was found & you were allowed to access it. The
            result is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found, please look at details.
      tags:
        - DOMS - Routing Plans
      description: ''
      operationId: getRoutingPlansGraphBaseOnProcessRef
      summary: Get a routing plans graph regarding to processRef
  /api/routingplans:
    get:
      parameters:
        - description: >-
            Reference to the order you want to get the corresponding routing
            plan.
          in: query
          name: orderRef
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingPlans'
          description: >-
            Routing plan was found & you were allowed to access it. The result
            is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found, please look at details.
      tags:
        - DOMS - Routing Plans
      description: ''
      operationId: getRoutingPlanBaseOnOrderRef
      summary: Get a routing plan regarding to orderRef
  /api/routingplans/{routingplanId}:
    get:
      parameters:
        - description: ID of the routing plan want to get
          in: path
          name: routingplanId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingPlan'
          description: >-
            Routing plan was found & you were allowed to access it. The result
            is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Not found, please look at details.
      tags:
        - DOMS - Routing Plans
      description: ''
      operationId: getRoutingPlan
      summary: Get a routing plan with the given ID
    patch:
      parameters:
        - description: ID of routing plan you want to patch
          in: path
          name: routingplanId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingPlan'
          description: >-
            Routing plan was found & patch-set has been applied. The patched
            entity is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found, for more information please look at details.
        '409':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity version conflict
      tags:
        - DOMS - Routing Plans
      description: ''
      operationId: patchRoutingPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingPlanPatchActions'
        description: Patch set
        required: true
      summary: Patches a routing plan with the given ID
  /api/routingplans/{routingplanId}/decisionlogs/{routingRun}:
    get:
      parameters:
        - description: ID of the routing plan you want to get it's decision log
          in: path
          name: routingplanId
          required: true
          schema:
            type: string
        - description: ID of the decision log you want to get
          in: path
          name: routingRun
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DecisionLog'
          description: Decision log was found.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Decision log not found
      tags:
        - DOMS - Routing Plans
      description: ''
      operationId: getDecisionlog
      summary: Get decision log of a routing plan with the given ID
  /api/reroutedescriptions:
    get:
      parameters:
        - description: all entities after given Id
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RerouteDescriptions'
          description: >-
            RerouteDescription were found & you were allowed to access it. The
            result is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: User not found
      tags:
        - DOMS - Routing Plans
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getRerouteDescriptions
      summary: Get a list with all reroute descriptions
      x-badges:
        - color: orange
          label: BETA
    post:
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RerouteDescription'
          description: >-
            The RerouteDescription has been successfully created. The Location
            header includes the URL of the document.
        '303':
          description: >-
            The RerouteDescription already exists. The Location header contains
            the URL of the document.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - DOMS - Routing Plans
      operationId: postRerouteDescription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RerouteDescriptionForCreation'
        description: The RerouteDescription
        required: true
      summary: Post a new RerouteDescription
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      x-badges:
        - color: orange
          label: BETA
  /api/reroutedescriptions/{rerouteDescriptionId}:
    get:
      parameters:
        - description: Id of the reroute description you wish to retrieve
          in: path
          name: rerouteDescriptionId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RerouteDescription'
          description: >-
            RerouteDescription was found & you were allowed to access it. The
            result is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: User not found
      tags:
        - DOMS - Routing Plans
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getRerouteDescriptionById
      summary: Get a reroute description with the given key
      x-badges:
        - color: orange
          label: BETA
    put:
      parameters:
        - description: ID of the reroute description you intend to modify
          in: path
          name: rerouteDescriptionId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RerouteDescriptionForModification'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RerouteDescription'
          description: >-
            RerouteDescription rating was found & you were allowed to access it.
            The result is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: RerouteDescription not found
      tags:
        - DOMS - Routing Plans
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: putRerouteDescription
      summary: Update a reroute description
      x-badges:
        - color: orange
          label: BETA
    delete:
      parameters:
        - description: ID of the reroute description you intend to delete
          in: path
          name: rerouteDescriptionId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >-
            The reroute description was found, and you have been granted
            permission to delete it.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: RerouteDescription not found
      tags:
        - DOMS - Routing Plans
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: deleteRerouteDescription
      summary: Delete a reroute description
      x-badges:
        - color: orange
          label: BETA
  /api/configurations/capacityplanningtimeframe:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapacityPlanningTimeframeConfiguration'
          description: >-
            Configuration was found & you were allowed to access it. The result
            is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Configuration not found
      tags:
        - DOMS - Routing Plans
      description: ''
      operationId: getCapacityPlanningTimeframeConfiguration
      summary: Get a tenant capacity planning timeframe configuration
    put:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapacityPlanningTimeframeConfiguration'
          description: Configuration was written successfully
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Configuration not found
      tags:
        - DOMS - Routing Plans
      description: ''
      operationId: putCapacityPlanningTimeframeConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CapacityPlanningTimeframeConfiguration'
        required: true
      summary: Update capacity planning timeframe configuration of a tenant
  /api/orders/{orderId}/cancel:
    post:
      parameters:
        - description: ID of order you want to cancel
          in: path
          name: orderId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: Order was cancelled sucessfully
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      tags:
        - DOMS - Orders
      operationId: cancelOrder
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                cancelationReasonId:
                  description: ID of the cancelation reason
                  type: string
      summary: Cancel an order with the given ID
      deprecated: true
      description: >-
        This part of the API is deprecated. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Deprecated: Use /actions with "CANCEL" instead.
  /api/promises/deliverypromise:
    post:
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseForDeliveryPromise'
          description: The order promise was created URL of the order promse.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - DOMS - Orders
      description: ''
      operationId: postDeliveryPromise
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderForCreation'
        description: Order object supplied by your shop instance
        required: true
      summary: Add a new order for future fulfillment
  /api/configurations/routing/toolkit/ratings/{toolkitRatingId}:
    get:
      parameters:
        - description: Id of the tag you want to get
          in: path
          name: toolkitRatingId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolkitRating'
          description: >-
            ToolkitRating was found & you were allowed to access it. The result
            is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: User not found
      tags:
        - DOMS - Routing Plans
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getToolkitRatingById
      summary: Get a tag with the given key
      x-badges:
        - color: orange
          label: BETA
    put:
      parameters:
        - description: ID of the toolkit rating you want to update
          in: path
          name: toolkitRatingId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ToolkitRatingForModification'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolkitRating'
          description: >-
            Toolkit rating was found & you were allowed to access it. The result
            is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Toolkit rating not found
      tags:
        - DOMS - Routing Plans
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: putToolkitRating
      summary: Update a toolkit rating
      x-badges:
        - color: orange
          label: BETA
    delete:
      parameters:
        - description: ID of the toolkit rating you want to delete
          in: path
          name: toolkitRatingId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Toolkit rating was found & you were allowed to delete it.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Toolkit rating not found
      tags:
        - DOMS - Routing Plans
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: deleteToolkitRating
      summary: Delete a toolkit rating
      x-badges:
        - color: orange
          label: BETA
  /api/configurations/routing/rerouteshortpick:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RerouteShortPickConfiguration'
          description: >-
            Reroute short pick configuration was found & you were allowed to
            access it. The result is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Reroute configuration not found
      tags:
        - DOMS - Routing Plans
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getRerouteShortPickConfiguration
      summary: Get a tenant reroute short pick config
      x-badges:
        - color: orange
          label: BETA
    put:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RerouteShortPickConfiguration'
          description: Reroute short pick configuration was written successfully
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Reroute short pick configuration not found
      tags:
        - DOMS - Routing Plans
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: putRerouteShortPickConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RerouteShortPickConfiguration'
        required: true
      summary: Update reroute short pick configuration of a tenant
      x-badges:
        - color: orange
          label: BETA
  /api/configurations/routing/reroutetimetriggered:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RerouteTimeTriggeredConfiguration'
          description: >-
            Reroute time triggered configuration was found & you were allowed to
            access it. The result is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Reroute configuration not found
      tags:
        - DOMS - Routing Plans
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getRerouteTimeTriggeredConfiguration
      summary: Get a tenant reroute time triggered config
      x-badges:
        - color: orange
          label: BETA
    put:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RerouteTimeTriggeredConfiguration'
          description: Reroute time triggered configuration was written successfully
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Reroute configuration not found
      tags:
        - DOMS - Routing Plans
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: putRerouteTimeTriggeredConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RerouteTimeTriggeredConfiguration'
        required: true
      summary: Update reroute time triggered configuration of a tenant
      x-badges:
        - color: orange
          label: BETA
  /api/configurations/routing/manualreroute:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManualRerouteConfiguration'
          description: >-
            Manual reroute configuration was found & you were allowed to access
            it. The result is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Manual reroute configuration not found
      tags:
        - DOMS - Routing Plans
      description: >-
        This part of the API is deprecated. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Deprecated, use GlobalManualRerouteConfiguration in
        /api/configurations/routing
      deprecated: true
      operationId: getManualRerouteConfiguration
      summary: Get a tenant manual order reroute config
    put:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManualRerouteConfiguration'
          description: Manual order reroute configuration was written successfully
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Reroute configuration not found
      tags:
        - DOMS - Routing Plans
      description: >-
        This part of the API is deprecated. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Deprecated, use GlobalManualRerouteConfiguration in
        /api/configurations/routing
      deprecated: true
      operationId: putManualRerouteConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManualRerouteConfiguration'
        required: true
      summary: Update manual order reroute configuration of a tenant
  /api/configurations/promises:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromisesConfiguration'
          description: >-
            Promises configuration was found & you were allowed to access it.
            The result is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Promises configuration not found
      tags:
        - DOMS - Orders
      description: ''
      operationId: getPromisesConfiguration
      summary: Get a tenant promises config
    put:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromisesConfiguration'
          description: The promisesConfiguration was successfully put.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - DOMS - Orders
      description: ''
      operationId: putPromisesConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PromisesConfiguration'
        description: Desired promises configuration to put
        required: true
      summary: Change the tenant wide promises configuration
  /api/configurations/routing:
    get:
      parameters:
        - description: Provide  to get an older version of the configuration
          in: query
          name: version
          schema:
            type: number
        - description: >-
            Provide the localized names and descriptions for the routing
            configuration. If not provided the default locale is used., for
            example de_DE.
          in: query
          name: locale
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingConfiguration'
          description: >-
            Routing configuration was found & you were allowed to access it. The
            result is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Routing configuration not found
      tags:
        - DOMS - Routing Plans
      description: ''
      operationId: getRoutingConfiguration
      summary: Get a tenant routing config
    patch:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingConfiguration'
          description: Routing configuration was found & patch-set has been applied.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found, for more information please look at details.
        '409':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity version conflict
      tags:
        - DOMS - Routing Plans
      description: >-
        Important: You can only change the name and the description for fences,
        ratings and prioritizations of type CUSTOM. For Fences and Ratings
        provided by fulfillmenttools you can not change the fields 'name' and
        'description'.
      operationId: patchRoutingConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingConfigurationsPatchActions'
        description: Patch set
        required: true
      summary: Patches routing configuration
    put:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingConfiguration'
          description: Routing configuration was written successfully
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Routing configuration not found
      tags:
        - DOMS - Routing Plans
      description: >-
        Important: You can only change the name and the description for fences,
        ratings and prioritizations of type CUSTOM. For Fences and Ratings
        provided by fulfillmenttools you can not change the fields 'name' and
        'description'. <br> Also you can not delete an existing fulfillmenttools
        Fence or Rating by calling this endpoint.
      operationId: putRoutingConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingConfiguration'
        required: true
      summary: Update routing configuration of a tenant
  /api/configurations/orderrouting:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderRoutingConfiguration'
          description: The Order Routing Configuration can be found in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - DOMS - Routing Plans
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getOrderRoutingConfiguration
      summary: Get the tenant wide order routing configuration
      x-badges:
        - color: orange
          label: BETA
    put:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderRoutingConfiguration'
          description: The order routing configuration was successfully updated.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderRoutingConfiguration'
          description: The order routing configuration was successfully created.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - DOMS - Routing Plans
      description: ''
      operationId: putOrderRoutingConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderRoutingConfiguration'
        description: Desired order routing configuration to create/update
        required: true
      summary: Change the tenant wide order routing configuration
  /api/configurations/ordercancelation:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderCancelationConfiguration'
          description: The Order Cancelation Configuration can be found in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - DOMS - Routing Plans
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getOrderCancelationConfiguration
      summary: Get the tenant wide order cancelation configuration
      x-badges:
        - color: orange
          label: BETA
    put:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderCancelationConfiguration'
          description: The order cancelation configuration was successfully updated.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderCancelationConfiguration'
          description: The order cancelation configuration was successfully created.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      tags:
        - DOMS - Routing Plans
      description: ''
      operationId: putOrderCancelationConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderCancelationConfiguration'
        description: Desired order cancelation configuration to create/update
        required: true
      summary: Change the tenant wide order cancelation configuration
  /api/articles:
    get:
      deprecated: true
      description: >-
        This part of the API is deprecated. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getArticles
      parameters:
        - in: query
          name: size
          required: false
          schema:
            default: 25
            maximum: 100
            minimum: 1
            type: number
        - in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - in: query
          name: facilityRef
          required: false
          schema:
            type: string
        - in: query
          name: searchTerm
          required: false
          schema:
            minLength: 1
            type: string
        - in: query
          name: locale
          required: false
          schema:
            $ref: '#/components/schemas/SupportedLocale'
        - in: query
          name: tenantArticleId
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryArticlePaginatedResult'
          description: >-
            Articles search result according to the request. The result is in
            the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Search articles tenant-wide based on title or tenantArticleId
      tags:
        - Inventory Management - Stocks
  /api/articles/{tenantArticleId}/forecasts:
    get:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getForecastsForArticle
      parameters:
        - in: path
          name: tenantArticleId
          required: true
          schema:
            type: string
        - in: query
          name: period
          required: false
          schema:
            enum:
              - DAILY
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ArticleStockForecast'
                type: array
          description: >-
            Forecast for the specified tenantArticleId. The result is in the
            body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Get the forecast for a specific tenantArticleId
      tags:
        - Inventory Management - Stocks
      x-badges:
        - color: red
          label: ALPHA
  /api/articles/{tenantArticleId}/stockdistribution:
    get:
      deprecated: false
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getStockDistribution
      parameters:
        - in: path
          name: tenantArticleId
          required: true
          schema:
            minLength: 1
            type: string
        - explode: false
          in: query
          name: facilityServiceTypes
          required: false
          schema:
            items:
              enum:
                - SHIP_FROM_STORE
                - PICKUP
              type: string
            type: array
        - explode: false
          in: query
          name: facilityStatus
          required: false
          schema:
            items:
              enum:
                - ONLINE
                - SUSPENDED
                - OFFLINE
              type: string
            type: array
        - in: query
          name: facilityName
          required: false
          schema:
            minLength: 1
            type: string
        - explode: true
          in: query
          name: facilityIds
          required: false
          schema:
            items:
              type: string
            type: array
        - description: >-
            The channels to included under "channelAdjusted" in each summary and
            facility stock. Provide up to 50 channelRefs, specify "UNALLOCATED
            for unallocated stock."
          explode: true
          in: query
          name: channelRefs
          required: false
          schema:
            items:
              type: string
            maxItems: 50
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockDistribution'
          description: >-
            Stock distribution was loaded & you were allowed to access it. The
            result is in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: >-
        Stock per Facility for a specific tenantArticleId, also includes the
        Tenant-Wide Summary
      tags:
        - Inventory Management - Stocks
      x-badges:
        - color: orange
          label: BETA
  /api/categories/{categoryId}:
    get:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getCategory
      parameters:
        - in: path
          name: categoryId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Get category
      tags:
        - Inventory Management - Categories
      x-badges:
        - color: red
          label: ALPHA
  /api/configurations/inventory:
    get:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getInventoryConfigurations
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryConfiguration'
          description: Requested Inventory Configuration
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Get Inventory Configuration
      tags:
        - Inventory Management - Stocks
      x-badges:
        - color: red
          label: ALPHA
    patch:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: upsertInventoryConfigurations
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryConfigurationForPatch'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryConfiguration'
          description: Requested Inventory Configuration
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Update Inventory Configuration
      tags:
        - Inventory Management - Stocks
      x-badges:
        - color: red
          label: ALPHA
  /api/externalstockchangereasons:
    get:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />Get
        external stock change reasons
      operationId: getExternalStockChangeReasons
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalStockChangeReason'
          description: List of external stock change reasons
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      tags:
        - Inventory Management - Stocks
      x-badges:
        - color: red
          label: ALPHA
    post:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />post external stock change reason
      operationId: postExternalStockChangeReason
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalStockChangeReasonForCreation'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalStockChangeReason'
          description: The created external stock change reason
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      tags:
        - Inventory Management - Stocks
      x-badges:
        - color: red
          label: ALPHA
  /api/externalstockchangereasons/{externalStockChangeReasonId}:
    get:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />Get
        external stock change reason
      operationId: getExternalStockChangeReason
      parameters:
        - in: path
          name: externalStockChangeReasonId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalStockChangeReason'
          description: The external stock change reason
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      tags:
        - Inventory Management - Stocks
      x-badges:
        - color: red
          label: ALPHA
    put:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />put
        external stock change reason
      operationId: putExternalStockChangeReason
      parameters:
        - in: path
          name: externalStockChangeReasonId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalStockChangeReasonForUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalStockChangeReason'
          description: The updated external stock change reason
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      tags:
        - Inventory Management - Stocks
      x-badges:
        - color: red
          label: ALPHA
  /api/facilities/search:
    post:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Search for Facility
      operationId: searchFacility
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacilitySearchPayload'
        required: true
      responses:
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: ''
      tags:
        - Core - Facilities
      x-badges:
        - color: red
          label: ALPHA
  /api/facilities/{facilityId}/configurations/inventory:
    get:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getInventoryFacilityConfigurations
      parameters:
        - in: path
          name: facilityId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryFacilityConfiguration'
          description: Requested Inventory Facility Configuration
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Get Inventory Configuration for a Facility
      tags:
        - Inventory Management - Stocks
      x-badges:
        - color: red
          label: ALPHA
    patch:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: upsertInventoryFacilityConfigurations
      parameters:
        - in: path
          name: facilityId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryFacilityConfigurationForPatch'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryFacilityConfiguration'
          description: Requested Inventory Facility Configuration
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Update Inventory Configuration for a Facility
      tags:
        - Inventory Management - Stocks
      x-badges:
        - color: red
          label: ALPHA
  /api/facilities/{facilityId}/stocks:
    get:
      deprecated: true
      description: >-
        This part of the API is deprecated. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />Use
        <a
        href="https://docs.fulfillmenttools.com/api-docs/use-cases/inventory-management/entities#stock">Inventory
        Stock</a> instead
      operationId: getFacilityStocks
      parameters:
        - in: query
          name: size
          required: false
          schema:
            default: 25
            maximum: 100
            minimum: 1
            type: number
        - in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - in: path
          name: facilityId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FacilityStock'
                type: array
          description: Stock was loaded and you were allowed to access it.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Get stock related to a facilityRef
      tags:
        - Inventory Management - Stocks
    put:
      deprecated: true
      description: >-
        This part of the API is deprecated. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />Use
        <a
        href="https://docs.fulfillmenttools.com/api-docs/use-cases/inventory-management/entities#stock">Inventory
        Stock</a> instead
      operationId: bulkUpdateFacilityStock
      parameters:
        - in: path
          name: facilityId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacilityStockBulkOperations'
        required: true
      responses:
        '207':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FacilityStockBulkResult'
                type: array
          description: Update Result of each targeted tenantArticleId
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Update Stock in bulk facilityRef and tenantArticleId
      tags:
        - Inventory Management - Stocks
  /api/handoverjobs/search:
    post:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Search for HandoverJob
      operationId: searchHandoverJob
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HandoverJobSearchPayload'
        required: true
      responses:
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: ''
      tags:
        - Fulfillment Operations - Handover
      x-badges:
        - color: red
          label: ALPHA
  /api/inboundprocesses:
    get:
      deprecated: false
      description: ''
      operationId: getInboundProcesses
      parameters:
        - in: query
          name: size
          required: false
          schema:
            default: 25
            maximum: 100
            minimum: 1
            type: number
        - in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - in: query
          name: sort
          required: false
          schema:
            enum:
              - ORIGIN_NAME_ASC
              - REQUESTED_DATE_ASC
              - LAST_MODIFIED_ASC
              - ORIGIN_NAME_DESC
              - REQUESTED_DATE_DESC
              - LAST_MODIFIED_DESC
            type: string
        - in: query
          name: facilityRef
          required: false
          schema:
            items:
              type: string
            type: array
        - in: query
          name: scannableCode
          required: false
          schema:
            type: string
        - explode: false
          in: query
          name: status
          required: false
          schema:
            items:
              enum:
                - OPEN
                - PARTIAL_DELIVERY
                - ON_HOLD
                - CLOSED
              type: string
            type: array
        - description: >
            Matches partial values; The queries terms and therefore the result
            set of the query can change in the future:

            - tenantInboundProcessId

            - scannableCodes

            - receipts.receivedItems.tenantArticleId

            - purchaseOrder.requestedItems.tenantArticleId

            - purchaseOrder.supplier.name

            - values of related listings
              - listing.title
              - listing.scannableCodes
          in: query
          name: searchTerm
          required: false
          schema:
            type: string
        - description: >
            Only matches complete values; The queries terms and therefore the
            result set of the query can change in the future:

            - tenantInboundProcessId

            - scannableCodes

            - receipts.receivedItems.tenantArticleId

            - purchaseOrder.requestedItems.tenantArticleId

            - purchaseOrder.supplier.name

            - values of related listings
              - listing.title
              - listing.scannableCodes
          in: query
          name: searchTermExact
          required: false
          schema:
            type: string
        - in: query
          name: purchaseOrder_cancelled
          required: false
          schema:
            type: boolean
        - explode: false
          in: query
          name: receipt_status
          required: false
          schema:
            items:
              enum:
                - OPEN
                - IN_PROGRESS
                - FINISHED
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundProcessPaginatedResult'
          description: Paginated result containing the matching Inbound Process entities
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Get multiple Inbound Processes
      tags:
        - Inventory Management - Inbound
    post:
      deprecated: false
      description: ''
      operationId: createInboundProcess
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InboundProcessForCreation'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundProcess'
          description: Created Inbound Process entity
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Create a new Inbound Process
      tags:
        - Inventory Management - Inbound
  /api/inboundprocesses/attachments:
    post:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: createAttachment
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InboundAttachmentForCreation'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundAttachment'
          description: Created attachment
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Creates an attachment
      tags:
        - Inventory Management - Inbound
      x-badges:
        - color: red
          label: ALPHA
  /api/inboundprocesses/attachments/{attachmentId}/signedurl:
    get:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getSignedAttachmentUrl
      parameters:
        - in: path
          name: attachmentId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Signed url
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Retrieves a signed url for an attachment
      tags:
        - Inventory Management - Inbound
      x-badges:
        - color: red
          label: ALPHA
  /api/inboundprocesses/search:
    post:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Search for InboundProcess
      operationId: searchInboundProcess
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InboundProcessSearchPayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundProcessPaginatedResult'
          description: Your search result
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: ''
      tags:
        - Inventory Management - Inbound
      x-badges:
        - color: red
          label: ALPHA
  /api/inboundprocesses/{inboundProcessId}:
    delete:
      deprecated: false
      description: ''
      operationId: deleteInboundProcess
      parameters:
        - in: path
          name: inboundProcessId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Inbound Process successfully deleted
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Delete an Inbound Process by ID
      tags:
        - Inventory Management - Inbound
    get:
      deprecated: false
      description: ''
      operationId: getInboundProcess
      parameters:
        - in: path
          name: inboundProcessId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundProcess'
          description: Requested Inbound Process entity
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Get an Inbound Process by ID
      tags:
        - Inventory Management - Inbound
    patch:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: Patch InboundProcess
      parameters:
        - in: path
          name: inboundProcessId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InboundProcessForPatch'
        required: true
      responses:
        '200':
          description: Inbound Process successfully patched
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Patch an Inbound Process by ID
      tags:
        - Inventory Management - Inbound
      x-badges:
        - color: red
          label: ALPHA
  /api/inboundprocesses/{inboundProcessId}/purchaseorder:
    put:
      deprecated: false
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: upsertInboundProcessPurchaseOrder
      parameters:
        - in: path
          name: inboundProcessId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InboundProcessPurchaseOrderForUpsert'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundProcessPurchaseOrder'
          description: Purchase order successfully updated on inbound process
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundProcessPurchaseOrder'
          description: Purchase order successfully created on inbound process
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: >-
        Creates or updates the specific purchase order of an existing inbound
        process.
      tags:
        - Inventory Management - Inbound
      x-badges:
        - color: orange
          label: BETA
  /api/inboundprocesses/{inboundProcessId}/receipts:
    post:
      deprecated: false
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: addReceiptToInboundProcess
      parameters:
        - in: path
          name: inboundProcessId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InboundReceiptForCreation'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundReceipt'
          description: Receipt was added to the inbound process
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Adds a receipt to an inbound process.
      tags:
        - Inventory Management - Inbound
      x-badges:
        - color: orange
          label: BETA
  /api/inboundreceiptjobs:
    get:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getInboundReceiptJobs
      parameters:
        - in: query
          name: size
          required: false
          schema:
            default: 25
            maximum: 100
            minimum: 1
            type: number
        - in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - in: query
          name: facilityRef
          required: false
          schema:
            items:
              type: string
            type: array
        - explode: false
          in: query
          name: status
          required: false
          schema:
            items:
              enum:
                - OPEN
                - PARTIAL_DELIVERY
                - ON_HOLD
                - CLOSED
              type: string
            type: array
        - in: query
          name: searchTerm
          required: false
          schema:
            minLength: 1
            type: string
        - in: query
          name: searchTermExact
          required: false
          schema:
            minLength: 1
            type: string
        - in: query
          name: fromDate
          required: false
          schema:
            format: date-time
            type: string
        - in: query
          name: toDate
          required: false
          schema:
            format: date-time
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundReceiptJobPaginatedResult'
          description: Paginated Inbound Receipt Jobs
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Get InboundReceiptJobs
      tags:
        - Inventory Management - Inbound
      x-badges:
        - color: red
          label: ALPHA
  /api/inboundreceiptjobs/{inboundEntryId}:
    get:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getInboundReceiptJob
      parameters:
        - in: path
          name: inboundEntryId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundReceiptJob'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Get an Inbound Receipt Job by ID
      tags:
        - Inventory Management - Inbound
      x-badges:
        - color: red
          label: ALPHA
  /api/inventory/stocks/summaries:
    get:
      deprecated: true
      description: >-
        This part of the API is deprecated. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getStockSummariesDeprecated
      parameters:
        - in: query
          name: size
          required: false
          schema:
            default: 25
            maximum: 100
            minimum: 1
            type: number
        - in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - explode: false
          in: query
          name: facilityServiceTypes
          required: false
          schema:
            items:
              enum:
                - SHIP_FROM_STORE
                - PICKUP
              type: string
            type: array
        - explode: false
          in: query
          name: facilityStatus
          required: false
          schema:
            items:
              enum:
                - ONLINE
                - SUSPENDED
                - OFFLINE
              type: string
            type: array
        - explode: true
          in: query
          name: facilityRefs
          required: false
          schema:
            items:
              type: string
            type: array
        - in: query
          name: allowStale
          required: false
          schema:
            type: boolean
        - explode: true
          in: query
          name: tenantArticleIds
          required: false
          schema:
            items:
              type: string
            type: array
        - description: >-
            The channels to included under "channelAdjusted" in the stock
            summary. Provide up to 50 channelRefs, specify "UNALLOCATED for
            unallocated stock."
          explode: true
          in: query
          name: channelRefs
          required: false
          schema:
            items:
              type: string
            maxItems: 50
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockSummaries'
          description: >-
            Stock summaries was loaded & you were allowed to access it. The
            result is in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: This endpoint is deprecated. Please use /api/stocks/summaries instead.
      tags:
        - Inventory Management - Stocks
  /api/linkedservicejobs/search:
    post:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Search for LinkedServiceJobs
      operationId: searchLinkedServiceJobs
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkedServiceJobsSearchPayload'
        required: true
      responses:
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: ''
      tags:
        - LinkedServiceJobs
      x-badges:
        - color: red
          label: ALPHA
  /api/listings/search:
    post:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Search for Listing
      operationId: searchListing
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListingSearchPayload'
        required: true
      responses:
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: ''
      tags:
        - Core - Listings
      x-badges:
        - color: red
          label: ALPHA
  /api/orders/search:
    post:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Search for Order
      operationId: searchOrder
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderSearchPayload'
        required: true
      responses:
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: ''
      tags:
        - DOMS - Orders
      x-badges:
        - color: red
          label: ALPHA
  /api/packjobs/search:
    post:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Search for PackJob
      operationId: searchPackJob
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackJobSearchPayload'
        required: true
      responses:
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: ''
      tags:
        - PackJob
      x-badges:
        - color: red
          label: ALPHA
  /api/parcels/search:
    post:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Search for Parcel
      operationId: searchParcel
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParcelSearchPayload'
        required: true
      responses:
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: ''
      tags:
        - IFulfillment Operations - Shipments
      x-badges:
        - color: red
          label: ALPHA
  /api/pickjobs/search:
    post:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Search for PickJob
      operationId: searchPickJob
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PickJobSearchPayload'
        required: true
      responses:
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: ''
      tags:
        - PickJob
      x-badges:
        - color: red
          label: ALPHA
  /api/processes/search:
    post:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Search for Process
      operationId: searchProcess
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessSearchPayload'
        required: true
      responses:
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: ''
      tags:
        - Core - Processes
      x-badges:
        - color: red
          label: ALPHA
  /api/purchaseorders:
    post:
      deprecated: false
      description: ''
      operationId: createPurchaseOrder
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrderForCreation'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrder'
          description: Created Purchase Order entity
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Create a new Purchase Order
      tags:
        - Inventory Management - Inbound
  /api/purchaseorders/{purchaseOrderId}:
    get:
      deprecated: false
      description: ''
      operationId: getPurchaseOrder
      parameters:
        - in: path
          name: purchaseOrderId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrder'
          description: Purchase Order entity
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Get a Purchase Order by ID
      tags:
        - Inventory Management - Inbound
    patch:
      deprecated: false
      description: ''
      operationId: patchPurchaseOrder
      parameters:
        - in: path
          name: purchaseOrderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrderForPartialUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrder'
          description: Updated Purchase Order entity
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Partially updates a Purchase Order using a selection of fields
      tags:
        - Inventory Management - Inbound
    put:
      deprecated: false
      description: ''
      operationId: upsertPurchaseOrder
      parameters:
        - in: path
          name: purchaseOrderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrderForUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrder'
          description: Updated/created Purchase Order entity
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Update or create a Purchase Order
      tags:
        - Inventory Management - Inbound
  /api/receipts:
    post:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: createReceipt
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReceiptForCreation'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Receipt'
          description: Created inbound receipt
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Creates a receipt
      tags:
        - Inventory Management - Inbound
      x-badges:
        - color: red
          label: ALPHA
  /api/receipts/{receiptId}:
    delete:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: deleteReceipt
      parameters:
        - in: path
          name: receiptId
          required: true
          schema:
            type: string
        - in: query
          name: version
          required: true
          schema:
            type: number
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Receipt'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Delete receipt by id
      tags:
        - Inventory Management - Inbound
      x-badges:
        - color: red
          label: ALPHA
    get:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getReceipt
      parameters:
        - in: path
          name: receiptId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Receipt'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Get receipt by id
      tags:
        - Inventory Management - Inbound
      x-badges:
        - color: red
          label: ALPHA
    patch:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: patchReceipt
      parameters:
        - in: path
          name: receiptId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InboundReceiptForPatch'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Receipt'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Patch receipt by id
      tags:
        - Inventory Management - Inbound
      x-badges:
        - color: red
          label: ALPHA
    put:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: putReceipt
      parameters:
        - in: path
          name: receiptId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InboundReceiptForUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Receipt'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Put receipt to id
      tags:
        - Inventory Management - Inbound
      x-badges:
        - color: red
          label: ALPHA
  /api/routingplans/search:
    post:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Search for RoutingPlan
      operationId: searchRoutingPlan
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingPlanSearchPayload'
        required: true
      responses:
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: ''
      tags:
        - DOMS - Routing Plans
      x-badges:
        - color: red
          label: ALPHA
  /api/safetystocks:
    get:
      deprecated: false
      description: ''
      operationId: getSafetyStocks
      parameters:
        - in: query
          name: size
          required: false
          schema:
            default: 25
            maximum: 100
            minimum: 1
            type: number
        - in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - in: query
          name: tenantArticleId
          required: false
          schema:
            type: string
        - in: query
          name: facilityRef
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SafetyStocksPaginatedResult'
          description: Available Safety Stocks
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Get all Safety Stocks
      tags:
        - Inventory Management - Stocks
    put:
      deprecated: false
      description: ''
      operationId: bulkUpdateSafetyStock
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SafetyStockBulkOperations'
        required: true
      responses:
        '207':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SafetyStockBulkOperationResult'
          description: Result of the bulk operations
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Update Safety Stocks in bulk
      tags:
        - Inventory Management - Stocks
  /api/safetystocks/{safetyStockId}:
    delete:
      deprecated: false
      description: ''
      operationId: deleteSafetyStock
      parameters:
        - in: path
          name: safetyStockId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Result of the bulk operations
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Delete a single Safety Stock
      tags:
        - Inventory Management - Stocks
  /api/shipments/search:
    post:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Search for Shipment
      operationId: searchShipment
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShipmentSearchPayload'
        required: true
      responses:
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: ''
      tags:
        - Shipment
      x-badges:
        - color: red
          label: ALPHA
  /api/stocks:
    get:
      deprecated: false
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getStocks
      parameters:
        - in: query
          name: facilityRef
          required: false
          schema:
            type: string
        - in: query
          name: tenantArticleId
          required: false
          schema:
            items:
              type: string
            maxItems: 500
            type: array
        - in: query
          name: locationRef
          required: false
          schema:
            items:
              type: string
            maxItems: 500
            type: array
        - in: query
          name: size
          required: false
          schema:
            default: 25
            maximum: 100
            minimum: 1
            type: number
        - in: query
          name: startAfterId
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockPaginatedResult'
          description: Stocks
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Get stocks
      tags:
        - Inventory Management - Stocks
      x-badges:
        - color: orange
          label: BETA
    post:
      deprecated: false
      description: ''
      operationId: createStock
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StockForCreation'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stock'
          description: Stock was created.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Create stock
      tags:
        - Inventory Management - Stocks
    put:
      deprecated: false
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: upsertStocks
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StocksForUpsert'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/StockUpsertOperationResult'
                type: array
          description: Stock upsert result
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Update and create many stocks at once
      tags:
        - Inventory Management - Stocks
      x-badges:
        - color: orange
          label: BETA
  /api/stocks/actions:
    post:
      deprecated: false
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: performStocksActions
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StockAction'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockActionResult'
          description: Stock action result
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Perform stocks actions
      tags:
        - Inventory Management - Stocks
      x-badges:
        - color: orange
          label: BETA
  /api/stocks/search:
    post:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Search for Stock
      operationId: searchStock
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StockSearchPayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockPaginatedResult'
          description: Your search result
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: ''
      tags:
        - Inventory Management - Stocks
      x-badges:
        - color: red
          label: ALPHA
  /api/stocks/summaries:
    get:
      deprecated: false
      description: ''
      operationId: getStockSummaries
      parameters:
        - in: query
          name: size
          required: false
          schema:
            default: 25
            maximum: 100
            minimum: 1
            type: number
        - in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - explode: false
          in: query
          name: facilityServiceTypes
          required: false
          schema:
            items:
              enum:
                - SHIP_FROM_STORE
                - PICKUP
              type: string
            type: array
        - explode: false
          in: query
          name: facilityStatus
          required: false
          schema:
            items:
              enum:
                - ONLINE
                - SUSPENDED
                - OFFLINE
              type: string
            type: array
        - explode: true
          in: query
          name: facilityRefs
          required: false
          schema:
            items:
              type: string
            type: array
        - in: query
          name: allowStale
          required: false
          schema:
            type: boolean
        - explode: true
          in: query
          name: tenantArticleIds
          required: false
          schema:
            items:
              type: string
            type: array
        - description: >-
            The channels to included under "channelAdjusted" in the stock
            summary. Provide up to 50 channelRefs, specify "UNALLOCATED for
            unallocated stock."
          explode: true
          in: query
          name: channelRefs
          required: false
          schema:
            items:
              type: string
            maxItems: 50
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockSummaries'
          description: >-
            Stock summaries was loaded & you were allowed to access it. The
            result is in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Get the accumulated Stock for each Article
      tags:
        - Inventory Management - Stocks
  /api/stocks/{stockId}:
    delete:
      deprecated: false
      description: ''
      operationId: deleteStock
      parameters:
        - in: path
          name: stockId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Stock was deleted.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Delete stock
      tags:
        - Inventory Management - Stocks
    get:
      deprecated: false
      description: ''
      operationId: getStock
      parameters:
        - in: path
          name: stockId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stock'
          description: Stock
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Get stock
      tags:
        - Inventory Management - Stocks
    put:
      deprecated: false
      description: ''
      operationId: updateStock
      parameters:
        - in: path
          name: stockId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/StockForUpdate'
                - not:
                    required:
                      - version
                  properties:
                    locationRef:
                      nullable: true
                      type: string
                    value:
                      format: int32
                      minimum: 0
                      type: integer
                  required:
                    - value
                  type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stock'
          description: Stock
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Update stock
      tags:
        - Inventory Management - Stocks
  /api/stocks/{stockId}/locationrecommendations:
    get:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getStorageLocationRecommendations
      parameters:
        - in: path
          name: stockId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/StorageLocationRecommendation'
                type: array
          description: >-
            List of Storage Locations sorted by the stock sum ascending. The
            result is in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Get the Storage Location recommendations for a specific Stock
      tags:
        - Inventory Management - Stocks
      x-badges:
        - color: red
          label: ALPHA
  /api/storagelocations/search:
    post:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Search for StorageLocation
      operationId: searchStorageLocation
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageLocationSearchPayload'
        required: true
      responses:
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: ''
      tags:
        - Inventory Management – Storage Locations
      x-badges:
        - color: red
          label: ALPHA
  /api/stowjobs:
    get:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getStowJobs
      parameters:
        - in: query
          name: size
          required: false
          schema:
            default: 25
            maximum: 100
            minimum: 1
            type: number
        - in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - in: query
          name: sort
          required: false
          schema:
            enum:
              - LAST_MODIFIED_ASC
              - LAST_MODIFIED_DESC
            type: string
        - in: query
          name: facilityRef
          required: false
          schema:
            items:
              type: string
            type: array
        - in: query
          name: tenantArticleId
          required: false
          schema:
            items:
              type: string
            type: array
        - in: query
          name: locationRef
          required: false
          schema:
            items:
              type: string
            type: array
        - explode: false
          in: query
          name: status
          required: false
          schema:
            items:
              enum:
                - OPEN
                - IN_PROGRESS
                - CLOSED
                - CANCELED
                - PAUSED
              type: string
            type: array
        - in: query
          name: stockRef
          required: false
          schema:
            items:
              type: string
            type: array
        - in: query
          name: shortId
          required: false
          schema:
            items:
              type: string
            type: array
        - in: query
          name: priority
          required: false
          schema:
            items:
              type: number
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StowJobPaginatedResult'
          description: Paginated result containing the matching Stow Job entities
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Get multiple Stow Jobs
      tags:
        - Inventory Management - Stowing
      x-badges:
        - color: red
          label: ALPHA
    post:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: createStowJob
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StowJobForCreation'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StowJob'
          description: Created Stow Job entity
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            The syntax of the request content was correct, but it was unable to
            process the contained instructions, possibly due to semantic errors.
      summary: Create a new Stow Job
      tags:
        - Inventory Management - Stowing
      x-badges:
        - color: red
          label: ALPHA
  /api/stowjobs/search:
    post:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Search for StowJob
      operationId: searchStowJob
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StowJobSearchPayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StowJobPaginatedResult'
          description: Your search result
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: ''
      tags:
        - Inventory Management - Stowing
      x-badges:
        - color: red
          label: ALPHA
  /api/stowjobs/{stowJobId}:
    get:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getStowJob
      parameters:
        - in: path
          name: stowJobId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StowJob'
          description: Requested Stow Job entity
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Get a Stow Job by ID
      tags:
        - Inventory Management - Stowing
      x-badges:
        - color: red
          label: ALPHA
    patch:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: Patch StowJob
      parameters:
        - in: path
          name: stowJobId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StowJobForPatch'
        required: true
      responses:
        '200':
          description: Stow Job successfully patched
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: A version conflict occurred.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            The syntax of the request content was correct, but it was unable to
            process the contained instructions, possibly due to semantic errors.
      summary: Patch a Stow Job by ID
      tags:
        - Inventory Management - Stowing
      x-badges:
        - color: red
          label: ALPHA
  /api/stowjobs/{stowJobId}/actions:
    post:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: Post StowJob Actions
      parameters:
        - in: path
          name: stowJobId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/StartStowJobAction'
                - $ref: '#/components/schemas/PauseStowJobAction'
                - $ref: '#/components/schemas/CancelStowJobAction'
                - $ref: '#/components/schemas/ReopenStowJobAction'
                - $ref: '#/components/schemas/CloseStowJobAction'
                - $ref: '#/components/schemas/ModifyStowLineItemsAction'
                - $ref: '#/components/schemas/StowJobReplaceAssignedUsersAction'
        required: true
      responses:
        '200':
          description: Actions successfully performed
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: A version conflict occurred.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            The syntax of the request content was correct, but it was unable to
            process the contained instructions, possibly due to semantic errors.
      summary: Perform actions on a Stow Job
      tags:
        - Inventory Management - Stowing
      x-badges:
        - color: red
          label: ALPHA
  /api/users:
    get:
      deprecated: false
      description: ''
      operationId: getAllUsers
      parameters:
        - in: query
          name: size
          required: false
          schema:
            default: 25
            maximum: 100
            minimum: 1
            type: number
        - in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: Order the users by this field
          in: query
          name: orderBy
          required: false
          schema:
            type: string
        - description: Filter the users by this facility
          in: query
          name: facilityId
          required: false
          schema:
            type: string
        - description: >-
            Include all admins in the result (only applicable if facilityId is
            set)
          in: query
          name: includeAdminUsers
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: The users were successfully returned.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Returns all users.
      tags:
        - Core - User Management
    post:
      deprecated: false
      description: ''
      operationId: createUser
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserForCreation'
        required: true
      responses:
        '201':
          description: The users was successfully created.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Creates a user.
      tags:
        - Core - User Management
  /api/users/search:
    post:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Search for User
      operationId: searchUser
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSearchPayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPaginatedResult'
          description: Your search result
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: ''
      tags:
        - Core - User Management
      x-badges:
        - color: red
          label: ALPHA
  /api/users/sign/transloadit/{templateId}:
    get:
      deprecated: true
      description: >-
        This part of the API is deprecated. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getTransloadit
      parameters:
        - in: path
          name: templateId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Get transloadit of user.
      tags:
        - Core - User Management
  /api/users/{userId}:
    delete:
      deprecated: false
      description: ''
      operationId: deleteUser
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The deleted user.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Deletes a user.
      tags:
        - Core - User Management
    get:
      deprecated: false
      description: ''
      operationId: getUser
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The user.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Returns a user by ID.
      tags:
        - Core - User Management
    patch:
      deprecated: false
      description: ''
      operationId: changeUser
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPatchActions'
        required: true
      responses:
        '200':
          description: The modified user.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Modifies a user.
      tags:
        - Core - User Management
  /api/users/{userId}/assignedFacilities:
    post:
      deprecated: false
      description: ''
      operationId: assignFacility
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAssignedFacilityForCreation'
        required: true
      responses:
        '200':
          description: The facilities were successfully assigned to the user.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Assign a facility to a user.
      tags:
        - Core - User Management
  /api/users/{userId}/assignedFacilities/{assignedFacilityId}:
    delete:
      deprecated: false
      description: ''
      operationId: deleteAssignedFacility
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: assignedFacilityId
          required: true
          schema:
            type: string
      responses:
        '201':
          description: The facility was successfully removed from the user.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Removes a facility from a user.
      tags:
        - Core - User Management
  /api/users/{userId}/permissions:
    get:
      deprecated: false
      description: ''
      operationId: getUserRoles
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The roles of the user.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Returns the roles of a user.
      tags:
        - Core - User Management
  /api/zones/search:
    post:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Search for Zone
      operationId: searchZone
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZoneSearchPayload'
        required: true
      responses:
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: ''
      tags:
        - Inventory Management - Storage Locations
      x-badges:
        - color: red
          label: ALPHA
  /api/configurations/notifications:
    get:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getNotificationCenterConfig
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationCenterConfig'
          description: The notification center configuration was successfully returned.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Returns the notification center configuration.
      tags:
        - Core - Notification Center
      x-badges:
        - color: red
          label: ALPHA
    put:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: upsertNotificationCenterConfig
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/NotificationCenterConfigForUpdate'
                - allOf:
                    - $ref: '#/components/schemas/NotificationCenterConfigForCreation'
                  not:
                    required:
                      - version
                  type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationCenterConfig'
          description: Notification center configuration was successfully updated.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationCenterConfig'
          description: Notification center configuration was successfully created.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: A version conflict occurred.
      summary: Creates or updates an existing notification center configuration.
      tags:
        - Core - Notification Center
      x-badges:
        - color: red
          label: ALPHA
  /api/configurations/notifications/actions:
    post:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: executeNotificationCenterConfigAction
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/AddChannelAction'
                - $ref: '#/components/schemas/UpdateChannelByIdAction'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationCenterConfig'
          description: Notification center configuration action was successfully executed.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: A version conflict occurred.
      summary: Executes an action to manipulate the notification center configuration.
      tags:
        - Core - Notification Center
      x-badges:
        - color: red
          label: ALPHA
  /api/configurations/notifications/channels/{channelId}:
    delete:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: deleteNotificationCenterConfigChannel
      parameters:
        - in: path
          name: channelId
          required: true
          schema:
            type: string
        - in: query
          name: version
          required: true
          schema:
            type: number
      responses:
        '200':
          description: Notification center config channel was successfully deleted.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: A version conflict occurred.
      summary: Deletes a notification center config channel.
      tags:
        - Core - Notification Center
      x-badges:
        - color: red
          label: ALPHA
  /api/facilities/{facilityRef}/configurations/notifications:
    get:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getNotificationCenterFacilityConfig
      parameters:
        - in: path
          name: facilityRef
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationCenterConfig'
          description: >-
            The notification center facility configuration was successfully
            returned.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Returns the notification center facility configuration.
      tags:
        - Core - Notification Center
      x-badges:
        - color: red
          label: ALPHA
    put:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: upsertNotificationCenterFacilityConfig
      parameters:
        - in: path
          name: facilityRef
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/NotificationCenterConfigForUpdate'
                - allOf:
                    - $ref: '#/components/schemas/NotificationCenterConfigForCreation'
                  not:
                    required:
                      - version
                  type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationCenterConfig'
          description: Notification center facility configuration was successfully updated.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationCenterConfig'
          description: Notification center facility configuration was successfully created.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: A version conflict occurred.
      summary: >-
        Creates or updates an existing notification center facility
        configuration.
      tags:
        - Core - Notification Center
      x-badges:
        - color: red
          label: ALPHA
  /api/facilities/{facilityRef}/configurations/notifications/actions:
    post:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: executeNotificationCenterFacilityConfigAction
      parameters:
        - in: path
          name: facilityRef
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/AddChannelAction'
                - $ref: '#/components/schemas/UpdateChannelByIdAction'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationCenterConfig'
          description: >-
            Notification center facility configuration action was successfully
            executed.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: A version conflict occurred.
      summary: >-
        Executes an action to manipulate the notification center facility
        configuration.
      tags:
        - Core - Notification Center
      x-badges:
        - color: red
          label: ALPHA
  /api/facilities/{facilityRef}/configurations/notifications/channels/{channelId}:
    delete:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: deleteNotificationCenterFacilityConfigChannel
      parameters:
        - in: path
          name: facilityRef
          required: true
          schema:
            type: string
        - in: path
          name: channelId
          required: true
          schema:
            type: string
        - in: query
          name: version
          required: true
          schema:
            type: number
      responses:
        '200':
          description: >-
            Notification center facility config channel was successfully
            deleted.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: A version conflict occurred.
      summary: Deletes a notification center facility config channel.
      tags:
        - Core - Notification Center
      x-badges:
        - color: red
          label: ALPHA
  /api/availabilitychannels:
    get:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getAvailabilityChannels
      parameters:
        - in: query
          name: searchTerm
          required: false
          schema:
            type: string
        - in: query
          name: searchTermExact
          required: false
          schema:
            type: string
        - in: query
          name: strategy
          required: false
          schema:
            enum:
              - REGULAR
              - IRON_RESERVE
              - RESTRICT
            type: string
        - in: query
          name: size
          required: false
          schema:
            default: 25
            maximum: 100
            minimum: 1
            type: number
        - in: query
          name: startAfterId
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityChannelPaginatedResult'
          description: Available Availability Channels
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Get all Availability Channels
      tags:
        - Inventory Management - Channel Availability
      x-badges:
        - color: red
          label: ALPHA
    post:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: createAvailabilityChannel
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AvailabilityChannelForCreation'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityChannel'
          description: The created Availability Channel
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Create a new Availability Channel
      tags:
        - Inventory Management - Channel Availability
      x-badges:
        - color: red
          label: ALPHA
  /api/availabilitychannels/{availabilityChannelId}:
    delete:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: deleteAvailabilityChannel
      parameters:
        - in: path
          name: availabilityChannelId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The channel has been deleted
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: >-
        Delete an existing Availability Channel. PLEASE NOTE: This will also
        delete all groups and allocations under this channel.
      tags:
        - Inventory Management - Channel Availability
      x-badges:
        - color: red
          label: ALPHA
    get:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getAvailabilityChannelById
      parameters:
        - in: path
          name: availabilityChannelId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityChannel'
          description: The Availability Channel
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Get an Availability Channel by its id
      tags:
        - Inventory Management - Channel Availability
      x-badges:
        - color: red
          label: ALPHA
    put:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: replaceAvailabilityChannel
      parameters:
        - in: path
          name: availabilityChannelId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AvailabilityChannelForReplacement'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityChannel'
          description: The replaced Availability Channel
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Replace an existing Availability Channel
      tags:
        - Inventory Management - Channel Availability
      x-badges:
        - color: red
          label: ALPHA
  /api/availabilitychannels/{availabilityChannelId}/groups:
    get:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getGroupsUnderChannel
      parameters:
        - in: path
          name: availabilityChannelId
          required: true
          schema:
            type: string
        - in: query
          name: searchTerm
          required: false
          schema:
            type: string
        - in: query
          name: searchTermExact
          required: false
          schema:
            type: string
        - in: query
          name: size
          required: false
          schema:
            default: 25
            maximum: 100
            minimum: 1
            type: number
        - in: query
          name: startAfterId
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AvailabilityAllocationGroupPaginatedResult
          description: Available Groups
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Get Groups under Channel
      tags:
        - Inventory Management - Channel Availability
      x-badges:
        - color: red
          label: ALPHA
    post:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: createGroupUnderChannel
      parameters:
        - in: path
          name: availabilityChannelId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/AvailabilityAllocationGroupForCreationUnderChannel
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityAllocationGroup'
          description: The created Group
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Create a Group under Channel
      tags:
        - Inventory Management - Channel Availability
      x-badges:
        - color: red
          label: ALPHA
  /api/availabilitychannels/{availabilityChannelId}/groups/{groupId}:
    delete:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: deleteGroupUnderChannel
      parameters:
        - in: path
          name: groupId
          required: true
          schema:
            type: string
        - in: path
          name: availabilityChannelId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The Group has been deleted.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Delete an existing Group and all its allocations under Channel
      tags:
        - Inventory Management - Channel Availability
      x-badges:
        - color: red
          label: ALPHA
    get:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getGroupUnderChannelById
      parameters:
        - in: path
          name: availabilityChannelId
          required: true
          schema:
            type: string
        - in: path
          name: groupId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AvailabilityAllocationGroupPaginatedResult
          description: The Group
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Get Groups under Channel by its ID
      tags:
        - Inventory Management - Channel Availability
      x-badges:
        - color: red
          label: ALPHA
    put:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: replaceGroupUnderChannel
      parameters:
        - in: path
          name: availabilityChannelId
          required: true
          schema:
            type: string
        - in: path
          name: groupId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AvailabilityAllocationGroupForReplacement'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityAllocationGroup'
          description: The replaced Group
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Replace a  Group under Channel
      tags:
        - Inventory Management - Channel Availability
      x-badges:
        - color: red
          label: ALPHA
  /api/availabilitychannels/{availabilityChannelId}/groups/{groupId}/allocations:
    get:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getAllocationsUnderGroup
      parameters:
        - in: path
          name: groupId
          required: true
          schema:
            type: string
        - in: path
          name: availabilityChannelId
          required: true
          schema:
            type: string
        - in: query
          name: searchTerm
          required: false
          schema:
            type: string
        - in: query
          name: searchTermExact
          required: false
          schema:
            type: string
        - in: query
          name: size
          required: false
          schema:
            default: 25
            maximum: 100
            minimum: 1
            type: number
        - in: query
          name: startAfterId
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityAllocationPaginatedResult'
          description: Available Allocations
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Get Allocations under Group
      tags:
        - Inventory Management - Channel Availability
      x-badges:
        - color: red
          label: ALPHA
    post:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: createAllocationUnderGroup
      parameters:
        - in: path
          name: groupId
          required: true
          schema:
            type: string
        - in: path
          name: availabilityChannelId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AvailabilityAllocationForCreationUnderGroup'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityAllocation'
          description: The created Allocation
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Create a new Allocation under Group
      tags:
        - Inventory Management - Channel Availability
      x-badges:
        - color: red
          label: ALPHA
  /api/availabilitychannels/{availabilityChannelId}/groups/{groupId}/allocations/{allocationId}:
    delete:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: deleteAllocationUnderGroup
      parameters:
        - in: path
          name: allocationId
          required: true
          schema:
            type: string
        - in: path
          name: groupId
          required: true
          schema:
            type: string
        - in: path
          name: availabilityChannelId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The Allocation has been deleted
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Delete an existing Allocation under Group
      tags:
        - Inventory Management - Channel Availability
      x-badges:
        - color: red
          label: ALPHA
    get:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getAllocationUnderGroupById
      parameters:
        - in: path
          name: groupId
          required: true
          schema:
            type: string
        - in: path
          name: allocationId
          required: true
          schema:
            type: string
        - in: path
          name: availabilityChannelId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityAllocation'
          description: The Allocation
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Get an Allocation under a Group by its id
      tags:
        - Inventory Management - Channel Availability
      x-badges:
        - color: red
          label: ALPHA
    put:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: replaceAllocationUnderGroup
      parameters:
        - in: path
          name: groupId
          required: true
          schema:
            type: string
        - in: path
          name: allocationId
          required: true
          schema:
            type: string
        - in: path
          name: availabilityChannelId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AvailabilityAllocationForReplacement'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityAllocation'
          description: The replaced Allocation
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Replace an existing Allocation under a group
      tags:
        - Inventory Management - Channel Availability
      x-badges:
        - color: red
          label: ALPHA
  /api/audits:
    get:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getAudits
      parameters:
        - in: query
          name: size
          required: false
          schema:
            type: number
        - in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - in: query
          name: entityRef
          required: false
          schema:
            type: string
        - explode: false
          in: query
          name: entityType
          required: false
          schema:
            enum:
              - PACK_JOB
              - PICK_JOB
              - PICK_RUN
              - HANDOVER_JOB
              - SHIPMENT
              - PARCEL
              - CUSTOM_SERVICE
              - SERVICE_JOB
              - LINKED_SERVICE_JOBS
              - ORDER
              - ROUTING_PLAN
              - FACILITY
              - FACILITY_CARRIER_CONNECTION
              - FACILITY_CUSTOM_SERVICE
              - ROUTING_STRATEGY
              - STOW_JOB
            type: string
        - in: query
          name: trace
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditsResult'
          description: Paginated result containing the matching Audit entities
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Get multiple Audits
      tags:
        - Core - Audit
      x-badges:
        - color: red
          label: ALPHA
  /graphql:
    get:
      responses:
        '200':
          description: The GraphQL playground
      tags:
        - Infrastructure - GraphQL
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getGraphQLPlayground
      summary: Get the GraphQL playground
      x-badges:
        - color: red
          label: ALPHA
    post:
      responses:
        '200':
          description: The GraphQL command was successfully executed.
        '400':
          description: GraphQL validation error
      tags:
        - Infrastructure - GraphQL
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: executeGraphQLCommand
      summary: Endpoint for executing GraphQL commands
      x-badges:
        - color: red
          label: ALPHA
components:
  schemas:
    AbstractCarrierCredentials:
      discriminator:
        propertyName: key
      properties:
        key:
          type: string
      required:
        - key
      type: object
      xml:
        name: AbstractCarrierCredentials
      title: AbstractCarrierCredentials
      description: AbstractCarrierCredentials
    AbstractModificationAction:
      discriminator:
        propertyName: action
      properties:
        action:
          description: ''
          enum:
            - AddAllowedValueToTag
            - ModifyPickJob
            - ModifyPickJobLastEditor
            - RestartPickJob
            - ResetPickJob
            - CancelPickRun
            - CancelHandoverjob
            - AbortPickJob
            - FinishPickRun
            - StartPickRun
            - ModifyPickLineItem
            - ModifyPickRunLineItem
            - ModifyPackJob
            - PausePackJob
            - ModifyPackLineItem
            - SplitLineItemsPackJob
            - ModifyFacility
            - ModifyListing
            - ModifyRetainedOfflineStock
            - ModifyListingReactivationAfter
            - ModifyUser
            - ModifyShipment
            - ModifyHandoverjob
            - ModifyCarrier
            - ModifyShortpick
            - ModifyReturn
            - ModifyReturnLineItem
            - ModifyRoutingPlan
            - ModifyFence
            - ModifyRating
            - ModifyTimingMode
            - ModifyGlobalRoutingConfiguration
            - ModifyOrderSplit
            - ModifyPrioritization
            - ModifyLoadUnitType
            - ModifyFeature
            - ModifyParcel
            - ModifyParcelLoadUnit
            - ModifyRestowItem
            - RemovePickJobFromPickRunAction
            - ModifyPartialStock
            - AddTagsToProcess
            - AssignFacilityToProcess
            - ModifyStorageLocation
            - ModifyPackingContainerType
            - ModifyPackingContainerTypeIcon
            - ReplaceCodesInPackingTargetContainer
            - ReplaceLoadUnitLineItems
            - AddLineItemToPackingTargetContainer
            - RemoveLineItemFromPackingTargetContainer
            - UpdateLineItemOnPackingTargetContainer
            - UpdateRecordableAttributesPackingTargetContainer
            - ModifyCustomService
            - UnlockOrder
          example: <Use the corresponding action, see documentation>
          type: string
      required:
        - action
      type: object
      xml:
        name: AbstractModificationAction
      title: AbstractModificationAction
      description: AbstractModificationAction
    AbstractModifyCarrierCredentials:
      discriminator:
        propertyName: key
      properties:
        key:
          type: string
      required:
        - key
      type: object
      xml:
        name: AbstractModifyCarrierCredentials
      title: AbstractModifyCarrierCredentials
      description: AbstractModifyCarrierCredentials
    Address:
      properties:
        additionalAddressInfo:
          example: 'to care of: Mrs. Müller'
          type: string
        city:
          example: Langenfeld
          pattern: ^.+$
          type: string
        country:
          description: A two-digit country code as per ISO 3166-1 alpha-2
          example: DE
          pattern: ^[A-Z]{2}$
          type: string
        province:
          example: NRW
          pattern: ^.+$
          type: string
        customAttributes:
          description: >-
            Attributes that can be added to the address. These attributes cannot
            be used within fulfillment processes, but it could be useful to have
            the informations carried here.
          type: object
        houseNumber:
          example: 42a
          pattern: ^.+$
          type: string
        phoneNumbers:
          items:
            properties:
              customAttributes:
                description: >-
                  Attributes that can be added to the phonenumber. These
                  attributes cannot be used within fulfillment processes, but it
                  could be useful to have the informations carried here.
                type: object
              label:
                description: >-
                  Can be used to give a description for the number, like
                  "private", "business number", etc.
                type: string
              type:
                enum:
                  - MOBILE
                  - PHONE
                type: string
              value:
                description: The number itself. We do not enforce any format (yet).
                type: string
            required:
              - value
              - type
            type: object
          type: array
        postalCode:
          example: '40764'
          pattern: ^.+$
          type: string
        street:
          example: Hauptstr.
          pattern: ^.+$
          type: string
      required:
        - street
        - city
        - postalCode
        - country
      type: object
      title: Address
      description: Address
    ArtifactMetadataItem:
      properties:
        buildDate:
          description: Date of the build of the artifact
          example: '2020-02-03T08:45:50.525Z'
          format: date-time
          type: string
        download:
          properties:
            expiration:
              description: Expiration date of the download link
              example: '2020-02-03T08:45:50.525Z'
              format: date-time
              type: string
            url:
              description: URL for the download of the artifact
              type: string
          type: object
        versionCode:
          description: Version Code of the artifact
          example: 42
          type: number
        versionName:
          description: Version Name of the artifact
          example: 1.0.42
          type: string
      required:
        - download
        - versionCode
        - versionName
        - buildDate
      type: object
      title: ArtifactMetadataItem
      description: ArtifactMetadataItem
    ArtifactMetadataItems:
      properties:
        artifacts:
          items:
            $ref: '#/components/schemas/ArtifactMetadataItem'
          type: array
        platform:
          description: Platform name for which the artifact list is generated
          example: android
          type: string
      required:
        - artifacts
        - platform
      type: object
      title: ArtifactMetadataItems
      description: ArtifactMetadataItems
    CallbackHeader:
      title: CallbackHeader
      description: Header for the Webhook call.
      properties:
        key:
          description: 'This is the key of the header. e.g.: `Authorization`'
          type: string
        value:
          description: >-
            This is the value for the header. e.g.: `Basic
            dXNlcm5hbWU6cGFzc3dvcmQ=`
          type: string
      required:
        - key
        - value
      type: object
    CapabilityStatus:
      enum:
        - enabled
        - inactive
        - disabled
      type: string
      title: CapabilityStatus
      description: CapabilityStatus
    ParcelLabelClassificationForCreation:
      additionalProperties: false
      properties:
        nameLocalized:
          description: Localized name for parcel label classification
          example:
            de_DE: S-Paket
            en_US: S-Parcel
            ru_RU: S-пакет
          $ref: '#/components/schemas/LocaleString'
        services:
          $ref: '#/components/schemas/ParcelLabelClassificationServices'
        dimensions:
          $ref: '#/components/schemas/ParcelDimensions'
      required:
        - nameLocalized
        - dimensions
      type: object
      title: ParcelLabelClassificationForCreation
      description: ParcelLabelClassificationForCreation
    ParcelLabelClassification:
      additionalProperties: false
      properties:
        name:
          description: Name of the parcel label classification
          example: S-Parcel
          type: string
        nameLocalized:
          description: Localized name for parcel label classification
          example:
            de_DE: S-Paket
            en_US: S-Parcel
            ru_RU: S-пакет
          $ref: '#/components/schemas/LocaleString'
        services:
          $ref: '#/components/schemas/ParcelLabelClassificationServices'
        dimensions:
          $ref: '#/components/schemas/ParcelDimensions'
      required:
        - nameLocalized
        - dimensions
      type: object
      title: ParcelLabelClassification
      description: ParcelLabelClassification
    ParcelLabelClassificationServices:
      additionalProperties: false
      properties:
        bulkyGoods:
          type: boolean
          default: false
      type: object
      title: ParcelLabelClassificationServices
      description: ParcelLabelClassificationServices
    Carrier:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/CarrierForCreation'
        - $ref: '#/components/schemas/VersionedResource'
        - properties:
            id:
              description: The id of the carrier
              example: LGMl2DuvPnfPoSHhYFOm
              type: string
            deliveryType:
              $ref: '#/components/schemas/CarrierDeliveryType'
            lifecycle:
              $ref: '#/components/schemas/CarrierLifecycle'
            parcelLabelClassifications:
              items:
                $ref: '#/components/schemas/ParcelLabelClassification'
              type: array
            defaultParcelWidthInCm:
              description: Default width in cm
              default: 35
              minimum: 1
              type: number
            defaultParcelLengthInCm:
              description: Default length in cm
              default: 25
              minimum: 1
              type: number
            defaultParcelHeightInCm:
              description: Default height in cm
              default: 10
              minimum: 1
              type: number
          required:
            - id
            - status
            - defaultParcelWidthInCm
            - defaultParcelLengthInCm
            - defaultParcelHeightInCm
          type: object
      xml:
        name: Carrier
      title: Carrier
      description: Carrier
    CarrierPriorityResult:
      properties:
        recommendedCarriers:
          items:
            $ref: '#/components/schemas/CarrierRecommendationResult'
          type: array
        otherCarriers:
          items:
            $ref: '#/components/schemas/CarrierRecommendationResult'
          type: array
      required:
        - recommendedCarriers
        - otherCarriers
      title: CarrierPriorityResult
      description: CarrierPriorityResult
    CarrierRecommendationResult:
      properties:
        priority:
          type: number
          description: >-
            The lower the value the higher is the priority, e.g. priority 1 is
            higher than priority 10. The priority is used when comparing
            multiple carriers.
        carrier:
          $ref: '#/components/schemas/Carrier'
        threshold:
          $ref: '#/components/schemas/PriceRange'
      required:
        - priority
        - carrier
      title: CarrierRecommendationResult
      description: CarrierRecommendationResult
    CarrierPriorityCalculationRequest:
      additionalProperties: false
      properties:
        productValue:
          $ref: '#/components/schemas/ParcelProductValue'
      type: object
      title: CarrierPriorityCalculationRequest
      description: CarrierPriorityCalculationRequest
    BringCarrierConfiguration:
      title: BringCarrierConfiguration
      description: Configuration of Bring Carrier
      allOf:
        - $ref: '#/components/schemas/CarrierConfiguration'
      properties:
        customerId:
          type: string
          example: '12345'
          description: Bring Carrier customer number.
        supportPhoneNumber:
          type: string
          example: '0031121424242'
          description: Bring Carrier support phone number.
        shipmentProduct:
          type: string
          example: '5600'
          description: Product that will be used for the shipment booking
        returnProduct:
          type: string
          example: '9300'
          description: Product that will be used for return
        trackAndTraceUrl:
          type: string
        webhookFftHost:
          type: string
      required:
        - customerId
        - supportPhoneNumber
    FedexCarrierConfiguration:
      title: FedexCarrierConfiguration
      description: Configuration of Fedex Carrier
      allOf:
        - $ref: '#/components/schemas/CarrierConfiguration'
      properties:
        useEconomyService:
          type: boolean
          example: true
          description: Indicates if the economy services of fedex should be used.
        defaultPriceValue:
          type: number
          example: 10.99
          description: Default value of shipped goods
        defaultPriceCurrency:
          type: string
          example: EUR
          description: default currency of shipped goods as 3 letter iso code
          pattern: ^[A-Z]{3}$
        defaultManufactureCountry:
          description: A two-digit country code as per ISO 3166-1 alpha-2
          example: DE
          pattern: ^[A-Z]{2}$
          type: string
        defaultCommodityDescription:
          type: string
          example: Description goes here
          description: Describes the shipped goods
        trackAndTraceUrl:
          type: string
      required:
        - useEconomyService
        - defaultPriceCurrency
        - defaultPriceValue
        - defaultManufactureCountry
        - defaultCommodityDescription
    DpdChCarrierConfiguration:
      title: DpdChCarrierConfiguration
      description: Configuration of DPD Switzerland Carrier
      allOf:
        - $ref: '#/components/schemas/CarrierConfiguration'
      properties:
        trackAndTraceUrl:
          type: string
    DhlV2CarrierConfiguration:
      title: DhlV2CarrierConfiguration
      description: Configuration of DHL Carrier
      allOf:
        - $ref: '#/components/schemas/CarrierConfiguration'
      properties:
        trackAndTraceUrl:
          type: string
        shipperRef:
          type: string
          description: >-
            a shipperRef that can optionally be defined in the DHL business
            customer portal
        sftpConfiguration:
          $ref: '#/components/schemas/DhlV2SftpConfiguration'
        alwaysDoTrackAndTrace:
          type: boolean
          default: false
          description: >-
            If true, the track and trace will always be done, even if a parcel
            is directly created in DONE status
    DhlV2SftpConfiguration:
      additionalProperties: false
      properties:
        useSftpForTandT:
          type: boolean
          example: true
          default: false
          description: Indicates if the SFTP should be used for tracking and tracing
      required:
        - useSftpForTandT
      title: DhlV2SftpConfiguration
      description: DhlV2SftpConfiguration
    VceCarrierConfiguration:
      title: VceCarrierConfiguration
      description: Configuration of VCE Carrier
      allOf:
        - $ref: '#/components/schemas/CarrierConfiguration'
    GlsCarrierConfiguration:
      title: GlsCarrierConfiguration
      description: Configuration of GLS Carrier
      allOf:
        - $ref: '#/components/schemas/CarrierConfiguration'
      properties:
        alternativeSendAddressLocationId:
          type: string
          minLength: 1
        alternativeReturnAddressLocationId:
          type: string
          minLength: 1
        trackAndTraceUrl:
          type: string
        trackAndTraceWsdlUrl:
          type: string
    HermesCarrierConfiguration:
      title: HermesCarrierConfiguration
      description: Configuration of Hermes Carrier
      allOf:
        - $ref: '#/components/schemas/CarrierConfiguration'
      properties:
        alwaysDoTrackAndTrace:
          type: boolean
          default: false
    PostNlCarrierConfiguration:
      title: PostNlCarrierConfiguration
      description: Configuration of PostNL Carrier
      allOf:
        - $ref: '#/components/schemas/CarrierConfiguration'
      properties:
        trackAndTraceUrl:
          type: string
    CarrierDeliveryType:
      description: 'Provided delivery of this CEP. Default: DELIVERY'
      enum:
        - SAMEDAY
        - DELIVERY
      type: string
      title: CarrierDeliveryType
    CarrierForCreation:
      additionalProperties: false
      properties:
        credentials:
          $ref: '#/components/schemas/AbstractCarrierCredentials'
        key:
          description: >-
            References the KEP. Currently allowed values are DHL_V2, DPD_CH,
            DPD_CH_VCE, ANGEL, GLS, FEDEX, POSTNL, BRING, UPS, POST_NORD,
            DHL_EXPRESS,
             CUSTOM and to distinct between multiple custom carriers one can use CUSTOM_ combined with a unique name.
          example: DHL_V2
          type: string
        logoUrl:
          minLength: 1
          type: string
        name:
          description: >-
            This is the well known name for a supported CEP partner. Can be
            adapted to the clients needs.
          example: DHL Köln
          type: string
        status:
          $ref: '#/components/schemas/CarrierStatus'
        defaultParcelWeightInGram:
          description: Default weight for a parcel in gram
          default: 1000
          minimum: 1
          type: number
        defaultParcelWidthInCm:
          description: Default width in cm
          default: 35
          minimum: 1
          type: number
        defaultParcelLengthInCm:
          description: Default length in cm
          default: 25
          minimum: 1
          type: number
        defaultParcelHeightInCm:
          description: Default height in cm
          default: 10
          minimum: 1
          type: number
        parcelLabelClassifications:
          items:
            $ref: '#/components/schemas/ParcelLabelClassificationForCreation'
          type: array
        productValueNeeded:
          type: boolean
          example: true
          description: >-
            Setting to enable the Client to ask for the parcel product value
            while ordering a label. This information is mandatory for sending
            parcels between different countries (customs declaration)
      required:
        - name
        - key
      type: object
      xml:
        name: CarrierForCreation
      title: CarrierForCreation
      description: CarrierForCreation
    CarrierLifecycle:
      description: >-
        Used to determine if a carrier is available for configuration. GA
        carriers are generally available and are covered by our SLA. BETA
        carriers are available, but subject to change and not covered by SLA.
        ALPHA carriers are not implemented completely, yet. Default: GA
      enum:
        - GA
        - BETA
        - ALPHA
      type: string
      title: CarrierLifecycle
    CarrierPatchActions:
      properties:
        actions:
          items:
            $ref: '#/components/schemas/ModifyCarrierAction'
          minItems: 1
          type: array
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
        - actions
      type: object
      xml:
        name: ShipmentPatchActions
      title: CarrierPatchActions
      description: CarrierPatchActions
    NonDeliveryDaysPerCountryAndProvince:
      type: object
      additionalProperties: false
      properties:
        country:
          type: string
        nonDeliveryDays:
          type: array
          items:
            $ref: '#/components/schemas/NonDeliveryDays'
        recurringNonDeliveryWeekdays:
          type: array
          items:
            $ref: '#/components/schemas/WeekDay'
        nonDeliveryDaysPerProvince:
          type: array
          items:
            $ref: '#/components/schemas/NonDeliveryDaysPerProvince'
      required:
        - country
        - nonDeliveryDays
        - recurringNonDeliveryWeekdays
        - nonDeliveryDaysPerProvince
      title: NonDeliveryDaysPerCountryAndProvince
      description: NonDeliveryDaysPerCountryAndProvince
    NonDeliveryDaysPerProvince:
      type: object
      additionalProperties: false
      properties:
        province:
          type: string
        nonDeliveryDays:
          type: array
          items:
            $ref: '#/components/schemas/NonDeliveryDays'
        recurringNonDeliveryWeekdays:
          type: array
          items:
            $ref: '#/components/schemas/WeekDay'
      required:
        - province
        - nonDeliveryDays
        - recurringNonDeliveryWeekdays
      title: NonDeliveryDaysPerProvince
      description: NonDeliveryDaysPerProvince
    NonDeliveryDays:
      type: object
      additionalProperties: false
      properties:
        nonDeliveryType:
          $ref: '#/components/schemas/NonDeliveryType'
          default: SINGLE
        nonDeliveryDay:
          type: string
          pattern: ^\d{4}-\d{2}-\d{2}$
          example: '2020-02-03'
      required:
        - nonDeliveryDay
      title: NonDeliveryDays
      description: NonDeliveryDays
    NonDeliveryType:
      type: string
      enum:
        - SINGLE
        - RECURRING
      title: NonDeliveryType
      description: NonDeliveryType
    SortDirection:
      enum:
        - ASCENDING
        - DESCENDING
      type: string
      title: SortDirection
      description: SortDirection
    SortParameter:
      type: object
      properties:
        sortDirection:
          $ref: '#/components/schemas/SortDirection'
        sortParameterName:
          $ref: '#/components/schemas/SortParameterName'
      required:
        - sortDirection
        - sortParameterName
      title: SortParameter
      description: SortParameter
    SortParameterName:
      enum:
        - NAME
        - ADDRESS
        - STATUS
        - OPERATIVESTATUS
        - SERVICETYPE
        - ORDEREDAMOUNT
        - ORDERDATE
        - ORDERID
      type: string
      title: SortParameterName
      description: SortParameterName
    CarrierStatus:
      description: 'It is taken into consideration for all carriers. Default: INACTIVE'
      enum:
        - ACTIVE
        - INACTIVE
      type: string
      title: CarrierStatus
    ClosingDay:
      description: At this day the facility is closed and does not do picking
      properties:
        date:
          description: The day at which the Facility is closed
          example: '2020-02-03T09:45:51.525Z'
          format: date-time
          type: string
        reason:
          description: The reason why the Facility is closed on this day
          type: string
        recurrence:
          enum:
            - YEARLY
            - NONRECURRING
          type: string
      required:
        - reason
        - date
        - recurrence
      type: object
      title: ClosingDay
    CompanyAddress:
      properties:
        city:
          example: Langenfeld
          pattern: ^.+$
          type: string
        country:
          example: Germany
          pattern: ^.+$
          type: string
        houseNumber:
          example: 42a
          pattern: ^.+$
          type: string
        name:
          example: OC fulfillment GmbH
          pattern: ^.+$
          type: string
        postalCode:
          example: '40764'
          pattern: ^.+$
          type: string
        street:
          example: Hauptstr.
          pattern: ^.+$
          type: string
      required:
        - name
        - street
        - postalCode
        - city
        - country
      type: object
      title: CompanyAddress
      description: CompanyAddress
    ConsumerAddress:
      allOf:
        - $ref: '#/components/schemas/Address'
      properties:
        companyName:
          example: Speedy Boxales Ltd.
          type: string
        firstName:
          example: Maxine
          type: string
        lastName:
          example: Muller
          type: string
        salutation:
          example: Frau
          type: string
        email:
          type: string
          minLength: 1
          format: email
          example: test@try.de
        addressType:
          $ref: '#/components/schemas/AddressType'
        coordinates:
          $ref: '#/components/schemas/Coordinates'
      type: object
      title: ConsumerAddress
      description: ConsumerAddress
    Coordinates:
      description: >-
        Coordinates of the WGS84 geodetic reference system in Mercator
        projection, as used e.g. by the Google Maps API
      properties:
        lat:
          description: Latitude value
          example: 50.937531
          type: number
        lon:
          description: Longitude value
          example: 6.960279
          type: number
      required:
        - lat
        - lon
      type: object
      title: Coordinates
    CustomPrioritizationRule:
      allOf:
        - $ref: '#/components/schemas/PrioritizationRule'
      description: >-
        You can supply a CUSTOM Prioritization rule. In order to successfully
        supply such a rule you also need to provide an evaluatable Expression in
        vmExpression. This expression needs to return an integer value that adds
        additional priority to an order.
      properties:
        vmExpression:
          example: >-
            order.customAttributes && order.customAttributes.amazon === true ?
            100 : 0
          type: string
      required:
        - vmExpression
      type: object
      xml:
        name: CustomPrioritizationRule
      title: CustomPrioritizationRule
    CutoffTime:
      nullable: true
      properties:
        hour:
          default: 12
          example: 16
          type: number
        minute:
          default: 0
          example: 30
          type: number
      required:
        - hour
        - minute
      type: object
      title: CutoffTime
      description: CutoffTime
    TenantConfiguration:
      type: object
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        clearName:
          type: string
      required:
        - clearName
      title: TenantConfiguration
      description: TenantConfiguration
    TenantConfigurationForUpsert:
      type: object
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        clearName:
          type: string
        version:
          type: number
      required:
        - clearName
        - version
      title: TenantConfigurationForUpsert
      description: TenantConfigurationForUpsert
    TransitTimeConfiguration:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        calculationStrategy:
          type: string
          enum:
            - EARLIEST
            - LATEST
        id:
          type: string
      required:
        - id
        - calculationStrategy
      type: object
      title: TransitTimeConfiguration
      description: TransitTimeConfiguration
    TransitTimeConfigurationForUpsert:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        calculationStrategy:
          type: string
          enum:
            - EARLIEST
            - LATEST
      required:
        - calculationStrategy
      type: object
      title: TransitTimeConfigurationForUpsert
      description: TransitTimeConfigurationForUpsert
    CutoffTimeConfiguration:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        clickAndCollect:
          $ref: '#/components/schemas/CutoffTime'
        shipFromStore:
          $ref: '#/components/schemas/CutoffTime'
        id:
          type: string
      required:
        - shipFromStore
        - clickAndCollect
      type: object
      title: CutoffTimeConfiguration
      description: CutoffTimeConfiguration
    DefaultPickingTimesConfiguration:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        pickingTimes:
          $ref: '#/components/schemas/PickingTimes'
          description: The default picking times are Mo-Sa 09:00-17:00
      required:
        - pickingTimes
      type: object
      title: DefaultPickingTimesConfiguration
      description: DefaultPickingTimesConfiguration
    DeliveryAddressWithType:
      allOf:
        - $ref: '#/components/schemas/DeliveryAddress'
      properties:
        addressType:
          $ref: '#/components/schemas/AddressType'
      required:
        - street
        - houseNumber
        - postalCode
        - city
        - addressType
      type: object
      title: DeliveryAddressWithType
      description: DeliveryAddressWithType
    DeliveryAddress:
      properties:
        city:
          example: Langenfeld
          pattern: ^.+$
          type: string
        companyName:
          example: OC Fulfillment GmbH
          pattern: ^.+$
          type: string
        firstName:
          example: Maxine
          pattern: ^.+$
          type: string
        houseNumber:
          example: 42a
          pattern: ^.+$
          type: string
        lastName:
          example: Muller
          pattern: ^.+$
          type: string
        postalCode:
          example: '40764'
          pattern: ^.+$
          type: string
        street:
          example: Hauptstr.
          pattern: ^.+$
          type: string
      required:
        - street
        - postalCode
        - city
      type: object
      title: DeliveryAddress
      description: DeliveryAddress
    DeliveryArea:
      properties:
        country:
          description: A two-digit country code as per ISO 3166-1 alpha-2
          example: DE
          pattern: ^[A-Z]{2}$
          type: string
        postalCode:
          example: '40764'
          pattern: ^.+$
          type: string
      required:
        - country
        - postalCode
      type: object
      title: DeliveryArea
      description: DeliveryArea
    DeliveryNote:
      properties:
        companyAddress:
          $ref: '#/components/schemas/CompanyAddress'
        deliveryAddress:
          description: use this if no deliveryAddresses are passed.
          $ref: '#/components/schemas/DeliveryAddress'
        deliveryAddresses:
          description: >-
            if this field is filled, the delivery address will be taken from
            here according to this sorting: PARCEL_LOCKER > POSTAL_ADDRESS >
            INVOICE_ADDRESS. Each type is only allowed once.
          items:
            $ref: '#/components/schemas/DeliveryAddressWithType'
          type: array
        items:
          items:
            $ref: '#/components/schemas/DeliveryNoteItem'
          type: array
        orderInformation:
          $ref: '#/components/schemas/OrderInformation'
      required:
        - orderInformation
        - items
      type: object
      title: DeliveryNote
      description: DeliveryNote
    DeliveryNoteConfiguration:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        articleIdLabel:
          $ref: '#/components/schemas/LocaleString'
        articleTitleLabel:
          $ref: '#/components/schemas/LocaleString'
        companyAddress:
          $ref: '#/components/schemas/CompanyAddress'
        description:
          $ref: '#/components/schemas/LocaleString'
        disclaimer:
          $ref: '#/components/schemas/LocaleString'
        headline:
          $ref: '#/components/schemas/LocaleString'
        id:
          example: delivery-note
          type: string
        logoUrl:
          type: string
        substituteText:
          $ref: '#/components/schemas/LocaleString'
        orderDateLabel:
          $ref: '#/components/schemas/LocaleString'
        orderNumberLabel:
          $ref: '#/components/schemas/LocaleString'
        pageLabel:
          $ref: '#/components/schemas/LocaleString'
        quantityLabel:
          $ref: '#/components/schemas/LocaleString'
        pdfBackgroundConfiguration:
          $ref: '#/components/schemas/PdfBackgroundConfiguration'
      required:
        - id
        - orderNumberLabel
        - orderDateLabel
        - headline
        - quantityLabel
        - articleIdLabel
        - articleTitleLabel
        - pageLabel
      type: object
      title: DeliveryNoteConfiguration
      description: DeliveryNoteConfiguration
    DeliveryNoteConfigurationForUpsert:
      properties:
        articleIdLabel:
          $ref: '#/components/schemas/LocaleString'
        articleTitleLabel:
          $ref: '#/components/schemas/LocaleString'
        companyAddress:
          $ref: '#/components/schemas/CompanyAddress'
        description:
          $ref: '#/components/schemas/LocaleString'
        disclaimer:
          $ref: '#/components/schemas/LocaleString'
        headline:
          $ref: '#/components/schemas/LocaleString'
        logo:
          $ref: '#/components/schemas/NamedFile'
        pdfBackgroundConfiguration:
          $ref: '#/components/schemas/PdfBackgroundConfigurationForUpsert'
        orderDateLabel:
          $ref: '#/components/schemas/LocaleString'
        orderNumberLabel:
          $ref: '#/components/schemas/LocaleString'
        pageLabel:
          $ref: '#/components/schemas/LocaleString'
        quantityLabel:
          $ref: '#/components/schemas/LocaleString'
        substituteText:
          $ref: '#/components/schemas/LocaleString'
        version:
          description: >-
            Version field is used in the optimistic locking process. If the
            configuration doesn't exists, this field is ignored.
          example: 1
          type: number
      required:
        - version
        - orderNumberLabel
        - orderDateLabel
        - headline
        - quantityLabel
        - articleIdLabel
        - articleTitleLabel
        - pageLabel
      type: object
      title: DeliveryNoteConfigurationForUpsert
      description: DeliveryNoteConfigurationForUpsert
    DeliveryNoteItem:
      properties:
        id:
          type: string
        quantity:
          type: string
        title:
          type: string
        substitutes:
          type: string
          description: Titel of the item which is substituted through this item
      required:
        - id
        - title
        - quantity
      type: object
      title: DeliveryNoteItem
      description: DeliveryNoteItem
    ReturnNote:
      properties:
        companyAddress:
          $ref: '#/components/schemas/CompanyAddress'
        orderInformation:
          $ref: '#/components/schemas/OrderInformation'
        deliveryAddress:
          $ref: '#/components/schemas/DeliveryAddress'
        deliveryAddresses:
          description: >-
            if this field is filled, the delivery address will be taken from
            here according to this sorting: INVOICE_ADDRESS > POSTAL_ADDRESS.
            Each type is only allowed once.
          items:
            $ref: '#/components/schemas/DeliveryAddressWithType'
          type: array
        qrCodeContent:
          type: string
        items:
          items:
            $ref: '#/components/schemas/ReturnNoteItem'
          type: array
      required:
        - orderInformation
        - items
      type: object
      title: ReturnNote
      description: ReturnNote
    ReturnNoteItem:
      properties:
        id:
          type: string
        title:
          type: string
        quantity:
          description: optional parameter for picked quantity of the given line item
          type: integer
        substitutes:
          type: string
          description: Titel of the item which is substituted through this item
      required:
        - title
      type: object
      title: ReturnNoteItem
      description: ReturnNoteItem
    HandoverJobOrderBy:
      description: STATUS_TARGET_TIME_LAST_MODIFIED_DATE is deprecated
      enum:
        - STATUS_TARGET_TIME_LAST_MODIFIED_DATE
        - TARGET_TIME_ASC
      title: HandoverJobOrderBy
    TenantConnectorConfigurations:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        connectApps:
          type: array
          minItems: 1
          description: All possible apps
          items:
            $ref: '#/components/schemas/TenantConnectorConfiguration'
      required:
        - version
        - connectApps
      type: object
      title: TenantConnectorConfigurations
      description: TenantConnectorConfigurations
    TenantConnectorConfiguration:
      properties:
        app:
          $ref: '#/components/schemas/ConnectAppTypeEnum'
        firebaseProjectId:
          type: string
          example: some-name
        apiUrl:
          type: string
          example: https://some-name.api.fulfillmenttools.com
        firebaseWebApiKey:
          type: string
          example: GTasGTHJZ_ku_gaad_P2A4KRDQW_MM_-AS-Lglk
        firebaseAppId:
          type: string
          example: 1:180217824890:android:f1fbf11eb8a613cbda9ee4
        firebaseAppIdDebug:
          type: string
          example: 1:180217824890:android:c861c7b58d938e05da9ee4
      additionalProperties: false
      required:
        - app
        - firebaseProjectId
        - apiUrl
        - firebaseWebApiKey
        - firebaseAppId
        - firebaseAppIdDebug
      title: TenantConnectorConfiguration
      description: TenantConnectorConfiguration
    ParcelLabelTypeEnum:
      description: The type of possible Parcel Labels
      enum:
        - return.pdf
        - all.pdf
        - send.pdf
        - customs.pdf
      type: string
      title: ParcelLabelTypeEnum
    ConnectAppTypeEnum:
      example: PICKING
      description: The type of possible Apps
      enum:
        - PICKING
        - INVENTORY
        - OPERATIONS_ANDROID
        - OPERATIONS_IOS
      type: string
      title: ConnectAppTypeEnum
    CarrierServices:
      example: SIGNATURE
      description: Services which should be booked from carrier
      enum:
        - SIGNATURE
        - CUSTOMER_SIGNATURE
        - ADULT_SIGNATURE
        - SATURDAY_DELIVERY
      type: string
      title: CarrierServices
    DHLV2CarrierCredentials:
      title: DHLV2CarrierCredentials
      description: DHL Credentials.
      allOf:
        - $ref: '#/components/schemas/AbstractCarrierCredentials'
        - properties:
            apiKey:
              description: Internal API Key to communicate with the DHL Api
              type: string
            fallback:
              $ref: '#/components/schemas/DHLV2BusinessCredentials'
            sftpCredentials:
              $ref: '#/components/schemas/DHLV2SftpCredentials'
          required:
            - apiKey
          type: object
      xml:
        name: DhlV2CarrierCredentials
    HermesCarrierCredentials:
      title: HermesCarrierCredentials
      description: Hermes Credentials.
      allOf:
        - $ref: '#/components/schemas/AbstractCarrierCredentials'
        - properties:
            username:
              description: Internal user to identify with the Hermes Api
              type: string
            password:
              description: Password to authenticate with the Hermes Api
              type: string
          required:
            - username
            - password
          type: object
      xml:
        name: HermesCarrierCredentials
    DHLV2SftpCredentials:
      title: DHLV2SftpCredentials
      description: Dhl V2 SFTP Credentials.
      additionalProperties: false
      properties:
        username:
          type: string
          example: username
          description: Username for the SFTP
          minLength: 1
          maxLength: 80
        password:
          type: string
          example: secretPassword
          description: Password for the SFTP
          minLength: 1
          maxLength: 80
      required:
        - username
        - password
    VceCarrierCredentials:
      title: VceCarrierCredentials
      description: VCE Credentials.
      allOf:
        - $ref: '#/components/schemas/AbstractCarrierCredentials'
        - properties:
            user:
              description: Internal user to identify with the VCE Api
              type: string
            password:
              description: Password to authenticate with the VCE Api
              type: string
          required:
            - user
            - password
          type: object
      xml:
        name: VceCarrierCredentials
    DHLV2BusinessCredentials:
      title: DHLV2BusinessCredentials
      description: DHL Business Credentials.
      allOf:
        - $ref: '#/components/schemas/AbstractCarrierCredentials'
        - properties:
            billingNumber:
              description: >-
                Abrechnungsnummer DHL Paket, displayed in the DHL
                Geschäftskundenportal under 'Vertragspositionen'
              type: string
              example: 22222222220101
              minLength: 1
            retoureBillingNumber:
              description: >-
                Abrechnungsnummer DHL Retoure, displayed in the DHL
                Geschäftskundenportal under 'Vertragspositionen'
              type: string
              example: 22222222220701
              minLength: 1
            internationalBillingNumber:
              description: >-
                Abrechnungsnummer DHL international shipping, displayed in the
                DHL Geschäftskundenportal under 'Vertragspositionen'
              type: string
              example: 22222222220701
              minLength: 1
            dhlBusinessPassword:
              description: Password you use to login to the DHL Geschäftskundenportal
              type: string
              minLength: 1
            dhlBusinessUsername:
              description: >-
                Username (Benutzername) you use to login to the DHL
                Geschäftskundenportal
              type: string
              minLength: 1
            dhlBusinessUsergroup:
              description: (optional) User group to use to obtain a label
              type: string
              minLength: 1
          required:
            - dhlBusinessUsername
            - dhlBusinessPassword
            - billingNumber
          type: object
          xml:
            name: DHLV2BusinessCredentials
    FedexCarrierCredentials:
      title: FedexCarrierCredentials
      description: Fedex Credentials.
      allOf:
        - $ref: '#/components/schemas/AbstractCarrierCredentials'
        - properties:
            accountNumber:
              description: Your fedex accountnumber
              type: string
            apiKey:
              description: Internal API Key to communicate with the CEP Api
              type: string
            secretKey:
              description: Internal API Key to communicate with the CEP Api
              type: string
          required:
            - apiKey
            - secretKey
            - accountNumber
          type: object
      xml:
        name: FedexCarrierCredentials
    BringCarrierCredentials:
      title: BringCarrierCredentials
      description: Bring Credentials.
      allOf:
        - $ref: '#/components/schemas/AbstractCarrierCredentials'
        - properties:
            apiUid:
              description: Internal API Uid to communicate with the CEP Api
              type: string
            apiKey:
              description: Internal API Key to communicate with the CEP Api
              type: string
            clientUrl:
              description: Url of the requesting client, can be a static value
              type: string
            authToken:
              description: Identifier for Track&Trace Webhook
              type: string
          required:
            - apiUid
            - apiKey
            - clientUrl
          type: object
      xml:
        name: BringCarrierCredentials
    DomainConfiguration:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        value:
          description: User's default domain for authentication
          example: yourDomain.com
          type: string
        id:
          type: string
      required:
        - value
      type: object
      title: DomainConfiguration
      description: DomainConfiguration
    TagConfiguration:
      properties:
        offeredDocumentsPerTag:
          type: array
          description: >-
            All entries with a match in their matchingValues will be combined
            when determining what documents belong to an entity
          items:
            $ref: '#/components/schemas/OfferedDocumentPerTag'
        offeredDocumentsByDefault:
          type: array
          description: >-
            This configuration is a fallback and applies only if none of the
            entries in offeredDocumentsPerTag can be applied
          items:
            $ref: '#/components/schemas/OfferedDocument'
      required:
        - offeredDocumentsPerTag
        - offeredDocumentsByDefault
      title: TagConfiguration
      description: TagConfiguration
    StickerConfiguration:
      additionalProperties: false
      properties:
        offeredStickersByTag:
          type: array
          items:
            $ref: '#/components/schemas/OfferedStickersByTag'
      title: StickerConfiguration
      description: StickerConfiguration
    ExpectedPickLineItemForCreation:
      properties:
        transferId:
          type: string
        article:
          $ref: '#/components/schemas/PickLineItemArticle'
        customAttributes:
          description: >-
            Attributes that can be added to the pick line. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the information carried here.
          type: object
        measurementUnitKey:
          description: Identifier for items unit of measurement.
          example: liter
          type: string
        quantity:
          description: quantity of the specific article that has been ordered
          example: 21
          format: int64
          minimum: 1
          type: integer
        secondaryMeasurementUnitKey:
          description: Identifier for items unit of measurement.
          example: liter
          type: string
        secondaryQuantity:
          description: quantity of the specific article that has been ordered
          example: 21
          format: int64
          minimum: 0
          type: integer
        measurementValidation:
          $ref: '#/components/schemas/MeasurementValidation'
        scannableCodes:
          items:
            description: Codes, that identify the article
            type: string
          type: array
        partialStockLocations:
          description: >-
            Indicates where the items to pick could be found and from where the
            picking should be started.
          items:
            $ref: >-
              #/components/schemas/PickJobLineItemPartialStockLocationForCreation
        tags:
          items:
            $ref: '#/components/schemas/TagReference'
          type: array
        stickers:
          items:
            $ref: '#/components/schemas/Sticker'
          type: array
        allowedSubstitutes:
          items:
            $ref: '#/components/schemas/Substitute'
          type: array
      required:
        - transferId
        - quantity
        - article
      title: ExpectedPickLineItemForCreation
      description: ExpectedPickLineItemForCreation
    PickLineItemForCreation:
      properties:
        article:
          $ref: '#/components/schemas/PickLineItemArticle'
        customAttributes:
          description: >-
            Attributes that can be added to the pick line. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the information carried here.
          type: object
        measurementUnitKey:
          description: Identifier for items unit of measurement.
          example: liter
          type: string
        quantity:
          description: quantity of the specific article that has been ordered
          example: 21
          format: int64
          minimum: 1
          type: integer
        secondaryMeasurementUnitKey:
          description: Identifier for items unit of measurement.
          example: liter
          type: string
        secondaryQuantity:
          description: quantity of the specific article that has been ordered
          example: 21
          format: int64
          minimum: 0
          type: integer
        measurementValidation:
          $ref: '#/components/schemas/MeasurementValidation'
        scannableCodes:
          items:
            description: Codes, that identify the article
            type: string
          type: array
        partialStockLocations:
          description: >-
            Indicates where the items to pick could be found and from where the
            picking should be started.
          items:
            $ref: >-
              #/components/schemas/PickJobLineItemPartialStockLocationForCreation
        tags:
          items:
            $ref: '#/components/schemas/TagReference'
          type: array
        stickers:
          items:
            $ref: '#/components/schemas/Sticker'
          type: array
        allowedSubstitutes:
          items:
            $ref: '#/components/schemas/Substitute'
          type: array
        recordableAttributes:
          items:
            $ref: '#/components/schemas/RecordableAttributeForCreation'
          type: array
          nullable: true
      required:
        - quantity
        - article
      type: object
      title: PickLineItemForCreation
      description: PickLineItemForCreation
    PickRunLineItem:
      allOf:
        - $ref: '#/components/schemas/PickLineItem'
        - properties:
            pickJobRef:
              type: string
      title: PickRunLineItem
      description: PickRunLineItem
    PickLineItem:
      allOf:
        - $ref: '#/components/schemas/PickLineItemForCreation'
        - properties:
            id:
              description: >-
                The id of this lineItem. It is generated during creation
                automatically and suits as the primary identifier of the
                described entity.
              example: climk4dcQFiPdA5ULuhS
              type: string
            picked:
              description: The amount of articles that were picked for this pickline.
              example: 20
              format: int64
              minimum: 0
              type: integer
            secondaryPicked:
              description: >-
                The secondary amount of articles that were picked for this
                pickline.
              example: 20
              format: int64
              minimum: 0
              type: integer
            pickedAt:
              description: Date when the line has been picked.
              example: '2024-02-03T08:45:51.525Z'
              format: date-time
              type: string
            status:
              $ref: '#/components/schemas/PickLineItemStatus'
            substituteLineItems:
              description: >-
                This part of the API is in Beta status. For details please check
                the <a
                href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
                target="_blank">api-release-life-cycle documentation</a>.<br
                /><br />
              items:
                $ref: '#/components/schemas/SubstituteLineItem'
              type: array
              x-badges:
                - color: orange
                  label: BETA
            stockEmptied:
              example: true
              type: boolean
            pickJobLineItemRef:
              example: '12345'
              type: string
              description: used for line items in pick runs to be split up correctly again
            partialStockLocations:
              description: >-
                Indicates where the items to pick could be found and from where
                the picking should be started.
              items:
                $ref: '#/components/schemas/PickJobLineItemPartialStockLocation'
            scannedCodes:
              items:
                $ref: '#/components/schemas/PickLineItemScannedCode'
              type: array
              minimum: 0
            scanningRule:
              deprecated: true
              description: >-
                This part of the API is deprecated. For details please check the
                <a
                href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
                target="_blank">api-release-life-cycle documentation</a>.<br
                /><br />Deprecated: Use scanningRules instead. This value
                indicates which scanning rule should be applied for this pick
                line. Only generated on demand on separate call, no persistence.
              $ref: '#/components/schemas/ScanningRuleConfiguration'
            scanningRules:
              properties:
                scanningMode:
                  $ref: '#/components/schemas/PickingScanningConfigurationEnum'
                scanningType:
                  items:
                    $ref: '#/components/schemas/ScanningRuleValue'
                  type: array
            shortPickReason:
              $ref: '#/components/schemas/PickLineShortPickReason'
            recordableAttributes:
              items:
                $ref: '#/components/schemas/RecordableAttribute'
              type: array
              nullable: true
            originId:
              nullable: true
              type: string
              description: >-
                The id of the line item this line item was originated from,
                before any split has happened. This can be used to restore the
                ‘pre-split’ status.
              example: df671041-10dd-4600-a2ff-e9ffe2556bba
          required:
            - id
            - picked
            - status
          type: object
      title: PickLineItem
      description: PickLineItem
    ExpectedPickLineItem:
      allOf:
        - $ref: '#/components/schemas/ExpectedPickLineItemForCreation'
        - properties:
            id:
              description: >-
                The id of this lineItem. It is generated during creation
                automatically and suits as the primary identifier of the
                described entity.
              example: climk4dcQFiPdA5ULuhS
              type: string
          required:
            - id
          type: object
      title: ExpectedPickLineItem
      description: ExpectedPickLineItem
    PickLineShortPickReason:
      additionalProperties: false
      properties:
        reason:
          description: translated reasonLocalized according to the given locale
          type: string
        reasonLocalized:
          description: Localized reason
          example: '{ en_US: ''SomeName'' }'
          $ref: '#/components/schemas/LocaleString'
      required:
        - reasonLocalized
      title: PickLineShortPickReason
      description: PickLineShortPickReason
    PickingScanningConfigurationEnum:
      example: MUST_SCAN_FIRST
      description: Way in which the scanning of articles during picking is enforced
      enum:
        - MUST_SCAN_FIRST
        - MUST_SCAN_EACH
        - SCAN_NOT_REQUIRED
      type: string
      title: PickingScanningConfigurationEnum
    PickLineItemStatus:
      description: >-
        A pickjob line item initially has the status OPEN and picking can start.
        When a line item is opened within the picking app, the item changes its
        status to IN_PROGRESS. When the commissioning is finished the state is
        CLOSED
      enum:
        - OPEN
        - IN_PROGRESS
        - CLOSED
      type: string
      xml:
        name: PickLineItemStatus
      title: PickLineItemStatus
    PickLineItemScannedCode:
      properties:
        code:
          description: scannable code i.e. barcode
          example: 1245678
          type: string
        quantity:
          description: scanned quantity
          example: 7
          format: int64
          minimum: 0
          type: integer
      required:
        - code
        - quantity
      type: object
      title: PickLineItemScannedCode
      description: PickLineItemScannedCode
    OfferedStickersByTag:
      additionalProperties: false
      properties:
        tagRef:
          type: string
        matchingValues:
          type: array
          minItems: 1
          items:
            type: string
        stickers:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/Sticker'
      required:
        - tagRef
        - matchingValues
        - stickers
      type: object
      title: OfferedStickersByTag
      description: OfferedStickersByTag
    Sticker:
      additionalProperties: false
      properties:
        key:
          type: string
          description: unique identifier
          example: LGMl2DuvPnfPoSHhYFOm
        priority:
          description: priority of the given sticker
          example: 100
          format: int64
          maximum: 10000
          minimum: 1
          type: integer
        nameLocalized:
          description: >-
            Dictionary of possible translations, min 1 entry, max 14 characters
            per description
          example: '{ en_US: ''SomeName'' }'
          $ref: '#/components/schemas/LocaleString'
        name:
          description: Translated display name
          type: string
          example: SomeName
        color:
          type: string
          description: optional color coding for the sticker
          example: '#19b6b5'
      required:
        - key
        - nameLocalized
        - priority
      title: Sticker
      description: Sticker
    PackJobTagConfiguration:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
        - $ref: '#/components/schemas/TagConfiguration'
        - type: object
          properties:
            stickerConfiguration:
              $ref: '#/components/schemas/StickerConfiguration'
            lineItemStickerConfiguration:
              $ref: '#/components/schemas/StickerConfiguration'
            packJobCreationPerTag:
              type: array
              description: >-
                All entries with a match in their matchingValues will be
                combined when determining what documents belong to an entity
              items:
                $ref: '#/components/schemas/PackJobCreationPerTag'
          required:
            - packJobCreationPerTag
      title: PackJobTagConfiguration
      description: PackJobTagConfiguration
    HandoverJobTagConfiguration:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
        - $ref: '#/components/schemas/TagConfiguration'
      properties:
        stickerConfiguration:
          $ref: '#/components/schemas/StickerConfiguration'
      title: HandoverJobTagConfiguration
      description: HandoverJobTagConfiguration
    OrderTagConfiguration:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
        - $ref: '#/components/schemas/TagConfiguration'
      properties:
        stickerConfiguration:
          $ref: '#/components/schemas/StickerConfiguration'
      title: OrderTagConfiguration
      description: OrderTagConfiguration
    ParcelTagConfiguration:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        alternativeReturnAddressConfiguration:
          $ref: '#/components/schemas/AlternativeReturnAddressConfiguration'
      required:
        - alternativeReturnAddressConfiguration
      additionalProperties: false
      title: ParcelTagConfiguration
      description: ParcelTagConfiguration
    ParcelTagConfigurationForUpsert:
      properties:
        version:
          type: number
          example: 0
        alternativeReturnAddressConfiguration:
          $ref: '#/components/schemas/AlternativeReturnAddressConfiguration'
      required:
        - alternativeReturnAddressConfiguration
      additionalProperties: false
      title: ParcelTagConfigurationForUpsert
      description: ParcelTagConfigurationForUpsert
    AlternativeReturnAddressConfiguration:
      additionalProperties: false
      properties:
        alternativeReturnAddressPerTag:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/AlternativeReturnAddressPerTag'
      required:
        - alternativeReturnAddressPerTag
      title: AlternativeReturnAddressConfiguration
      description: AlternativeReturnAddressConfiguration
    AlternativeReturnAddressPerTag:
      properties:
        tagRef:
          type: string
          description: needs to be an existing tag id
        matchingValues:
          type: array
          minItems: 1
          items:
            type: string
        alternativeReturnAddress:
          $ref: '#/components/schemas/FacilityAddress'
      required:
        - tagRef
        - matchingValues
        - alternativeReturnAddress
      additionalProperties: false
      title: AlternativeReturnAddressPerTag
      description: AlternativeReturnAddressPerTag
    PackJobCreationPerTag:
      properties:
        tagRef:
          type: string
        matchingValues:
          type: array
          items:
            type: string
            minItems: 1
        packJobCreationDisabled:
          type: boolean
      required:
        - packJobCreationDisabled
        - matchingValues
        - tagRef
      type: object
      title: PackJobCreationPerTag
      description: PackJobCreationPerTag
    NeedsPacking:
      properties:
        needsPacking:
          type: boolean
      required:
        - needsPacking
      type: object
      title: NeedsPacking
      description: NeedsPacking
    OfferedDocumentPerTag:
      properties:
        tagRef:
          type: string
        matchingValues:
          type: array
          items:
            type: string
            minItems: 1
        offeredDocuments:
          type: array
          items:
            $ref: '#/components/schemas/OfferedDocument'
      required:
        - offeredDocuments
        - matchingValues
        - tagRef
      type: object
      title: OfferedDocumentPerTag
      description: OfferedDocumentPerTag
    OfferedDocument:
      type: object
      properties:
        documentCategory:
          $ref: '#/components/schemas/DocumentCategory'
      required:
        - documentCategory
      title: OfferedDocument
      description: OfferedDocument
    DpdChCarrierCredentials:
      title: DpdChCarrierCredentials
      description: DPD CH Carrier Credentials
      allOf:
        - $ref: '#/components/schemas/AbstractCarrierCredentials'
        - properties:
            delisId:
              description: Delis ID to create a DPD CH auth token
              type: string
            password:
              description: Password to create a DPD CH auth token
              type: string
          required:
            - delisId
            - password
          type: object
      xml:
        name: DpdChCarrierCredentials
    AngelCarrierCredentials:
      title: AngelCarrierCredentials
      description: Angel Carrier Credentials
      allOf:
        - $ref: '#/components/schemas/AbstractCarrierCredentials'
        - required:
            - username
            - password
          type: object
          properties:
            username:
              type: string
              description: Angel username
            password:
              type: string
              description: angel password
            authToken:
              type: string
              description: X-Auth-Token for callbacks from Angel
      xml:
        name: AngelCarrierCredentials
    GLSCarrierCredentials:
      title: GLSCarrierCredentials
      description: GLS Carrier Credentials
      allOf:
        - $ref: '#/components/schemas/AbstractCarrierCredentials'
        - required:
            - username
            - password
            - trackAndTraceUsername
            - trackAndTracePassword
          type: object
          properties:
            username:
              type: string
              description: GLS username
            password:
              type: string
              description: GLS password
            trackAndTraceUsername:
              type: string
              description: GLS Track And Trace username
            trackAndTracePassword:
              type: string
              description: GLS Track And Trace password
      xml:
        name: GLSCarrierCredentials
    PostNLCarrierCredentials:
      title: PostNLCarrierCredentials
      description: Post NL Carrier Credentials
      allOf:
        - $ref: '#/components/schemas/AbstractCarrierCredentials'
        - required:
            - apiKey
          type: object
          properties:
            apiKey:
              type: string
              description: PostNL API Key
      xml:
        name: PostNLCarrierCredentials
    Editor:
      properties:
        userId:
          description: ID of the user who edits the pickjob
          type: string
        username:
          description: username of the user who edits the pickjob
          type: string
      required:
        - username
      type: object
      title: Editor
      description: Editor
    AssignedUser:
      properties:
        userId:
          description: ID of the user who is assigned
          type: string
        username:
          description: username of the user who is assigned
          type: string
      required:
        - username
        - userId
      type: object
      title: AssignedUser
      description: AssignedUser
    AssignedUserForCreationByName:
      title: AssignedUserForCreationByName
      description: Create a assigned user by giving a valid name
      properties:
        username:
          description: username of the user should be assigned
          type: string
      required:
        - username
      type: object
    AssignedUserForCreationById:
      title: AssignedUserForCreationById
      description: Create a assigned user by giving a valid id
      properties:
        userId:
          description: userId of the user should be assigned
          type: string
      required:
        - userId
      type: object
    Entity:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        id:
          description: The id of the entity.
          type: string
      required:
        - id
      type: object
      title: Entity
      description: Entity
    ApiError:
      items:
        $ref: '#/components/schemas/ErrorInner'
      type: array
      xml:
        name: ApiError
      title: ApiError
      description: ApiError
    ErrorInner:
      properties:
        description:
          example: Missing attributes were name, address, items
          type: string
        requestVersion:
          description: The version provided within an invalid request.
          example: 41
          format: int64
          type: integer
        summary:
          example: One or more mandatory attributes were not provided.
          type: string
        version:
          example: 42
          format: int64
          type: integer
      required:
        - summary
      type: object
      title: ErrorInner
      description: ErrorInner
    FacilityType:
      default: MANAGED_FACILITY
      enum:
        - MANAGED_FACILITY
        - SUPPLIER
      type: string
      xml:
        name: FacilityType
      title: FacilityType
      description: FacilityType
    FacilityForCreation:
      type: object
      properties:
        name:
          example: Hamburg NW2
          type: string
        status:
          $ref: '#/components/schemas/FacilityStatus'
        tenantFacilityId:
          description: The id of the facility in the tenants own system
          example: K12345
          type: string
        tags:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/TagReference'
        customAttributes:
          description: >-
            Attributes that can be added to the facility. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the informations carried here.
          type: object
        operativeCosts:
          type: array
          items:
            $ref: '#/components/schemas/FacilityOperativeCostForCreation'
          maxItems: 1
        type:
          default: MANAGED_FACILITY
          $ref: '#/components/schemas/FacilityType'
      xml:
        name: FacilityForCreation
      required:
        - name
      title: FacilityForCreation
      description: FacilityForCreation
    FacilityOperativeCost:
      properties:
        value:
          type: integer
          example: 25000
          description: >-
            Value of operational cost of the facility. Value is configured in
            the smallest subunit, e.g. cents.
          minimum: 0
        currency:
          description: The currency of the price as an ISO 4217 code.
          example: EUR
          nullable: true
          allOf:
            - $ref: '#/components/schemas/CurrencyCode'
        decimalPlaces:
          type: integer
          description: Number of decimal places for the given currency
          example: 2
          minimum: 0
      required:
        - value
        - currency
        - decimalPlaces
      type: object
      title: FacilityOperativeCost
      description: FacilityOperativeCost
    FacilityOperativeCostForCreation:
      properties:
        value:
          type: integer
          example: 25000
          description: >-
            Value of operational cost of the facility. Value is configured in
            the smallest subunit, e.g. cents.
          minimum: 0
        currency:
          description: The currency of the price as an ISO 4217 code.
          example: EUR
          nullable: true
          allOf:
            - $ref: '#/components/schemas/CurrencyCode'
        decimalPlaces:
          type: integer
          description: >-
            Number of decimal places for the given currency. We be defaulted
            according to the currency if missing.
          example: 2
          minimum: 0
      required:
        - value
        - currency
      type: object
      title: FacilityOperativeCostForCreation
      description: FacilityOperativeCostForCreation
    Facility:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
        - $ref: '#/components/schemas/FacilityForCreation'
      properties:
        id:
          description: >-
            The id of this facility. It is generated during creation
            automatically and suits as the primary identifier of the described
            entity.
          example: Esb20gpHBL94X5NdMp3C
          type: string
        operativeCosts:
          type: array
          items:
            $ref: '#/components/schemas/FacilityOperativeCost'
          maxItems: 1
      required:
        - id
        - type
        - status
      type: object
      xml:
        name: Facility
      title: Facility
      description: Facility
    FacilityGroup:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
        - $ref: '#/components/schemas/FacilityGroupForCreation'
      properties:
        id:
          description: >-
            The id of this facility group. It is generated during creation
            automatically and suits as the primary identifier of the described
            entity.
          example: Esb20gpHBL94X5NdMp3C
          type: string
        name:
          description: The name of this facility group.
          type: string
      required:
        - id
      type: object
      additionalProperties: false
      xml:
        name: FacilityGroup
      title: FacilityGroup
      description: FacilityGroup
    FacilityGroups:
      properties:
        facilityGroups:
          items:
            $ref: '#/components/schemas/FacilityGroup'
          type: array
        total:
          description: Total number of found entities for this query
          example: 42
          type: integer
      type: object
      title: FacilityGroups
      description: FacilityGroups
    FacilityGroupForUpdate:
      type: object
      additionalProperties: false
      properties:
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
        tenantFacilityGroupId:
          description: The id of the facility group in the tenants own system
          example: K12345
          type: string
        facilityRefs:
          type: array
          items:
            type: string
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        customAttributes:
          description: >-
            Attributes that can be added to the facility group. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the information carried here.
          type: object
      required:
        - version
      xml:
        name: FacilityGroupForUpdate
      title: FacilityGroupForUpdate
      description: FacilityGroupForUpdate
    FacilityGroupForCreation:
      type: object
      additionalProperties: false
      properties:
        tenantFacilityGroupId:
          description: The id of the facility group in the tenants own system
          example: K12345
          type: string
        facilityRefs:
          type: array
          maxItems: 500
          items:
            type: string
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        customAttributes:
          description: >-
            Attributes that can be added to the facility group. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the information carried here.
          type: object
      xml:
        name: FacilityGroupForCreation
      required:
        - tenantFacilityGroupId
        - facilityRefs
        - nameLocalized
      title: FacilityGroupForCreation
      description: FacilityGroupForCreation
    ManagedFacilityForCreation:
      allOf:
        - $ref: '#/components/schemas/FacilityForCreation'
      properties:
        address:
          $ref: '#/components/schemas/FacilityAddressForCreation'
        closingDays:
          description: >-
            Days of the year where the facility is closed and doesn't allows
            picking
          items:
            $ref: '#/components/schemas/ClosingDay'
          type: array
        contact:
          $ref: '#/components/schemas/FacilityContact'
        fulfillmentProcessBuffer:
          default: 240
          description: Duration in minutes until an order is processed
          example: '240'
          minimum: 0
          type: integer
        locationType:
          $ref: '#/components/schemas/FacilityLocationType'
        capacityPlanningTimeframe:
          description: >-
            The range in days per facility which defines how many days in the
            future the capacity of the facility can be planned
          type: integer
          minimum: 1
        pickingTimes:
          $ref: '#/components/schemas/PickingTimes'
          description: >-
            Time ranges defining the picking times per weekday. No overlapping
            ranges are allowed
        pickingMethods:
          description: Picking Methods supported by this facility.
          items:
            $ref: '#/components/schemas/PickingMethodEnum'
          type: array
        scanningRule:
          $ref: '#/components/schemas/ScanningRuleConfiguration'
        services:
          items:
            $ref: '#/components/schemas/FacilityService'
          type: array
        capacityEnabled:
          type: boolean
          default: false
          description: >-
            Indicates that configured capacity limits for picking times are
            considered
      required:
        - name
        - address
      type: object
      xml:
        name: ManagedFacilityForCreation
      title: ManagedFacilityForCreation
      description: ManagedFacilityForCreation
    ManagedFacilityForReplacement:
      additionalProperties: false
      properties:
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
        name:
          example: Hamburg NW2
          type: string
        status:
          $ref: '#/components/schemas/FacilityStatus'
        tenantFacilityId:
          description: The id of the facility in the tenants own system
          example: K12345
          type: string
        tags:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/TagReference'
        customAttributes:
          description: >-
            Attributes that can be added to the facility. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the informations carried here.
          type: object
        type:
          $ref: '#/components/schemas/FacilityType'
        address:
          $ref: '#/components/schemas/FacilityAddressForCreation'
        closingDays:
          description: >-
            Days of the year where the facility is closed and doesn't allows
            picking
          items:
            $ref: '#/components/schemas/ClosingDay'
          type: array
        contact:
          $ref: '#/components/schemas/FacilityContact'
        fulfillmentProcessBuffer:
          default: 240
          description: Duration in minutes until an order is processed
          example: '240'
          minimum: 0
          type: integer
        locationType:
          $ref: '#/components/schemas/FacilityLocationType'
        capacityPlanningTimeframe:
          description: >-
            The range in days per facility which defines how many days in the
            future the capacity of the facility can be planned
          type: integer
          minimum: 1
        pickingTimes:
          $ref: '#/components/schemas/PickingTimes'
        pickingMethods:
          description: Picking Methods supported by this facility.
          items:
            $ref: '#/components/schemas/PickingMethodEnum'
          type: array
        scanningRule:
          $ref: '#/components/schemas/ScanningRuleConfiguration'
        services:
          items:
            $ref: '#/components/schemas/FacilityService'
          type: array
        capacityEnabled:
          type: boolean
          default: false
          description: >-
            Indicates that configured capacity limits for picking times are
            considered
        configs:
          items:
            $ref: '#/components/schemas/LinkedConfiguration'
          type: array
      discriminator:
        propertyName: type
      required:
        - version
        - type
        - status
        - name
        - address
        - locationType
        - fulfillmentProcessBuffer
        - capacityEnabled
      type: object
      xml:
        name: ManagedFacilityForReplacement
      title: ManagedFacilityForReplacement
      description: ManagedFacilityForReplacement
    ManagedFacility:
      allOf:
        - $ref: '#/components/schemas/Facility'
        - $ref: '#/components/schemas/ManagedFacilityForCreation'
      properties:
        address:
          $ref: '#/components/schemas/FacilityAddress'
        configs:
          items:
            $ref: '#/components/schemas/LinkedConfiguration'
          type: array
      required:
        - status
        - address
        - name
      type: object
      xml:
        name: ManagedFacility
      title: ManagedFacility
      description: ManagedFacility
    SupplierForCreation:
      allOf:
        - $ref: '#/components/schemas/FacilityForCreation'
      properties:
        address:
          $ref: '#/components/schemas/FacilityAddressForCreation'
      type: object
      xml:
        name: SupplierForCreation
      title: SupplierForCreation
      description: SupplierForCreation
    SupplierForReplacement:
      additionalProperties: false
      type: object
      properties:
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
        name:
          example: Hamburg NW2
          type: string
        status:
          $ref: '#/components/schemas/FacilityStatus'
        address:
          $ref: '#/components/schemas/FacilityAddressForCreation'
        tenantFacilityId:
          description: The id of the facility in the tenants own system
          example: K12345
          type: string
        tags:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/TagReference'
        customAttributes:
          description: >-
            Attributes that can be added to the facility. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the informations carried here.
          type: object
        type:
          $ref: '#/components/schemas/FacilityType'
      discriminator:
        propertyName: type
      required:
        - version
        - name
        - status
        - type
      xml:
        name: SupplierForReplacement
      title: SupplierForReplacement
      description: SupplierForReplacement
    Supplier:
      allOf:
        - $ref: '#/components/schemas/Facility'
        - $ref: '#/components/schemas/SupplierForCreation'
      properties:
        address:
          $ref: '#/components/schemas/FacilityAddress'
      type: object
      xml:
        name: Supplier
      title: Supplier
      description: Supplier
    FacilityAddress:
      allOf:
        - $ref: '#/components/schemas/FacilityAddressForCreation'
        - properties:
            resolvedTimeZone:
              $ref: '#/components/schemas/TimeZone'
          type: object
      type: object
      title: FacilityAddress
      description: FacilityAddress
    FacilityAddressForCreation:
      allOf:
        - $ref: '#/components/schemas/Address'
        - properties:
            companyName:
              example: Speedy Boxales Ltd.
              type: string
            emailAddresses:
              items:
                properties:
                  recipient:
                    description: >-
                      Human readable information who is the recipient for emails
                      sent to this address.
                    example: >-
                      'Mailinglist reaching all the employees', 'Marc Fulton,
                      Manager', etc.
                    type: string
                  value:
                    type: string
                required:
                  - value
                type: object
              type: array
            resolvedCoordinates:
              $ref: '#/components/schemas/Coordinates'
          required:
            - companyName
          type: object
      type: object
      title: FacilityAddressForCreation
      description: FacilityAddressForCreation
    FacilityContact:
      properties:
        customAttributes:
          description: >-
            Attributes that can be added to the contact. These attributes cannot
            be used within fulfillment processes, but it could be useful to have
            the informations carried here.
          type: object
        firstName:
          type: string
        lastName:
          type: string
        roleDescription:
          example: Manager, Supervisor, Teamleader, etc.
          type: string
      required:
        - firstName
        - lastName
      type: object
      xml:
        name: FacilityContact
      title: FacilityContact
      description: FacilityContact
    PostalCodeValidation:
      properties:
        country:
          description: Country in Format [A-Z]{2}
          example: DE
          type: string
        postalCode:
          description: Postal code for validation
          example: '50667'
          type: string
      required:
        - country
        - postalCode
      type: object
      xml:
        name: PostalCodeValidation
      title: PostalCodeValidation
      description: PostalCodeValidation
    FacilityService:
      additionalProperties: false
      properties:
        type:
          $ref: '#/components/schemas/FacilityServiceType'
      required:
        - type
      type: object
      xml:
        name: FacilityService
      title: FacilityService
      description: FacilityService
    FacilityLocationType:
      default: STORE
      enum:
        - STORE
        - WAREHOUSE
        - EXTERNAL
      type: string
      xml:
        name: FacilityLocationType
      title: FacilityLocationType
      description: FacilityLocationType
    DeliveryTarget:
      type: string
      description: The destination for a delivery
      enum:
        - SHIP_TO_STORE
        - SHIP_TO_CUSTOMER
      title: DeliveryTarget
    FacilityServiceType:
      type: string
      description: The description of the service this facility offers.
      enum:
        - SHIP_FROM_STORE
        - PICKUP
      title: FacilityServiceType
    FacilityPatchActions:
      description: >-
        This part of the API is deprecated. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Deprecated; works only on managed facilities. Prefer to use
        ManagedFacilityForModification / SupplierForModification for full
        compatibility.
      properties:
        actions:
          items:
            $ref: '#/components/schemas/ModifyFacilityAction'
          minItems: 1
          type: array
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
        - actions
      type: object
      xml:
        name: FacilityPatchActions
      title: FacilityPatchActions
    FacilityStatus:
      description: >-
        The state of the facility. ONLINE means that this facility can process
        new orders and pickjobs, SUSPENDED means it cannot get new orders but is
        able to fulfill the current workload and OFFLINE means that it cannot
        fulfill any new or existing orders. Processes already running might be
        rescheduled to another facility depending on the preferences.
      enum:
        - ONLINE
        - SUSPENDED
        - OFFLINE
      type: string
      title: FacilityStatus
    FacilityStockConfiguration:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
        - properties:
            id:
              type: string
            listingReactivationAfter:
              properties:
                active:
                  default: true
                  description: The disabling of listings is enabled or disabled.
                  type: boolean
                value:
                  default: 24
                  description: >-
                    Time in hours that has to pass for a deactivated listing
                    (e.g. due to manual deactivation or as a result of a
                    shortpick ) to be become active again.
                  type: number
              type: object
            retainedOfflineStock:
              deprecated: true
              description: >-
                This part of the API is deprecated. For details please check the
                <a
                href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
                target="_blank">api-release-life-cycle documentation</a>.<br
                /><br />Concept depreated. Use safety stock instead.
              properties:
                active:
                  description: The retained Offline Stock is enabled or disabled.
                  type: boolean
                value:
                  default: 0.2
                  description: >-
                    The overall percentage of stock that should be reserved to
                    offline clients.
                  example: 0.15
                  maximum: 1
                  minimum: 0.01
                  type: number
              type: object
            shortpick:
              properties:
                active:
                  default: true
                  description: >-
                    Inventory adjustment in the case of insufficient order
                    picking
                  type: boolean
              required:
                - active
              type: object
          required:
            - retainedOfflineStock
            - listingReactivationAfter
            - shortpick
            - id
          type: object
      title: FacilityStockConfiguration
      description: FacilityStockConfiguration
    Feature:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        name:
          type: string
        status:
          $ref: '#/components/schemas/FeatureStatus'
      required:
        - name
        - status
      type: object
      title: Feature
      description: Feature
    FeaturePatchActions:
      properties:
        actions:
          items:
            $ref: '#/components/schemas/ModifyFeatureAction'
          minItems: 1
          type: array
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
        - actions
      type: object
      xml:
        name: FeaturePatchActions
      title: FeaturePatchActions
      description: FeaturePatchActions
    FeatureStatus:
      enum:
        - enabled
        - inactive
        - disabled
      type: string
      title: FeatureStatus
      description: FeatureStatus
    NamedFile:
      additionalProperties: false
      properties:
        content:
          description: File content base64 encoded
          example: >-
            JVBERi0xLjEKJcKlwrHDqwoKMSAwIG9iagogIDw8IC9UeXBlIC9DYXRhbG9nCiAgICAgL1BhZ2VzIDIgMCBSCiAgPj4KZW5kb2JqCgoyIDAgb2JqCiAgPDwgL1R5cGUgL1BhZ2VzCiAgICAgL0tpZHMgWzMgMCBSXQogICAgIC9Db3VudCAxCiAgICAgL01lZGlhQm94IFswIDAgMzAwIDE0NF0KICA+PgplbmRvYmoKCjMgMCBvYmoKICA8PCAgL1R5cGUgL1BhZ2UKICAgICAgL1BhcmVudCAyIDAgUgogICAgICAvUmVzb3VyY2VzCiAgICAgICA8PCAvRm9udAogICAgICAgICAgIDw8IC9GMQogICAgICAgICAgICAgICA8PCAvVHlwZSAvRm9udAogICAgICAgICAgICAgICAgICAvU3VidHlwZSAvVHlwZTEKICAgICAgICAgICAgICAgICAgL0Jhc2VGb250IC9UaW1lcy1Sb21hbgogICAgICAgICAgICAgICA+PgogICAgICAgICAgID4+CiAgICAgICA+PgogICAgICAvQ29udGVudHMgNCAwIFIKICA+PgplbmRvYmoKCjQgMCBvYmoKICA8PCAvTGVuZ3RoIDU1ID4+CnN0cmVhbQogIEJUCiAgICAvRjEgMTggVGYKICAgIDAgMCBUZAogICAgKEhlbGxvIFdvcmxkKSBUagogIEVUCmVuZHN0cmVhbQplbmRvYmoKCnhyZWYKMCA1CjAwMDAwMDAwMDAgNjU1MzUgZiAKMDAwMDAwMDAxOCAwMDAwMCBuIAowMDAwMDAwMDc3IDAwMDAwIG4gCjAwMDAwMDAxNzggMDAwMDAgbiAKMDAwMDAwMDQ1NyAwMDAwMCBuIAp0cmFpbGVyCiAgPDwgIC9Sb290IDEgMCBSCiAgICAgIC9TaXplIDUKICA+PgpzdGFydHhyZWYKNTY1CiUlRU9GCg==
          type: string
        name:
          description: File name with extension
          example: example.pdf
          type: string
      required:
        - name
        - content
      type: object
      xml:
        name: NamedFile
      title: NamedFile
      description: NamedFile
    FulfillmentProcessBufferConfiguration:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        minutes:
          default: 240
          description: Duration in minutes until an order is processed
          example: '240'
          minimum: 0
          type: integer
        id:
          type: string
      required:
        - minutes
      type: object
      title: FulfillmentProcessBufferConfiguration
      description: FulfillmentProcessBufferConfiguration
    GdprConfiguration:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        retentionTime:
          description: Number of days after that anonymization is triggered.
          example: 30
          minimum: 1
          type: number
        deletionTimeAfterRetention:
          description: Number of days since anonymization until deletion is triggered
          example: 30
          minimum: 1
          type: number
        version:
          example: 42
          format: int64
          type: integer
        actorAnonymization:
          type: boolean
          default: true
          example: true
          description: >-
            If true, the actor information will be stored anonymized for
            auditing. Might take up to 1 hour to be take into effect
        id:
          type: string
      required:
        - retentionTime
        - version
      type: object
      title: GdprConfiguration
      description: GdprConfiguration
    HandoverLineItem:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/HandoverLineItemForCreation'
      properties:
        id:
          type: string
        recordableAttributes:
          items:
            $ref: '#/components/schemas/RecordableAttribute'
          type: array
        originId:
          nullable: true
          type: string
          description: >-
            The id of the line item this line item was originated from, before
            any split has happened. This can be used to restore the ‘pre-split’
            status.
          example: df671041-10dd-4600-a2ff-e9ffe2556bba
      required:
        - id
      title: HandoverLineItem
      description: HandoverLineItem
    HandoverLineItemForCreation:
      properties:
        refused:
          type: array
          items:
            $ref: '#/components/schemas/RefusedItem'
        article:
          $ref: '#/components/schemas/HandoverLineItemArticle'
        quantity:
          description: quantity of the specific item that has been provided for handover
          example: 21
          format: int64
          minimum: 1
          type: integer
        handedOverQuantity:
          description: quantity of the specific item that has been handed over
          example: 20
          format: int64
          minimum: 0
          type: integer
        substituteLineItems:
          description: >-
            This part of the API is in Beta status. For details please check the
            <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />
          items:
            $ref: '#/components/schemas/HandoverSubstituteLineItem'
          type: array
          x-badges:
            - color: orange
              label: BETA
        tags:
          items:
            $ref: '#/components/schemas/TagReference'
          type: array
        stickers:
          items:
            $ref: '#/components/schemas/Sticker'
          type: array
        customAttributes:
          description: >-
            Attributes that can be added to the handover line. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the information carried here.
          type: object
        recordableAttributes:
          items:
            $ref: '#/components/schemas/RecordableAttributeForCreation'
          type: array
      required:
        - quantity
        - article
        - handedOverQuantity
      type: object
      title: HandoverLineItemForCreation
      description: HandoverLineItemForCreation
    HandoverLineItemArticle:
      allOf:
        - $ref: '#/components/schemas/AbstractArticle'
        - properties:
            attributes:
              items:
                $ref: '#/components/schemas/ArticleAttributeItem'
              type: array
              maxItems: 40
          type: object
      xml:
        name: HandoverLineItemArticle
      title: HandoverLineItemArticle
      description: HandoverLineItemArticle
    HandoverSubstituteLineItem:
      allOf:
        - $ref: '#/components/schemas/SubstituteLineItem'
        - properties:
            quantity:
              description: >-
                quantity of the specific item to substitute the original line
                item that has been provided for handover
              example: 21
              format: int64
              minimum: 1
              type: integer
            handedOverQuantity:
              description: >-
                quantity of the specific item to substitute the original line
                item that has been handed over
              example: 20
              format: int64
              minimum: 0
              type: integer
            id:
              type: string
            refused:
              type: array
              items:
                $ref: '#/components/schemas/RefusedItem'
      required:
        - quantity
        - article
      title: HandoverSubstituteLineItem
      description: HandoverSubstituteLineItem
    HandoverJobParcelInfo:
      allOf:
        - $ref: '#/components/schemas/HandoverJobParcelInfoForCreation'
        - properties:
            carrierKey:
              type: string
              example: DHL
              description: the key of the carrier
      type: object
      title: HandoverJobParcelInfo
      description: HandoverJobParcelInfo
    Handoverjob:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
        - $ref: '#/components/schemas/HandoverjobForCreation'
        - properties:
            handoverJobLineItems:
              items:
                $ref: '#/components/schemas/HandoverLineItem'
            anonymized:
              description: Indicates if gdpr related data was anonymized
              example: false
              type: boolean
            id:
              description: >-
                The id of this handoverjob. It is generated during creation
                automatically and suits as the primary identifier of the
                described entity.
              example: 95EWrieX09OmeriXIUbb
              type: string
            documents:
              type: array
              items:
                $ref: '#/components/schemas/PrintableDocument'
            stickers:
              type: array
              items:
                $ref: '#/components/schemas/Sticker'
            documentsRef:
              description: Reference to the documents collection from this entity
              type: string
            carrierKey:
              description: >-
                This part of the API is deprecated. For details please check the
                <a
                href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
                target="_blank">api-release-life-cycle documentation</a>.<br
                /><br />@deprecated This field is deprecated since 28 November
                2024. Use nested object handoverJobParcelInfo instead.
              type: string
            handoverJobParcelInfo:
              $ref: '#/components/schemas/HandoverJobParcelInfo'
            assignedUsers:
              type: array
              items:
                $ref: '#/components/schemas/AssignedUser'
              description: Assigned users for this entity
      required:
        - id
        - status
      type: object
      title: Handoverjob
      description: Handoverjob
    HandoverJobParcelInfoForCreation:
      additionalProperties: false
      properties:
        parcelRef:
          type: string
          example: 9ddb3c80-30ec-42c3-a750-9612296402ca
          description: the reference to the related parcel
        carrierTrackingNumber:
          example: '84168117830018'
          type: string
          description: the tracking number of the parcel
        carrierLogoUrl:
          description: The URL to the carrier logo
          type: string
          example: https://www.example.com/carrierlogo.png
        carrierRef:
          type: string
          example: 9ddb3c80-30ec-42c3-a750-9612296402ca
          description: the reference to the related carrier
        shipmentRef:
          type: string
          example: 9ddb3c80-30ec-42c3-a750-9612296402ca
          description: the reference to the related shipment
        carrierParcelRef:
          description: The reference number of the parcel by the carrier
          example: '84168117830018'
          type: string
          minLength: 1
          maxLength: 120
      type: object
      title: HandoverJobParcelInfoForCreation
      description: HandoverJobParcelInfoForCreation
    HandoverjobForCreation:
      additionalProperties: false
      properties:
        carrierLogoUrl:
          type: string
          description: >-
            This part of the API is deprecated. For details please check the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />@deprecated This field is deprecated since 28 November 2024. Use
            nested object handoverJobParcelInfo instead.
        carrierRef:
          type: string
          description: >-
            This part of the API is deprecated. For details please check the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />@deprecated This field is deprecated since 28 November 2024. Use
            nested object handoverJobParcelInfo instead.
        carrierTrackingNumber:
          type: string
          description: >-
            This part of the API is deprecated. For details please check the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />@deprecated This field is deprecated since 28 November 2024. Use
            nested object handoverJobParcelInfo instead.
        channel:
          enum:
            - DELIVERY
            - COLLECT
          type: string
        customAttributes:
          description: >-
            Attributes that can be added to the handover job. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the informations carried here.
          type: object
        facilityRef:
          description: The id of the facility reference.
          example: Esb20gpHBL94X5NdMp3C
          type: string
        handoverJobLineItems:
          items:
            $ref: '#/components/schemas/HandoverLineItemForCreation'
          type: array
        loadUnitRefs:
          description: Reference to array of load unit Refs
          items:
            type: string
          type: array
        orderDate:
          description: The date this order was created at the supplying system.
          example: '2020-02-03T08:45:50.525Z'
          format: date-time
          type: string
        parcelRef:
          description: >-
            This part of the API is deprecated. For details please check the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />@deprecated This field is deprecated since 28 November 2024. Use
            nested object handoverJobParcelInfo instead.
          example: 2fOge2ZGW54K4TgvDTQw
          type: string
        pickJobRef:
          description: >-
            The reference to the pickjob for which the handoverjob is assigned
            to
          example: ca525716-7208-4a63-a2a6-11274eb37f67-0
          type: string
        processId:
          description: >-
            Id of the global process related to this entity. For example used
            for starting the GDPR process and others.
          type: string
        operativeProcessRef:
          type: string
        shipmentRef:
          description: >-
            This part of the API is deprecated. For details please check the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />@deprecated This field is deprecated since 28 November 2024. Use
            nested object handoverJobParcelInfo instead.
          example: Esb20gpHBL94X5NdMp3C
          type: string
        shortIdentifier:
          description: The short identifier of the shipment.
          type: string
        status:
          $ref: '#/components/schemas/HandoverjobStatus'
        targetTime:
          description: >-
            The time the handoverjob is expected to be picked up at the
            facility.
          format: date-time
          type: string
        tenantOrderId:
          description: >-
            Field can be used as a reference number in foreign systems, for
            example as a reference to the source system's identifier for this
            order.
          example: R456728546
          type: string
        paid:
          description: Indicates if the order is already paid
          example: false
          type: boolean
        tags:
          description: >-
            Tags can only be set when there is no process related with this
            handoverJob. Setting processId and tags will lead to an
            validationError.
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/TagReference'
        stickers:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/Sticker'
        cancelReason:
          $ref: '#/components/schemas/HandoverJobCancelReason'
        invoiceAddress:
          $ref: '#/components/schemas/ConsumerAddress'
        recipientAddress:
          $ref: '#/components/schemas/ConsumerAddress'
        fullIdentifier:
          type: string
          description: An information to identify the recipient
        transfers:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/OperativeTransfer'
        handoverJobParcelInfo:
          $ref: '#/components/schemas/HandoverJobParcelInfoForCreation'
        assignedUsers:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/AssignedUserForCreationByName'
              - $ref: '#/components/schemas/AssignedUserForCreationById'
          description: Assigned users for this entity
      required:
        - facilityRef
        - targetTime
        - channel
        - orderDate
      type: object
      title: HandoverjobForCreation
      description: HandoverjobForCreation
    HandoverjobPatchActions:
      properties:
        actions:
          items:
            anyOf:
              - $ref: '#/components/schemas/ModifyHandoverjobAction'
              - $ref: '#/components/schemas/CancelHandoverjobAction'
          minItems: 1
          type: array
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
        - actions
      type: object
      xml:
        name: HandoverjobPatchActions
      title: HandoverjobPatchActions
      description: HandoverjobPatchActions
    HandoverjobStatus:
      enum:
        - OPEN
        - HANDED_OVER
        - OBSOLETE
        - CANCELED
      type: string
      title: HandoverjobStatus
      description: HandoverjobStatus
    HandoverJobCancelReason:
      enum:
        - CONSUMER_NO_SHOW
        - CONSUMER_REJECTS
        - ORDER_CANCELED
      type: string
      title: HandoverJobCancelReason
      description: HandoverJobCancelReason
    HandoverConfiguration:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        availableRefusedReasons:
          items:
            $ref: '#/components/schemas/AvailableRefusedReason'
      type: object
      title: HandoverConfiguration
      description: HandoverConfiguration
    HandoverConfigurationForCreate:
      additionalProperties: false
      properties:
        version:
          type: number
        availableRefusedReasons:
          items:
            $ref: '#/components/schemas/AvailableRefuseReasonForCreation'
      required:
        - version
      type: object
      title: HandoverConfigurationForCreate
      description: HandoverConfigurationForCreate
    AvailableRefusedReason:
      additionalProperties: false
      properties:
        active:
          type: boolean
        refusedReasonLocalized:
          $ref: '#/components/schemas/LocaleString'
        refusedReason:
          description: translated refusedReason selected from refusedReasonLocalized
          example: Broken Item
          type: string
      required:
        - refusedReasonLocalized
        - active
      title: AvailableRefusedReason
      description: AvailableRefusedReason
    AvailableRefuseReasonForCreation:
      additionalProperties: false
      properties:
        active:
          type: boolean
          example: true
        refusedReasonLocalized:
          description: Localized reason
          example: '{ en_US: ''SomeName'' }'
          $ref: '#/components/schemas/LocaleString'
      required:
        - active
        - refusedReasonLocalized
      title: AvailableRefuseReasonForCreation
      description: AvailableRefuseReasonForCreation
    AvailableRefuseReasonForUpdate:
      additionalProperties: false
      properties:
        active:
          type: boolean
          example: true
        version:
          type: number
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
        refusedReasonLocalized:
          description: Localized reason
          example: '{ en_US: ''SomeName'' }'
          $ref: '#/components/schemas/LocaleString'
      required:
        - active
        - refusedReasonLocalized
        - version
      title: AvailableRefuseReasonForUpdate
      description: AvailableRefuseReasonForUpdate
    UpdateRefuseReasonParameter:
      additionalProperties: false
      properties:
        handoverConfigurationVersion:
          type: number
        availableRefuseReasonForUpdate:
          $ref: '#/components/schemas/AvailableRefuseReasonForUpdate'
      required:
        - handoverConfigurationVersion
        - availableRefuseReasonForUpdate
      title: UpdateRefuseReasonParameter
      description: UpdateRefuseReasonParameter
    DeleteRefuseReasonParameter:
      additionalProperties: false
      properties:
        handoverConfigurationVersion:
          type: number
      required:
        - handoverConfigurationVersion
      title: DeleteRefuseReasonParameter
      description: DeleteRefuseReasonParameter
    AddRefuseReasonParameter:
      additionalProperties: false
      properties:
        handoverConfigurationVersion:
          type: number
        availableRefuseReasonForCreation:
          $ref: '#/components/schemas/AvailableRefuseReasonForCreation'
      required:
        - handoverConfigurationVersion
        - availableRefuseReasonForCreation
      title: AddRefuseReasonParameter
      description: AddRefuseReasonParameter
    LinkedConfiguration:
      properties:
        ref:
          type: string
        rel:
          type: string
      type: object
      title: LinkedConfiguration
      description: LinkedConfiguration
    Listing:
      allOf:
        - $ref: '#/components/schemas/ListingForCreation'
        - $ref: '#/components/schemas/VersionedResource'
        - properties:
            stockinformation:
              deprecated: true
              description: >-
                This part of the API is deprecated. For details please check the
                <a
                href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
                target="_blank">api-release-life-cycle documentation</a>.<br
                /><br />@deprecated This field is deprecated since 11th of
                September 2023. Use /api/stocks endpoints instead.
              $ref: '#/components/schemas/StockInformation'
            facilityId:
              description: This is a reference to a facility
              example: '4711'
              type: string
            id:
              example: fsfdsf87fsd
              type: string
            status:
              enum:
                - ACTIVE
                - INACTIVE
              type: string
            partialStocks:
              type: array
              deprecated: true
              description: >-
                This part of the API is deprecated. For details please check the
                <a
                href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
                target="_blank">api-release-life-cycle documentation</a>.<br
                /><br />@deprecated This field is deprecated since 11th of
                September 2023. Use /api/stocks endpoints instead.
              items:
                $ref: '#/components/schemas/PartialStock'
            scannableCodes:
              items:
                description: Codes, that identify the article
                type: string
              type: array
          required:
            - status
            - facilityId
            - id
          type: object
      xml:
        name: Listing
      title: Listing
      description: Listing
    ListingAttributeItem:
      allOf:
        - $ref: '#/components/schemas/ArticleAttributeItem'
      properties:
        keyLocalized:
          $ref: '#/components/schemas/LocaleString'
        valueLocalized:
          $ref: '#/components/schemas/LocaleString'
      title: ListingAttributeItem
      description: ListingAttributeItem
    BrandForCreation:
      properties:
        name:
          description: The name of the brand for this listing
          type: string
          example: Adidas
      required:
        - name
      type: object
      xml:
        name: BrandForCreation
      title: BrandForCreation
      description: BrandForCreation
    Brand:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
        - $ref: '#/components/schemas/BrandForCreation'
      properties:
        id:
          example: fsfdsf87fsd
          type: string
        name:
          description: The name of the brand for this listing
          type: string
          example: Adidas
      required:
        - name
        - id
      type: object
      xml:
        name: Brand
      title: Brand
      description: Brand
    StrippedBrands:
      properties:
        total:
          description: Total number of found entities for this query
          example: 42
          type: integer
        brands:
          items:
            $ref: '#/components/schemas/Brand'
          type: array
      type: object
      title: StrippedBrands
      description: StrippedBrands
    SupportedFilterEntityTypesEnum:
      example: STICKER
      description: Entity types supported as filter entities
      enum:
        - STICKER
      type: string
      title: SupportedFilterEntityTypesEnum
    FilterEntity:
      properties:
        id:
          example: fsfdsf87fsd
          type: string
        type:
          $ref: '#/components/schemas/SupportedFilterEntityTypesEnum'
        value:
          example: stickerValue
          type: string
        valueLocalized:
          $ref: '#/components/schemas/LocaleString'
      required:
        - valueLocalized
        - id
        - type
      type: object
      xml:
        name: FilterEntity
      title: FilterEntity
      description: FilterEntity
    StrippedFilterEntities:
      properties:
        total:
          description: Total number of found filter entities for this query
          example: 42
          type: integer
        filterEntities:
          items:
            $ref: '#/components/schemas/FilterEntity'
          type: array
      type: object
      title: StrippedFilterEntities
      description: StrippedFilterEntities
    ListingLegal:
      type: object
      additionalProperties: false
      properties:
        hsCode:
          type: string
          maxLength: 50
      title: ListingLegal
      description: ListingLegal
    OutOfStockConfig:
      type: object
      additionalProperties: false
      properties:
        preorder:
          type: object
          properties:
            availabilityTimeframe:
              $ref: '#/components/schemas/AvailabilityTimeframe'
          required:
            - availabilityTimeframe
        restock:
          type: object
          properties:
            restockableInDays:
              type: integer
          required:
            - restockableInDays
      title: OutOfStockConfig
      description: OutOfStockConfig
    OutOfStockBehaviour:
      enum:
        - BACKORDER
        - PREORDER
        - RESTOCK
      description: >-
        The PREORDER and RESTOCK can be only set, when the depending
        outOfStockConfig is provided.

        Also PREORDER and RESTOCK values are in Alpha status. For details please
        check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      type: string
      title: OutOfStockBehaviour
    ListingForCreation:
      properties:
        attributes:
          items:
            $ref: '#/components/schemas/ListingAttributeItem'
          type: array
          maxItems: 40
        imageUrl:
          description: >-
            A web link to a picture of this article. Please make sure that no
            authentication is required to fetch the image!
          type: string
        price:
          example: 1200
          type: number
        stockinformation:
          $ref: '#/components/schemas/StockInformationForCreation'
          deprecated: true
          description: >-
            This part of the API is deprecated. For details please check the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />@deprecated This field is deprecated since 11th of September 2023.

            Use /api/stocks endpoints instead.
        tenantArticleId:
          description: This is a reference to an article Id
          example: '4711'
          type: string
          minLength: 1
        title:
          description: a title describing the article
          example: Adidas Superstar
          type: string
        titleLocalized:
          $ref: '#/components/schemas/LocaleString'
        partialStocks:
          type: array
          deprecated: true
          description: >-
            This part of the API is deprecated. For details please check the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />@deprecated This field is deprecated since 11th of September 2023.

            Use /api/stocks endpoints instead.
          items:
            $ref: '#/components/schemas/PartialStockForCreation'
        weight:
          type: number
          minimum: 0
        scanningRule:
          $ref: '#/components/schemas/ScanningRuleConfiguration'
        scannableCodes:
          items:
            description: Codes, that identify the article
            type: string
          type: array
        outOfStockBehaviour:
          $ref: '#/components/schemas/OutOfStockBehaviour'
        outOfStockConfig:
          $ref: '#/components/schemas/OutOfStockConfig'
          description: >-
            The outOfStockConfig is in Alpha status. For details please check
            the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />
        availabilityTimeframe:
          $ref: '#/components/schemas/AvailabilityTimeframe'
          deprecated: true
          description: >-
            @deprecated This property (for OutOfStockBehaviour.BACKORDER) is
            deprecated since 26th of February 2025.
        tags:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/TagReference'
        measurementUnitKey:
          description: Identifier for items unit of measurement.
          example: liter
          type: string
        currency:
          description: >-
            The currency of the price as an ISO 4217 code. Attention - Routing
            currently does not convert between different currencies. Don't use
            multiple currencies when using price ratings in order routing.
          example: EUR
          nullable: true
          allOf:
            - $ref: '#/components/schemas/CurrencyCode'
        stockProperties:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/StockPropertyDefinition'
        stockAvailableUntil:
          $ref: '#/components/schemas/AvailableUntilDefinition'
        legal:
          $ref: '#/components/schemas/ListingLegal'
        customAttributes:
          nullable: true
          description: >-
            Attributes that can be added to the listing. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          type: object
      required:
        - tenantArticleId
        - title
      type: object
      xml:
        name: ListingForCreation
      title: ListingForCreation
      description: ListingForCreation
    PickingStockProperty:
      title: PickingStockProperty
      description: Picking Stock Property.
      additionalProperties:
        type: string
      example:
        color: yellow
      type: object
    PickingStockPropertyPreset:
      title: PickingStockPropertyPreset
      description: Preset of Picking Stock Property.
      type: object
      properties:
        expiry:
          type: string
    StockPropertyDefinition:
      properties:
        inputType:
          $ref: '#/components/schemas/StockPropertyInputType'
        required:
          description: Indicates if this property is required.
          type: boolean
        defaultValue:
          description: >-
            This part of the API is in Alpha status. For details please check
            the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />If {{NOW}} is provided, this will be replaced with a timestamp.
          type: string
          x-badges:
            - color: red
              label: ALPHA
      required:
        - inputType
        - required
      type: object
      title: StockPropertyDefinition
      description: StockPropertyDefinition
    AvailableUntilDefinition:
      properties:
        calculationBase:
          $ref: '#/components/schemas/AvailableUntilCalculationBase'
        modifier:
          description: >-
            Moves the calculated date by the given period, defined in ISO-8601
            duration notation. Use negative values to move the date backwards.
            Example: "-P30D" places the "availableUntil" value 30 days before
            the calculated date.
          type: string
          pattern: ^-?P(?:(\d+W)|(\d+Y)?(\d+M)?(\d+D)?(?:T(\d+H)?(\d+M)?(\d+S)?)?)$
          example: '-P30D'
      required:
        - calculationBase
      title: AvailableUntilDefinition
      description: AvailableUntilDefinition
    AvailableUntilCalculationBase:
      description: >-
        The base for the calculation of the available until date. If it can't be
        resolved into a valid date (i.e. missing expiry value), an undefined
        "availableUntil" is the result
      enum:
        - EXPIRY
        - CREATION
      type: string
      xml:
        name: AvailableUntilCalculationBase
      title: AvailableUntilCalculationBase
    AvailabilityTimeframe:
      properties:
        start:
          example: '2020-02-03T08:45:50.525Z'
          format: date-time
          type: string
      type: object
      title: AvailabilityTimeframe
      description: AvailabilityTimeframe
    ListingForReplacement:
      allOf:
        - $ref: '#/components/schemas/ListingForCreation'
      properties:
        version:
          example: 42
          format: int64
          type: integer
        status:
          enum:
            - ACTIVE
            - INACTIVE
          type: string
      type: object
      xml:
        name: ListingForReplacement
      title: ListingForReplacement
      description: ListingForReplacement
    ListingPatchActions:
      properties:
        actions:
          items:
            $ref: '#/components/schemas/ModifyListingAction'
          minItems: 1
          type: array
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
        - actions
      type: object
      xml:
        name: ListingPatchActions
      title: ListingPatchActions
      description: ListingPatchActions
    ListingsForCreation:
      properties:
        listings:
          items:
            $ref: '#/components/schemas/ListingForCreation'
          minItems: 1
          type: array
      required:
        - listings
      type: object
      xml:
        name: ListingsForCreation
      title: ListingsForCreation
      description: ListingsForCreation
    ListingsForReplacement:
      properties:
        listings:
          items:
            $ref: '#/components/schemas/ListingForReplacement'
          minItems: 1
          maxItems: 500
          type: array
      required:
        - listings
      type: object
      xml:
        name: ListingsForReplacement
      title: ListingsForReplacement
      description: ListingsForReplacement
    LoadUnitDimensions:
      properties:
        heightInCm:
          description: The height of the container (in cm)
          example: 50
          type: number
        lengthInCm:
          description: The length of the container (in cm)
          example: 100
          type: number
        weightInG:
          description: The weight of the container (in g)
          example: 1700
          type: number
        widthInCm:
          description: The width of the container (in cm)
          example: 25
          type: number
      type: object
      title: LoadUnitDimensions
      description: LoadUnitDimensions
    LoadUnit:
      title: LoadUnit
      description: LoadUnit.
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
        - $ref: '#/components/schemas/LoadUnitForCreation'
      properties:
        dimensions:
          $ref: '#/components/schemas/LoadUnitDimensions'
        weightLimitInG:
          description: 'Maximal weight in gramm(gr) the loadunit can handle. '
          type: number
          minimum: 1
        description:
          type: string
        descriptionLocalized:
          $ref: '#/components/schemas/LocaleString'
        facilityRef:
          description: >-
            The id of the facility reference. The given ID has to be present in
            the system. But it is not updatable via PUT request
          example: Esb20gpHBL94X5NdMp3C
          type: string
        iconUrl:
          type: string
        id:
          type: string
        name:
          type: string
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        loadUnitLineItems:
          type: array
          items:
            $ref: '#/components/schemas/LoadUnitLineItem'
      required:
        - id
        - nameLocalized
        - version
        - facilityRef
      type: object
    LoadUnitConfiguration:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        maxCount:
          default: 20
          description: Max creatable count of load units per load unit type
          example: 20
          type: integer
      type: object
      title: LoadUnitConfiguration
      description: LoadUnitConfiguration
    LoadUnitLineItemForCreation:
      properties:
        article:
          $ref: '#/components/schemas/PickLineItemArticle'
        customAttributes:
          description: >-
            Attributes that can be added to the orderline. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the informations carried here.
          type: object
        measurementUnitKey:
          description: Identifier for items unit of measurement.
          example: liter
          type: string
        quantity:
          description: quantity of the specific article that has been ordered
          example: 21
          format: int64
          minimum: 1
          type: integer
        scannableCodes:
          items:
            description: Codes, that identify the article
            type: string
          type: array
        recordableAttributes:
          items:
            $ref: '#/components/schemas/RecordableAttributeForCreation'
          type: array
          nullable: true
      required:
        - article
      title: LoadUnitLineItemForCreation
      description: LoadUnitLineItemForCreation
    LoadUnitLineItem:
      allOf:
        - $ref: '#/components/schemas/LoadUnitLineItemForCreation'
      properties:
        id:
          type: string
        recordableAttributes:
          items:
            $ref: '#/components/schemas/RecordableAttribute'
          type: array
          nullable: true
      required:
        - id
      title: LoadUnitLineItem
      description: LoadUnitLineItem
    LoadUnitForCreation:
      properties:
        codes:
          items:
            description: List of codes
            type: string
          type: array
        loadUnitTypeRef:
          type: string
          deprecated: true
          description: >-
            This part of the API is deprecated. For details please check the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />Use operativeContainerTypeRef instead.
        loadUnitLineItems:
          type: array
          items:
            $ref: '#/components/schemas/LoadUnitLineItemForCreation'
        pickJobRefs:
          items:
            description: List of corresponding pickjob Ids
            type: string
          maxItems: 1
          minItems: 1
          type: array
        customAttributes:
          description: >-
            Attributes that can be added to the LoadUnit. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the informations carried here.
          type: object
        storageLocationRef:
          description: >-
            the reference to the storage location this load unit as been placed
            into
          type: string
        operativeContainerTypeRef:
          description: the reference to the operativeContainerType
          type: string
        stackRef:
          description: the reference to the stackRef this loadUnit is part of
          type: string
      required:
        - pickJobRefs
      type: object
      title: LoadUnitForCreation
      description: LoadUnitForCreation
    Stack:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/StackForCreation'
      properties:
        id:
          type: string
        version:
          type: integer
          format: int64
          example: 42
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
        created:
          type: string
          format: date-time
          example: '2020-02-03T08:45:51.525Z'
          description: >-
            The date this entity was created at the platform. This value is
            generated by the service.
        lastModified:
          type: string
          format: date-time
          example: '2020-02-03T09:45:51.525Z'
          description: >-
            The date this entity was modified last. This value is generated by
            the service.
      type: object
      required:
        - id
        - version
        - created
        - lastModified
        - facilityRef
        - processRef
      title: Stack
      description: Stack
    StackForCreation:
      additionalProperties: false
      properties:
        facilityRefs:
          description: Linked Facilities through reference
          type: array
          items:
            type: string
        processRefs:
          description: Linked Processes through reference
          type: array
          items:
            type: string
      type: object
      required:
        - facilityRefs
        - processRefs
      title: StackForCreation
      description: StackForCreation
    PickingLoadUnit:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
        - $ref: '#/components/schemas/PickingLoadUnitForCreation'
      properties:
        description:
          type: string
        descriptionLocalized:
          $ref: '#/components/schemas/LocaleString'
        facilityRef:
          description: >-
            The id of the facility reference. The given ID has to be present in
            the system. But it is not updatable via PUT request
          example: Esb20gpHBL94X5NdMp3C
          type: string
        iconUrl:
          type: string
        id:
          type: string
        name:
          type: string
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        loadUnitLineItems:
          type: array
          items:
            $ref: '#/components/schemas/LoadUnitLineItem'
      required:
        - id
        - nameLocalized
        - version
        - facilityRef
      type: object
      title: PickingLoadUnit
      description: PickingLoadUnit
    PickingLoadUnitForCreation:
      properties:
        codes:
          items:
            description: List of codes
            type: string
          type: array
          minItems: 1
        loadUnitTypeRef:
          type: string
        loadUnitLineItems:
          type: array
          items:
            $ref: '#/components/schemas/LoadUnitLineItemForCreation'
        customAttributes:
          description: >-
            Attributes that can be added to the PickingLoadUnit. These
            attributes cannot be used within fulfillment processes, but it could
            be useful to have the informations carried here.
          type: object
        storageLocationRef:
          description: >-
            the reference to the storage location this load unit as been placed
            into
          type: string
        operativeContainerTypeRef:
          description: the reference to the operativeContainerType
          type: string
        stackRef:
          description: the reference to the stackRef this loadUnit is part of
          type: string
      required:
        - codes
      type: object
      title: PickingLoadUnitForCreation
      description: PickingLoadUnitForCreation
    LoadUnitType:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        dimensions:
          $ref: '#/components/schemas/LoadUnitDimensions'
        weightLimitInG:
          description: 'Maximal weight in gramm(gr) the loadunit can handle. '
          type: number
          minimum: 1
        description:
          type: string
        descriptionLocalized:
          $ref: '#/components/schemas/LocaleString'
        iconUrl:
          description: ''
          type: string
        id:
          description: ''
          type: string
        name:
          type: string
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        priority:
          description: >-
            This value gives the priority in the respective loadUnitType. The
            lower the value the higher is the priority, e.g. priority 1 is
            higher than priority 10. The priority can be used to order
            loadUnityTypes.
          example: 100
          format: int64
          maximum: 10000
          minimum: 1
          type: integer
      required:
        - id
        - version
        - nameLocalized
      type: object
      title: LoadUnitType
      description: LoadUnitType
    LoadUnitTypeForCreation:
      additionalProperties: false
      properties:
        dimensions:
          $ref: '#/components/schemas/LoadUnitDimensions'
        weightLimitInG:
          description: 'Maximal weight in gramm(gr) the loadunit can handle. '
          type: number
          minimum: 1
        descriptionLocalized:
          $ref: '#/components/schemas/LocaleString'
        icon:
          $ref: '#/components/schemas/NamedFile'
          description: ''
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        priority:
          description: >-
            This value gives the priority in the respective loadUnitType. The
            lower the value the higher is the priority, e.g. priority 1 is
            higher than priority 10. The priority can be used to order
            loadUnityTypes.
          example: 100
          format: int64
          maximum: 10000
          minimum: 1
          type: integer
      required:
        - nameLocalized
      type: object
      title: LoadUnitTypeForCreation
      description: LoadUnitTypeForCreation
    LoadUnitTypePatchActions:
      properties:
        actions:
          items:
            $ref: '#/components/schemas/ModifyLoadUnitTypeAction'
          minItems: 1
          type: array
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
        - actions
      type: object
      xml:
        name: LoadUnitTypePatchActions
      title: LoadUnitTypePatchActions
      description: LoadUnitTypePatchActions
    LoadUnitTypes:
      items:
        $ref: '#/components/schemas/LoadUnitType'
      type: array
      title: LoadUnitTypes
      description: LoadUnitTypes
    LoadUnits:
      properties:
        loadUnits:
          items:
            $ref: '#/components/schemas/LoadUnit'
          type: array
        total:
          description: Total number of found entities for this query
          example: 42
          type: integer
      type: object
      title: LoadUnits
      description: LoadUnits
    LoadUnitsForCreation:
      additionalProperties: false
      properties:
        loadUnits:
          items:
            $ref: '#/components/schemas/LoadUnitForCreation'
          minItems: 1
          type: array
      required:
        - loadUnits
      type: object
      title: LoadUnitsForCreation
      description: LoadUnitsForCreation
    PackingSourceContainerForCreation:
      properties:
        descriptionLocalized:
          $ref: '#/components/schemas/LocaleString'
        facilityRef:
          description: >-
            The id of the facility reference. The given ID has to be present in
            the system. But it is not updatable.
          example: Esb20gpHBL94X5NdMp3C
          type: string
        icon:
          $ref: '#/components/schemas/NamedFile'
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        packJobRefs:
          type: array
          minItems: 1
          description: List of references to packJobs
          items:
            type: string
            example: 0857914c-d965-421e-b6cf-330501bcca58
        codes:
          items:
            description: Codes, that identify the article
            type: string
          type: array
          minItems: 1
        customAttributes:
          description: >-
            Attributes that can be added to the packing source container. These
            attributes cannot be used within fulfillment processes, but it could
            be useful to have the information carried here.
          type: object
      required:
        - packJobRefs
        - nameLocalized
        - facilityRef
      type: object
      title: PackingSourceContainerForCreation
      description: PackingSourceContainerForCreation
    PaginatedPackingSourceContainers:
      properties:
        packingSourceContainers:
          items:
            $ref: '#/components/schemas/PackingSourceContainer'
          type: array
        total:
          description: Total number of found entities for this query
          example: 42
          type: integer
      type: object
      title: PaginatedPackingSourceContainers
      description: PaginatedPackingSourceContainers
    StrippedPackingSourceContainer:
      additionalProperties: false
      type: object
      properties:
        id:
          type: string
          example: c7467ba8-c28a-4473-8748-a4e54e675e4c
        loadUnitRef:
          type: string
          example: 2357914c-d965-421e-b6cf-330501bccaab
        codes:
          items:
            description: Codes, that identify the container
            type: string
          type: array
          minItems: 1
      title: StrippedPackingSourceContainer
      description: StrippedPackingSourceContainer
    PackingSourceContainer:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        descriptionLocalized:
          $ref: '#/components/schemas/LocaleString'
        facilityRef:
          description: >-
            The id of the facility reference. The given ID has to be present in
            the system. But it is not updatable.
          example: Esb20gpHBL94X5NdMp3C
          type: string
        iconUrl:
          description: ''
          type: string
        description:
          type: string
        name:
          type: string
        id:
          type: string
          example: c7467ba8-c28a-4473-8748-a4e54e675e4c
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        packJobRefs:
          type: array
          minItems: 1
          description: List of references to packJobs
          items:
            type: string
            example: 0857914c-d965-421e-b6cf-330501bcca58
        loadUnitRef:
          type: string
          example: 2357914c-d965-421e-b6cf-330501bccaab
        codes:
          items:
            description: Codes, that identify the container
            type: string
          type: array
          minItems: 1
        customAttributes:
          description: >-
            Attributes that can be added to the packing source container. These
            attributes cannot be used within fulfillment processes, but it could
            be useful to have the informations carried here.
          type: object
      additionalProperties: false
      required:
        - packJobRefs
        - nameLocalized
        - facilityRef
        - id
        - version
        - lastModified
        - created
      type: object
      title: PackingSourceContainer
      description: PackingSourceContainer
    LocaleConfiguration:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        locale:
          $ref: '#/components/schemas/SupportedLocale'
        countryLanguageMapping:
          $ref: '#/components/schemas/CountryLanguageMapping'
        id:
          type: string
      required:
        - locale
      type: object
      title: LocaleConfiguration
      description: LocaleConfiguration
    CountryLanguageMapping:
      additionalProperties:
        type: string
      example:
        DE: de_DE
        US: en_US
        RU: ru_RU
      type: object
      title: CountryLanguageMapping
      description: CountryLanguageMapping
    MeasurementUnit:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/MeasurementUnitForCreation'
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        abbreviation:
          description: Translated abbreviation of the measurement unit
          example: kg
          type: string
        id:
          example: c5300790-9477-475c-bd6d-98e5d61f6413
          type: string
        name:
          description: Translated name of the measurement unit
          example: kilogramm
          type: string
      required:
        - id
      type: object
      title: MeasurementUnit
      description: MeasurementUnit
    MeasurementUnitForCreation:
      properties:
        abbreviationLocalized:
          allOf:
            - $ref: '#/components/schemas/LocaleString'
          description: Abbreviation of the unit. Maximum 4 chars long.
          example:
            de_DE: kg
            en_US: kg
            ru_RU: кг
        key:
          description: Descriptor for the measurement unit
          example: kilogramm
          type: string
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        requiresMeasurement:
          description: Indicates that the given unit need to be measured.
          example: true
          type: boolean
      required:
        - nameLocalized
        - abbreviationLocalized
        - key
      type: object
      title: MeasurementUnitForCreation
      description: MeasurementUnitForCreation
    MeasurementUnits:
      properties:
        measurementUnits:
          items:
            $ref: '#/components/schemas/MeasurementUnit'
          type: array
        total:
          description: Total number of found entities for this query
          example: 42
          type: integer
      type: object
      title: MeasurementUnits
      description: MeasurementUnits
    ModifyAddress:
      properties:
        additionalAddressInfo:
          example: 'to care of: Mrs. Müller'
          type: string
        city:
          example: Langenfeld
          pattern: ^.+$
          type: string
        country:
          description: A two-digit country code as per ISO 3166-1 alpha-2
          example: DE
          pattern: ^[A-Z]{2}$
          type: string
        province:
          example: Nordrhein-Westfalen
          pattern: ^.+$
          type: string
        customAttributes:
          description: >-
            Attributes that can be added to the address. These attributes cannot
            be used within fulfillment processes, but it could be useful to have
            the informations carried here.
          type: object
        houseNumber:
          example: 42a
          pattern: ^.+$
          type: string
        phoneNumbers:
          items:
            properties:
              customAttributes:
                description: >-
                  Attributes that can be added to the phonenumber. These
                  attributes cannot be used within fulfillment processes, but it
                  could be useful to have the informations carried here.
                type: object
              label:
                description: >-
                  Can be used to give a description for the number, like
                  "private", "business number", etc.
                type: string
              type:
                enum:
                  - MOBILE
                  - PHONE
                type: string
              value:
                description: The number itself. We do not enforce any format (yet).
                type: string
            type: object
          type: array
        postalCode:
          example: '40764'
          pattern: ^.+$
          type: string
        street:
          example: Hauptstr.
          pattern: ^.+$
          type: string
        resolvedCoordinates:
          $ref: '#/components/schemas/Coordinates'
      type: object
      title: ModifyAddress
      description: ModifyAddress
    ModifyCarrierAction:
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: >-
                Use value 'ModifyCarrierAction', because you want to modify a
                carrier
              enum:
                - ModifyCarrier
              type: string
            defaultParcelWeightInGram:
              description: Default weight for a parcel in gram
              default: 1000
              minimum: 1
              type: number
            defaultParcelWidthInCm:
              description: Default width in cm
              default: 35
              minimum: 1
              type: number
            defaultParcelLengthInCm:
              description: Default length in cm
              default: 25
              minimum: 1
              type: number
            defaultParcelHeightInCm:
              description: Default height in cm
              default: 10
              minimum: 1
              type: number
            parcelLabelClassifications:
              items:
                $ref: '#/components/schemas/ParcelLabelClassificationForCreation'
              type: array
            credentials:
              $ref: '#/components/schemas/AbstractModifyCarrierCredentials'
            deliveryType:
              $ref: '#/components/schemas/CarrierDeliveryType'
            lifecycle:
              $ref: '#/components/schemas/CarrierLifecycle'
            logoUrl:
              minLength: 1
              type: string
            name:
              description: >-
                This is the well known name for a supported CEP partner. Can be
                adapted to the clients needs.
              example: DHL Köln
              type: string
            status:
              $ref: '#/components/schemas/CarrierStatus'
            productValueNeeded:
              type: boolean
              example: true
              description: >-
                Setting to enable the Client to ask for the parcel product value
                while ordering a label. This information is mandatory for
                sending parcels between different countries (customs
                declaration)
          required:
            - action
          type: object
      xml:
        name: ModifyCarrierAction
      title: ModifyCarrierAction
      description: ModifyCarrierAction
    ModifyDpdChCarrierCredentials:
      allOf:
        - $ref: '#/components/schemas/AbstractModifyCarrierCredentials'
        - additionalProperties: false
          properties:
            delisId:
              description: Delis ID to create a DPD CH auth token.
              type: string
            key:
              description: Use value 'DPD_CH' in order to provide DPD credentials
              type: string
            password:
              description: Password to create a DPD CH auth token.
              type: string
          required:
            - key
          type: object
      xml:
        name: ModifyDpdChCarrierCredentials
      title: ModifyDpdChCarrierCredentials
      description: ModifyDpdChCarrierCredentials
    ModifyPostNLCarrierCredentials:
      allOf:
        - $ref: '#/components/schemas/AbstractModifyCarrierCredentials'
        - additionalProperties: false
          properties:
            apiKey:
              description: Key to access the postNl api.
              type: string
            key:
              description: Use value 'POSTNL' in order to provide POSTNL credentials
              type: string
          required:
            - key
          type: object
      xml:
        name: ModifyPostNLCarrierCredentials
      title: ModifyPostNLCarrierCredentials
      description: ModifyPostNLCarrierCredentials
    ModifyBringCarrierCredentials:
      allOf:
        - $ref: '#/components/schemas/AbstractModifyCarrierCredentials'
        - additionalProperties: false
          properties:
            apiUid:
              type: string
              description: Internal API Uid to communicate with the CEP Api
            apiKey:
              type: string
              description: Internal API Key to communicate with the CEP Api
            clientUrl:
              type: string
              description: Url of the requesting client, can be a static value
            authToken:
              type: string
              description: Identifier for Track&Trace Webhook
            key:
              description: Use value 'BRING' in order to provide BRING credentials
              type: string
          required:
            - key
          type: object
      xml:
        name: ModifyBringCarrierCredentials
      title: ModifyBringCarrierCredentials
      description: ModifyBringCarrierCredentials
    ModifyDHLV2CarrierCredentials:
      allOf:
        - $ref: '#/components/schemas/AbstractModifyCarrierCredentials'
        - additionalProperties: false
          properties:
            apiKey:
              description: Internal API Key to communicate with the DHL Api
              type: string
              minLength: 1
            fallback:
              $ref: '#/components/schemas/DHLV2BusinessCredentials'
          required:
            - key
            - apiKey
          type: object
      xml:
        name: ModifyDHLV2CarrierCredentials
      title: ModifyDHLV2CarrierCredentials
      description: ModifyDHLV2CarrierCredentials
    ModifyFedexCarrierCredentials:
      allOf:
        - $ref: '#/components/schemas/AbstractModifyCarrierCredentials'
        - properties:
            accountNumber:
              description: Your fedex accountnumber
              type: string
            apiKey:
              description: Internal API Key to communicate with the CEP Api
              type: string
            secretKey:
              description: Internal API Key to communicate with the CEP Api
              type: string
            key:
              description: Use value 'FEDEX' in order to provide FEDEX credentials
              type: string
          required:
            - key
          type: object
      xml:
        name: ModifyFedexCarrierCredentials
      title: ModifyFedexCarrierCredentials
      description: ModifyFedexCarrierCredentials
    ModifyAngelCarrierCredentials:
      allOf:
        - $ref: '#/components/schemas/AbstractModifyCarrierCredentials'
        - properties:
            username:
              description: Your Angel username
              type: string
            password:
              description: Your password for Angel carrier
              type: string
            authToken:
              description: X-Auth-Token for callbacks from Angel
              type: string
            key:
              description: Use value 'ANGEL' in order to provide ANGEL credentials
              type: string
          required:
            - key
          type: object
      xml:
        name: ModifyAngelCarrierCredentials
      title: ModifyAngelCarrierCredentials
      description: ModifyAngelCarrierCredentials
    ModifyGLSCarrierCredentials:
      allOf:
        - $ref: '#/components/schemas/AbstractModifyCarrierCredentials'
        - properties:
            username:
              description: Your Angel username
              type: string
            password:
              description: Your password for Angel carrier
              type: string
            trackAndTraceUsername:
              description: GLS Track And Trace username
              type: string
            trackAndTracePassword:
              description: GLS Track And Trace password
              type: string
            key:
              description: Use value 'GLS' in order to provide GLS credentials
              type: string
          required:
            - key
          type: object
      xml:
        name: ModifyGLSCarrierCredentials
      title: ModifyGLSCarrierCredentials
      description: ModifyGLSCarrierCredentials
    ModifyFacilityAction:
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: >-
                Use value 'ModifyFacility', because you want to modify a
                facility
              enum:
                - ModifyFacility
              type: string
            address:
              $ref: '#/components/schemas/ModifyFacilityAddress'
            closingDays:
              description: >-
                Days of the year where the facility is closed and doesn't allows
                picking
              items:
                $ref: '#/components/schemas/ClosingDay'
              type: array
            contact:
              $ref: '#/components/schemas/FacilityContact'
            customAttributes:
              description: >-
                Attributes that can be added to the facility. These attributes
                cannot be used within fulfillment processes, but it could be
                useful to have the informations carried here.
              type: object
            fulfillmentProcessBuffer:
              description: Duration in minutes until an order is processed
              example: '240'
              minimum: 0
              type: integer
            locationType:
              $ref: '#/components/schemas/FacilityLocationType'
            name:
              example: Hamburg NW2
              type: string
            capacityPlanningTimeframe:
              description: >-
                The range in days per facility which defines how many days in
                the future the capacity of the facility can be planned
              type: integer
              minimum: 1
            pickingTimes:
              $ref: '#/components/schemas/PickingTimes'
              description: >-
                Time ranges defining the picking times per weekday. No
                overlapping ranges are allowed
            pickingMethods:
              description: Picking Methods supported by this facility.
              items:
                $ref: '#/components/schemas/PickingMethodEnum'
              type: array
            scanningRule:
              $ref: '#/components/schemas/ScanningRuleConfiguration'
            services:
              items:
                properties:
                  type:
                    description: The description of the service this facility offers.
                    enum:
                      - SHIP_FROM_STORE
                      - PICKUP
                    type: string
                required:
                  - type
                type: object
              type: array
            status:
              description: >-
                The state of the facility. ONLINE means that this facility can
                process new orders and pickjobs, SUSPENDED means it cannot get
                new orders but is able to fulfill the current workload and
                OFFLINE means that it cannot fulfill any new or existing orders.
                Processes already running might be rescheduled to another
                facility depending on the preferences.
              enum:
                - ONLINE
                - SUSPENDED
                - OFFLINE
              type: string
            tenantFacilityId:
              description: The id of the facility in the tenants own system
              example: K12345
              type: string
            capacityEnabled:
              type: boolean
            tags:
              type: array
              minItems: 0
              items:
                $ref: '#/components/schemas/TagReference'
            operativeCosts:
              items:
                $ref: '#/components/schemas/FacilityOperativeCostForCreation'
              maxItems: 1
          required:
            - action
          type: object
      xml:
        name: ModifyFacilityAction
      title: ModifyFacilityAction
      description: ModifyFacilityAction
    AbstractFacilityActionsParameter:
      discriminator:
        propertyName: name
      properties:
        name:
          type: string
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
      required:
        - name
        - version
      title: AbstractFacilityActionsParameter
      description: AbstractFacilityActionsParameter
    UpdateFacilityCoordinatesActionParameter:
      title: UpdateFacilityCoordinatesActionParameter
      description: Update facility Coorindates.
      allOf:
        - $ref: '#/components/schemas/AbstractFacilityActionsParameter'
      properties:
        name:
          enum:
            - UPDATE_FACILITY_COORDINATES
          type: string
        coordinates:
          $ref: '#/components/schemas/Coordinates'
      required:
        - name
        - coordinates
        - version
    RemoveFacilityCoordinatesActionParameter:
      title: RemoveFacilityCoordinatesActionParameter
      description: Remove facility Coorindates.
      allOf:
        - $ref: '#/components/schemas/AbstractFacilityActionsParameter'
      properties:
        name:
          enum:
            - REMOVE_FACILITY_COORDINATES
          type: string
      required:
        - name
        - version
    FacilityActionsParameter:
      anyOf:
        - $ref: '#/components/schemas/RemoveFacilityCoordinatesActionParameter'
        - $ref: '#/components/schemas/UpdateFacilityCoordinatesActionParameter'
      title: FacilityActionsParameter
      description: FacilityActionsParameter
    ModifyFacilityAddress:
      allOf:
        - $ref: '#/components/schemas/ModifyAddress'
        - type: object
        - properties:
            companyName:
              example: Speedy Boxales Ltd.
              type: string
            emailAddresses:
              items:
                properties:
                  recipient:
                    description: >-
                      Human readable information who is the recipient for emails
                      sent to this address.
                    example: >-
                      'Mailinglist reaching all the employees', 'Marc Fulton,
                      Manager', etc.
                    type: string
                  value:
                    format: email
                    type: string
                required:
                  - value
                type: object
              type: array
          type: object
      title: ModifyFacilityAddress
      description: ModifyFacilityAddress
    ModifyParcelAction:
      title: ModifyParcelAction
      description: Modify Parcel Action.
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: Use value 'ModifyParcel', because you want to modify a Parcel
              enum:
                - ModifyParcel
              type: string
            status:
              $ref: '#/components/schemas/ParcelStatus'
            result:
              $ref: '#/components/schemas/ParcelResult'
            customAttributes:
              type: object
            dimensions:
              $ref: '#/components/schemas/ParcelDimensions'
            productValue:
              nullable: true
              description: >-
                Monetary value of all goods in this parcel. Needed for sending
                cross border packages (customs) To be interpreted as money in
                the currency given under paymentInformation.currency
              type: number
              example: 12.5
            customProductValue:
              description: >-
                Set this value if you want to overwrite the calculated product
                value of the parcel.
              type: number
              example: 12.5
            pickUpInformation:
              $ref: '#/components/schemas/ParcelPickUpInformation'
            services:
              $ref: '#/components/schemas/ParcelServices'
            carrierProduct:
              nullable: true
              type: string
              description: Only changable on status OPEN or FAILED of the existing Parcel
          required:
            - action
          type: object
      xml:
        name: ModifyParcelAction
    ModifyParcelLoadUnitsAction:
      title: ModifyParcelLoadUnitsAction
      description: Modify Parcels of a LoadUnit.
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: >-
                Use value 'ModifyParcelLoadUnit', because you want to modify
                loadunitRefs in Parcel
              enum:
                - ModifyParcelLoadUnit
              type: string
            loadUnitRefs:
              type: array
              items:
                type: string
          required:
            - action
            - loadUnitRefs
          type: object
      xml:
        name: ModifyParcelLoadUnitsAction
    ReplaceLoadUnitLineItemsAction:
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: >-
                Use value 'ReplaceLoadUnitLineItems', because you want to
                replace loadunit line items
              enum:
                - ReplaceLoadUnitLineItems
              type: string
            loadUnitLineItems:
              type: array
              items:
                $ref: '#/components/schemas/LoadUnitLineItem'
          required:
            - action
            - loadUnitLineItems
          type: object
      xml:
        name: ReplaceLoadUnitLineItemsAction
      title: ReplaceLoadUnitLineItemsAction
      description: ReplaceLoadUnitLineItemsAction
    ParcelPatchActions:
      properties:
        actions:
          items:
            anyOf:
              - $ref: '#/components/schemas/ModifyParcelAction'
              - $ref: '#/components/schemas/ModifyParcelLoadUnitsAction'
          minItems: 1
          type: array
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
        - actions
      type: object
      xml:
        name: ParcelPatchActions
      title: ParcelPatchActions
      description: ParcelPatchActions
    LoadUnitPatchActions:
      title: LoadUnitPatchActions
      description: Actions to patch a LoadUnit.
      properties:
        actions:
          items:
            $ref: '#/components/schemas/ReplaceLoadUnitLineItemsAction'
          minItems: 1
          type: array
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
        - actions
      type: object
      xml:
        name: LoadUnitPatchActions
    ModifyFeatureAction:
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: Use value 'ModifyFeature', because you want to modify a Feature
              enum:
                - ModifyFeature
              type: string
            status:
              $ref: '#/components/schemas/FeatureStatus'
              description: The state of the feature we want to change.
          required:
            - action
            - status
          type: object
      xml:
        name: ModifyFeatureAction
      title: ModifyFeatureAction
      description: ModifyFeatureAction
    ModifyHandoverjobAction:
      title: ModifyHandoverjobAction
      description: Action to modify a HandoverJob.
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: >-
                Use value 'ModifyHandoverjob', because you want to modify a
                handoverjob
              enum:
                - ModifyHandoverjob
              type: string
            customAttributes:
              description: >-
                Attributes that can be added to the handoverJob. These
                attributes cannot be used within fulfillment processes, but it
                could be useful to have the informations carried here.
              type: object
            status:
              $ref: '#/components/schemas/HandoverjobStatus'
          required:
            - action
          type: object
      xml:
        name: ModifyHandoverjobAction
    CancelHandoverjobAction:
      title: CancelHandoverjobAction
      deprecated: true
      description: >-
        This part of the API is deprecated. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />@deprecated Use api/handoverjobs/:id/actions instead
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: >-
                Use value 'CancelHandoverjob', because you want to cancel a
                handover job
              enum:
                - CancelHandoverjob
              type: string
            handoverJobCancelReason:
              $ref: '#/components/schemas/HandoverJobCancelReason'
          required:
            - action
            - handoverJobCancelReason
          type: object
      xml:
        name: CancelHandoverjobAction
    ModifyListingAction:
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: Use value 'ModifyListing', because you want to modify a listing
              enum:
                - ModifyListing
              type: string
            attributes:
              description: The attributes of this listing
              items:
                $ref: '#/components/schemas/ListingAttributeItem'
              type: array
              maxItems: 40
            imageUrl:
              description: >-
                A web link to a picture of this article. Please make sure that
                no authentication is required to fetch the image!
              type: string
            price:
              example: 1200
              type: number
            currency:
              description: >-
                The currency of the price as an ISO 4217 code. Attention -
                Routing currently does not convert between different currencies.
                Don't use multiple currencies when using price ratings in order
                routing.
              example: EUR
              nullable: true
              allOf:
                - $ref: '#/components/schemas/CurrencyCode'
            status:
              description: The status indicates if a listing is available or not
              enum:
                - ACTIVE
                - INACTIVE
              type: string
            stockinformation:
              $ref: '#/components/schemas/StockInformationForCreation'
              deprecated: true
              description: >-
                This part of the API is deprecated. For details please check the
                <a
                href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
                target="_blank">api-release-life-cycle documentation</a>.<br
                /><br />@deprecated This field is deprecated since 11th of
                September 2023. Use /api/stocks endpoints instead.
            subtitle:
              description: a subtitle describing the article
              example: 44 2/3
              type: string
            title:
              description: a title describing the article
              example: Adidas Superstar
              type: string
            titleLocalized:
              $ref: '#/components/schemas/LocaleString'
            tags:
              type: array
              minItems: 0
              items:
                $ref: '#/components/schemas/TagReference'
            scanningRule:
              $ref: '#/components/schemas/ScanningRuleConfiguration'
            scannableCodes:
              items:
                description: Codes, that identify the article
                type: string
              type: array
            weight:
              type: number
            outOfStockBehaviour:
              $ref: '#/components/schemas/OutOfStockBehaviour'
            outOfStockConfig:
              $ref: '#/components/schemas/OutOfStockConfig'
              description: >-
                The outOfStockConfig is in Alpha status. For details please
                check the <a
                href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
                target="_blank">api-release-life-cycle documentation</a>.<br
                /><br />
            availabilityTimeframe:
              $ref: '#/components/schemas/AvailabilityTimeframe'
              deprecated: true
              description: >-
                @deprecated This property (for OutOfStockBehaviour.BACKORDER) is
                deprecated since 26th of February 2025.
            measurementUnitKey:
              type: string
              nullable: true
              example: kg
            stockProperties:
              type: object
              nullable: true
              additionalProperties:
                $ref: '#/components/schemas/StockPropertyDefinition'
            stockAvailableUntil:
              $ref: '#/components/schemas/AvailableUntilDefinition'
            legal:
              $ref: '#/components/schemas/ListingLegal'
            customAttributes:
              nullable: true
              description: >-
                Attributes that can be added to the listing. These attributes
                **cannot** be used within fulfillment processes, but enable you
                to attach custom data from your systems to fulfillmenttools
                entities.
              type: object
          required:
            - action
          type: object
      xml:
        name: ModifyListingAction
      title: ModifyListingAction
      description: ModifyListingAction
    ModifyListingReactivationAfterAction:
      title: ModifyListingReactivationAfterAction
      description: Action to modify the reactivationAfter property of a Listing.
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - properties:
            action:
              description: >-
                Use value 'ModifyListingReactivationAfter', if you want to
                modify the listingReactivationAfter of a facility
              enum:
                - ModifyListingReactivationAfter
              type: string
            listingReactivationAfter:
              properties:
                active:
                  default: true
                  description: The disabling of listings is enabled or disabled.
                  type: boolean
                value:
                  default: 24
                  description: >-
                    Time in hours that has to pass for a deactivated listing
                    (e.g. due to manual deactivation or as a result of a
                    shortpick ) to be become active again.
                  type: number
              type: object
          required:
            - action
          type: object
      xml:
        name: ModifyListingReactivationAfterAction
    ModifyLoadUnitTypeAction:
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: >-
                Use value 'ModifyLoadUnitType', because you want to modify a
                LoadUnitType
              enum:
                - ModifyLoadUnitType
              type: string
            descriptionLocalized:
              $ref: '#/components/schemas/LocaleString'
            nameLocalized:
              $ref: '#/components/schemas/LocaleString'
            priority:
              description: >-
                This value gives the priority in the respective loadUnitType.
                The lower the value the higher is the priority, e.g. priority 1
                is higher than priority 10. The priority can be used to order
                loadUnityTypes.
              example: 100
              format: int64
              maximum: 10000
              minimum: 1
              type: integer
            dimensions:
              $ref: '#/components/schemas/LoadUnitDimensions'
            weightLimitInG:
              description: 'Maximal weight in gramm(gr) the loadunit can handle. '
              type: number
              minimum: 1
          required:
            - action
          type: object
      xml:
        name: ModifyLoadUnitTypeAction
      title: ModifyLoadUnitTypeAction
      description: ModifyLoadUnitTypeAction
    RestartPickJobAction:
      title: RestartPickJobAction
      description: >-
        This part of the API is deprecated. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />@deprecated Use api/pickjobs/:id/actions instead
      deprecated: true
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: >-
                Use value 'RestartPickJob' to restart the pickJob and set it
                back to status IN_PROGRESS.
              enum:
                - RestartPickJob
              type: string
          required:
            - action
          type: object
      xml:
        name: RestartPickJobAction
    ResetPickJobAction:
      title: ResetPickJobAction
      description: >-
        This part of the API is deprecated. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />@deprecated Use api/pickjobs/:id/actions instead
      deprecated: true
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: >-
                Use value 'ResetPickJobAction' to reset the pickJob and set it
                back to status OPEN and reset the pick line items.
              enum:
                - ResetPickJob
              type: string
          required:
            - action
          type: object
      xml:
        name: ResetPickJobAction
    ModifyPickJobLastEditorAction:
      title: ModifyPickJobLastEditorAction
      description: Action to modify the last editor of a PickJob.
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: >-
                Use value 'ModifyPickJobLastEditorAction' to set the last editor
                to your user and therefor take over the pickjob.
              enum:
                - ModifyPickJobLastEditor
              type: string
          required:
            - action
          type: object
      xml:
        name: ModifyPickJobLastEditorAction
    ModifyPickJobAction:
      title: ModifyPickJobAction
      description: Action to modify a PickJob.
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: Use value 'ModifyPickJob', because you want to modify a pickjob
              enum:
                - ModifyPickJob
              type: string
            preferredPickingMethods:
              description: Preferred way of picking a given pickJob.
              items:
                $ref: '#/components/schemas/PickingMethodEnum'
              type: array
            paymentInformation:
              $ref: '#/components/schemas/PaymentInformation'
            customAttributes:
              description: >-
                Attributes that can be added to the pickJob. These attributes
                cannot be used within fulfillment processes, but it could be
                useful to have the informations carried here.
              type: object
            status:
              $ref: '#/components/schemas/PickJobStatusUnprotected'
          required:
            - action
          type: object
      xml:
        name: ModifyPickJobAction
    AbortPickJobAction:
      title: AbortPickJobAction
      description: >-
        This part of the API is deprecated. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />@deprecated Use api/pickjobs/:id/actions instead
      deprecated: true
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: Use value 'AbortPickJob', because you want to cancel a pickjob
              enum:
                - AbortPickJob
              type: string
          required:
            - action
          type: object
      xml:
        name: AbortPickJobAction
    ModifyPickLineItemAction:
      title: ModifyPickLineItemAction
      description: Action to modify a picklineitem of a PickJob.
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - properties:
            action:
              description: >-
                Use value 'ModifyPickLineItem', because you want to modify a
                pick line item
              enum:
                - ModifyPickLineItem
              type: string
            id:
              description: >-
                The id of this lineItem. It is generated during creation
                automatically and suits as the primary identifier of the
                described entity.
              example: climk4dcQFiPdA5ULuhS
              type: string
            picked:
              description: The amount of articles that were picked for this pickline.
              example: 20
              format: int64
              minimum: 0
              type: integer
            pickedAt:
              description: Date when the line has been picked.
              example: '2024-02-03T08:45:51.525Z'
              format: date-time
              type: string
            customAttributes:
              description: >-
                Attributes that can be added to the pick ine item. These
                attributes cannot be used within fulfillment processes, but it
                could be useful to have the informations carried here.
              type: object
            stockEmptied:
              example: true
              type: boolean
            stickers:
              items:
                $ref: '#/components/schemas/Sticker'
              type: array
            partialStockLocations:
              items:
                $ref: >-
                  #/components/schemas/PickJobLineItemPartialStockLocationForUpdate
            scannedCodes:
              description: Scanned Codes of the given picked line item
              items:
                $ref: '#/components/schemas/PickLineItemScannedCode'
              minItems: 0
            status:
              $ref: '#/components/schemas/PickLineItemStatus'
            secondaryPicked:
              type: integer
            substituteLineItems:
              description: >-
                This part of the API is in Beta status. For details please check
                the <a
                href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
                target="_blank">api-release-life-cycle documentation</a>.<br
                /><br />
              items:
                $ref: '#/components/schemas/SubstituteLineItemForCreation'
              type: array
              x-badges:
                - color: orange
                  label: BETA
            shortPickReasonLocalized:
              $ref: '#/components/schemas/LocaleString'
          required:
            - id
            - action
          type: object
          additionalProperties: false
      xml:
        name: ModifyPickLineItemAction
    ModifyRetainedOfflineStockAction:
      title: ModifyRetainedOfflineStockAction
      deprecated: true
      description: >-
        This part of the API is deprecated. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />@deprecated Concept depreated. Use safety stock instead.
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - properties:
            action:
              deprecated: true
              description: >-
                This part of the API is deprecated. For details please check the
                <a
                href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
                target="_blank">api-release-life-cycle documentation</a>.<br
                /><br />@deprecated Concept depreated. Use safety stock instead.
              enum:
                - ModifyRetainedOfflineStock
              type: string
            active:
              description: The retained Offline Stock is enabled or disabled.
              type: boolean
            value:
              default: 0.2
              description: >-
                The overall percentage of stock that should be reserved to
                offline clients.
              example: 0.15
              maximum: 1
              minimum: 0.01
              type: number
          required:
            - action
          type: object
      xml:
        name: ModifyRetainedOfflineStockAction
    ModifyReturnAction:
      title: ModifyReturnAction
      description: Action to modify a return
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              enum:
                - ModifyReturn
              type: string
            status:
              $ref: '#/components/schemas/ReturnStatus'
          required:
            - action
          type: object
      xml:
        name: ModifyReturnAction
    ModifyReturnLineItemAction:
      title: ModifyReturnLineItemAction
      description: Action to modify a returnLineItem of a return
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - properties:
            action:
              description: >-
                Use value 'ModifyReturnLineItem', because you want to modify a
                return line item
              enum:
                - ModifyReturnLineItem
              type: string
            id:
              description: Id of the return line item you want to update
              type: string
            returned:
              $ref: '#/components/schemas/Returned'
            status:
              $ref: '#/components/schemas/ReturnLineStatus'
          required:
            - id
            - action
            - returned
          type: object
      xml:
        name: ModifyReturnLineItemAction
    ModifyShipmentAction:
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: >-
                Use value 'ModifyShipment', because you want to modify a
                shipment
              enum:
                - ModifyShipment
              type: string
            carrierRef:
              description: >-
                The reference to the carrier for which the shipment is assigned
                to
              example: ca525716-7208-4a63-a2a6-11274eb37f67-0
              type: string
            carrierProduct:
              description: Desired product of given carrier to choose when ordering a label
              type: string
              example: EXPRESS
            pickJobRef:
              description: >-
                The reference to the pickjob for which the shipment is assigned
                to
              example: ca525716-7208-4a63-a2a6-11274eb37f67-0
              type: string
            paymentInformation:
              $ref: '#/components/schemas/PaymentInformation'
            status:
              $ref: '#/components/schemas/ShipmentStatus'
            targetAddress:
              $ref: '#/components/schemas/ConsumerAddress'
          required:
            - action
          type: object
      xml:
        name: ModifyShipmentAction
      title: ModifyShipmentAction
      description: ModifyShipmentAction
    ModifyShortpickAction:
      title: ModifyShortpickAction
      description: Modify Shortpick Action.
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - properties:
            action:
              description: >-
                Use value 'ModifyShortpick', if you want to modify the
                ModifyShortPick of a facility
              enum:
                - ModifyShortpick
              type: string
            active:
              default: true
              description: Inventory adjustment in the case of insufficient order picking
              type: boolean
          required:
            - action
          type: object
      xml:
        name: ModifyShortpickAction
    OrderInformation:
      properties:
        orderDate:
          description: The date the order was created.
          example: '2020-02-03T08:45:50.525Z'
          format: date-time
          type: string
        orderNumber:
          description: An identifier for the order.
          example: R456728546
          pattern: ^.+$
          type: string
      type: object
      title: OrderInformation
      description: OrderInformation
    MeasurementValidation:
      properties:
        shortPickSoftTolerancePercentage:
          description: Allowed soft short pick deviation tolerance.
          example: 10
          minimum: 0
          maximum: 100
          type: number
        shortPickHardTolerancePercentage:
          description: Allowed hard short pick deviation tolerance.
          example: 15
          minimum: 0
          maximum: 100
          type: number
        overPickSoftTolerancePercentage:
          description: Allowed soft over pick deviation tolerance.
          example: 15
          minimum: 0
          type: number
        overPickHardTolerancePercentage:
          description: Allowed hard over pick deviation tolerance.
          example: 20
          minimum: 0
          type: number
      title: MeasurementValidation
      description: MeasurementValidation
    OrderStatus:
      description: The state of the order. Initially it is OPEN.
      enum:
        - OPEN
        - CANCELLED
        - PROMISED
        - LOCKED
        - OBSOLETE
      type: string
      title: OrderStatus
    ParcelDimensions:
      additionalProperties: false
      nullable: true
      properties:
        height:
          description: The height of the package (in cm)
          example: 50
          type: number
        length:
          description: The length of the package (in cm)
          example: 100
          type: number
        weight:
          description: The weight of the package (in g)
          example: 1700
          type: number
        width:
          description: The width of the package (in cm)
          example: 25
          type: number
        customWeight:
          description: >-
            Set this value if you want to overwrite the calculated weight of the
            parcel (in g).
          type: number
          example: 1700
      type: object
      title: ParcelDimensions
      description: ParcelDimensions
    ParcelServices:
      additionalProperties: false
      nullable: true
      properties:
        bulkyGoods:
          type: boolean
        signature:
          description: Signature from anyone needed
          type: boolean
        adultSignature:
          description: Signature from some adult
          type: boolean
        customerSignature:
          description: Signature from the ordering customer needed
          type: boolean
        saturdayDelivery:
          description: Saturday Delivery
          type: boolean
      title: ParcelServices
      description: ParcelServices
    Parcel:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
        - properties:
            anonymized:
              description: Indicates if gdpr related data was anonymized
              example: false
              type: boolean
            carrierRef:
              description: Reference to the carrier this parcel should be send by
              example: cf00e102-34f2-45c1-a846-6a21f384321e
              type: string
            carrierProduct:
              description: Desired product of given carrier to choose when ordering a label
              type: string
              example: EXPRESS
            customAttributes:
              description: >-
                Attributes that can be added to the parcel. These attributes
                cannot be used within fulfillment processes, but it could be
                useful to have the information carried here.
              type: object
            dimensions:
              $ref: '#/components/schemas/ParcelDimensions'
            services:
              $ref: '#/components/schemas/ParcelServices'
            id:
              description: >-
                The id of this parcel. It is generated during creation
                automatically and suits as the primary identifier of the
                described entity.
              example: 95EWrieX09OmeriXIUbb
              type: string
            documentsRef:
              description: Reference to the documents collection from this entity
              type: string
            loadUnitRefs:
              description: Reference to array of load unit Refs
              items:
                type: string
              type: array
            recipient:
              $ref: '#/components/schemas/ConsumerAddress'
            invoice:
              $ref: '#/components/schemas/ConsumerAddress'
            processRef:
              type: string
            facilityRef:
              type: string
            operativeProcessRef:
              type: string
            items:
              items:
                $ref: '#/components/schemas/ParcelItem'
              type: array
            postalCharges:
              $ref: '#/components/schemas/ParcelPostalCharge'
            returnAddress:
              $ref: '#/components/schemas/FacilityAddress'
            result:
              $ref: '#/components/schemas/ParcelResult'
            sender:
              $ref: '#/components/schemas/FacilityAddress'
            shipmentRef:
              description: The id of this shipment this parcel has been created for.
              example: 95EWrieX09OmeriXIUbb
              type: string
            status:
              $ref: '#/components/schemas/ParcelStatus'
            paymentInformation:
              $ref: '#/components/schemas/PaymentInformation'
            pickUpInformation:
              $ref: '#/components/schemas/ParcelPickUpInformation'
            productValue:
              description: >-
                Monetary value of all goods in this parcel. Needed for sending
                cross border packages (customs) To be interpreted as money in
                the currency given under paymentInformation.currency. This field
                uses the smallest denomination, e.g. Euro Cents. So a value of
                1250 represents 12,50€.
              type: number
              example: 1250
            customProductValue:
              description: >-
                Set this value if you want to overwrite the calculated product
                value of the parcel. This field uses the smallest denomination,
                e.g. Euro Cents. So a value of 1250 represents 12,50€.
              type: number
              example: 12.5
            productValueCurrency:
              $ref: '#/components/schemas/ProductValueCurrency'
            productValueType:
              $ref: '#/components/schemas/ProductValueType'
            shortId:
              type: string
              example: AA12-1
            transfers:
              type: array
              minItems: 0
              items:
                $ref: '#/components/schemas/OperativeTransfer'
          required:
            - id
            - status
            - carrierRef
            - processRef
            - sender
            - recipient
            - loadUnitRefs
          type: object
      title: Parcel
      description: Parcel
    ParcelForCreation:
      additionalProperties: false
      properties:
        status:
          $ref: '#/components/schemas/ParcelStatus'
        carrierProduct:
          description: Desired product of given carrier to choose when ordering a label
          type: string
          example: EXPRESS
        carrierRef:
          description: >-
            references the carrier to be used for sending. Can not be set when
            creating a parcel for an existing shipment.
          type: string
        customAttributes:
          description: >-
            Attributes that can be added to the parcel. These attributes cannot
            be used within fulfillment processes, but it could be useful to have
            the information carried here.
          type: object
        dimensions:
          $ref: '#/components/schemas/ParcelDimensions'
        services:
          $ref: '#/components/schemas/ParcelServices'
        loadUnitRefs:
          description: Reference to array of load unit Refs
          items:
            type: string
          type: array
        items:
          items:
            $ref: '#/components/schemas/ParcelItemForCreation'
          type: array
        recipient:
          $ref: '#/components/schemas/ConsumerAddress'
        invoice:
          $ref: '#/components/schemas/ConsumerAddress'
        sender:
          $ref: '#/components/schemas/FacilityAddress'
        returnAddress:
          $ref: '#/components/schemas/FacilityAddress'
        paymentInformation:
          $ref: '#/components/schemas/PaymentInformation'
        pickUpInformation:
          $ref: '#/components/schemas/ParcelPickUpInformation'
        shortId:
          type: string
          example: AA12-1
        productValue:
          description: >-
            Monetary value of all goods in this parcel. Needed for sending cross
            border packages (customs) To be interpreted as money in the currency
            given under paymentInformation.currency. This value is calculated
            from the items in the parcel.
          type: number
          example: 12.5
        customProductValue:
          description: >-
            Set this value if you want to overwrite the calculated product value
            of the parcel.
          type: number
          example: 12.5
        productValueCurrency:
          $ref: '#/components/schemas/ProductValueCurrency'
        productValueType:
          $ref: '#/components/schemas/ProductValueType'
        result:
          $ref: '#/components/schemas/ParcelResult'
        transfers:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/OperativeTransfer'
      type: object
      title: ParcelForCreation
      description: ParcelForCreation
    ParcelForDirectCreation:
      additionalProperties: false
      properties:
        status:
          $ref: '#/components/schemas/ParcelStatus'
        carrierProduct:
          description: Desired product of given carrier to choose when ordering a label
          type: string
          example: EXPRESS
        carrierRef:
          description: >-
            references the carrier to be used for sending. Can not be set when
            creating a parcel for an existing shipment.
          type: string
        customAttributes:
          description: >-
            Attributes that can be added to the parcel. These attributes cannot
            be used within fulfillment processes, but it could be useful to have
            the information carried here.
          type: object
        dimensions:
          $ref: '#/components/schemas/ParcelDimensions'
        services:
          $ref: '#/components/schemas/ParcelServices'
        loadUnitRefs:
          description: Reference to array of load unit Refs
          items:
            type: string
          type: array
        items:
          items:
            $ref: '#/components/schemas/ParcelItemForCreation'
          type: array
        recipient:
          $ref: '#/components/schemas/ConsumerAddress'
        invoice:
          $ref: '#/components/schemas/ConsumerAddress'
        sender:
          $ref: '#/components/schemas/FacilityAddress'
        returnAddress:
          $ref: '#/components/schemas/FacilityAddress'
        paymentInformation:
          $ref: '#/components/schemas/PaymentInformation'
        pickUpInformation:
          $ref: '#/components/schemas/ParcelPickUpInformation'
        shortId:
          type: string
          example: AA12-1
        productValue:
          description: >-
            Monetary value of all goods in this parcel. Needed for sending cross
            border packages (customs) To be interpreted as money in the currency
            given under paymentInformation.currency. This value is calculated
            from the items in the parcel.
          type: number
          example: 12.5
        customProductValue:
          description: >-
            Set this value if you want to overwrite the calculated product value
            of the parcel.
          type: number
          example: 12.5
        productValueCurrency:
          $ref: '#/components/schemas/ProductValueCurrency'
        productValueType:
          $ref: '#/components/schemas/ProductValueType'
        result:
          $ref: '#/components/schemas/ParcelResult'
        facilityRef:
          type: string
          description: Reference to the facility this parcel is created for
          example: 95EWrieX09OmeriXIUbb
        shipmentRef:
          type: string
          description: >-
            Reference to the shipment this parcel is created for. If non
            provided, a shipment will be created automatically.
          example: 95EWrieX09OmeriXIUbb
        targetTime:
          type: string
          format: date-time
          description: >-
            The target time for the parcel to be delivered. If not provided, the
            current time will be used.
          example: '2020-02-03T08:45:50.525Z'
        orderDate:
          type: string
          format: date-time
          description: >-
            Date when the order for the given parcel has been placed Mandatory
            when no shipmentRef was provided
          example: '2020-02-03T08:45:50.525Z'
        operativeProcessRef:
          type: string
          description: Reference to the operative process this parcel is created for
          example: 95EWrieX09OmeriXIUbb
        processRef:
          type: string
          description: Reference to the process this parcel is created for
          example: 95EWrieX09OmeriXIUbb
      type: object
      required:
        - facilityRef
        - carrierRef
        - recipient
        - sender
      title: ParcelForDirectCreation
      description: ParcelForDirectCreation
    ProductValueCurrency:
      additionalProperties: false
      properties:
        currency:
          type: string
          description: Currency of the given value
          example: EUR
        decimalPlaces:
          type: integer
          description: Number of decimal places for the given currency
          example: 2
      required:
        - currency
      type: object
      title: ProductValueCurrency
      description: ProductValueCurrency
    ProductValueType:
      additionalProperties: false
      enum:
        - INSURANCE
        - CUSTOMS
        - SHOP_PRICE
      type: string
      example: INSURANCE
      title: ProductValueType
      description: ProductValueType
    ParcelItemForCreation:
      properties:
        quantity:
          type: integer
          minimum: 1
          description: amount of the given items
          example: 5
        hsCode:
          type: string
          maxLength: 50
        description:
          description: Description of the given item/items
          example: Item Description
          type: string
        weightInGram:
          type: integer
          description: Weight of a single item in gram
          example: 10000
        parcelItemValue:
          $ref: '#/components/schemas/ParcelItemValue'
        countryOfManufacture:
          type: string
        article:
          $ref: '#/components/schemas/ParcelItemArticle'
        customAttributes:
          type: object
          description: >-
            Attributes that can be added to the parcelItem. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the information carried here.
        recordableAttributes:
          items:
            $ref: '#/components/schemas/RecordableAttributeForCreation'
          type: array
      required:
        - quantity
      type: object
      xml:
        name: ParcelItemForCreation
      title: ParcelItemForCreation
      description: ParcelItemForCreation
    ParcelItemForUpdate:
      additionalProperties: false
      properties:
        id:
          description: >-
            The id of this parcelItem. It is generated during creation
            automatically and suits as the primary identifier of the described
            entity.
          example: ae3ba67c-a42c-4816-96ac-16231e49640c
          type: string
        parcelItemValue:
          $ref: '#/components/schemas/ParcelItemValue'
        parcelItemArticleAttributes:
          items:
            $ref: '#/components/schemas/ArticleAttributeItem'
          type: array
          maxItems: 40
        weightInGram:
          type: integer
          nullable: true
          description: Weight of a single item in gram
          example: 10000
      required:
        - id
      type: object
      title: ParcelItemForUpdate
      description: ParcelItemForUpdate
    ParcelArticleAttributeItemForUpdate:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/ArticleAttributeItem'
      required:
        - key
        - value
        - category
      title: ParcelArticleAttributeItemForUpdate
      description: ParcelArticleAttributeItemForUpdate
    ParcelPickUpInformation:
      additionalProperties: false
      nullable: true
      properties:
        startTime:
          description: needs to be before end time
          format: date-time
          type: string
        endTime:
          description: needs to be after start time
          format: date-time
          type: string
      required:
        - startTime
        - endTime
      xml:
        name: ParcelItemForCreation
      title: ParcelPickUpInformation
      description: ParcelPickUpInformation
    ParcelPostalCharge:
      properties:
        value:
          type: number
          description: Monetary Value in the given currency
          example: 15.5
        currency:
          type: string
          description: Currency of the given value
          example: EUR
      required:
        - currency
        - value
      title: ParcelPostalCharge
      description: ParcelPostalCharge
    ParcelItem:
      properties:
        id:
          description: The id of this parcelItem.
          example: ae3ba67c-a42c-4816-96ac-16231e49640c
          type: string
        quantity:
          type: integer
          minimum: 1
          description: amount of the given items
          example: 5
        hsCode:
          deprecated: true
          description: Deprecated - use article.attribute.hsCode instead
          type: string
          maxLength: 50
        description:
          deprecated: true
          description: >-
            Description - article.title will be used instead - of the given
            item/items
          example: Item Description
          type: string
        weightInGram:
          deprecated: true
          type: integer
          description: >-
            Deprecated - use article.attribute.weightPerUnit instead - Weight of
            a single item in gram
          example: 10000
        parcelItemValue:
          deprecated: true
          description: >-
            Deprecated - use article.attribute.pricePerUnit and
            article.attribute.currency instead
          $ref: '#/components/schemas/ParcelItemValue'
        countryOfManufacture:
          deprecated: true
          description: Deprecated - use article.attribute.countryOfManufacture instead
          type: string
        article:
          $ref: '#/components/schemas/ParcelItemArticle'
        customAttributes:
          type: object
          description: >-
            Attributes that can be added to the parcelItem. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the information carried here.
        recordableAttributes:
          items:
            $ref: '#/components/schemas/RecordableAttribute'
          type: array
        originId:
          nullable: true
          type: string
          description: >-
            The id of the line item this line item was originated from, before
            any split has happened. This can be used to restore the ‘pre-split’
            status.
          example: df671041-10dd-4600-a2ff-e9ffe2556bba
      required:
        - id
        - quantity
      type: object
      xml:
        name: ParcelItem
      title: ParcelItem
      description: ParcelItem
    ParcelProductValue:
      properties:
        value:
          type: integer
          example: 25000
          description: >-
            Total value that should be shipped. Value is configured in the
            smallest subunit, e.g. cents.
          minimum: 1
        currency:
          description: The currency of the price as an ISO 4217 code.
          example: EUR
          nullable: true
          allOf:
            - $ref: '#/components/schemas/CurrencyCode'
        decimalPlaces:
          type: integer
          description: Number of decimal places for the given currency
          example: 2
          minimum: 0
      required:
        - value
        - currency
        - decimalPlaces
      type: object
      title: ParcelProductValue
      description: ParcelProductValue
    ParcelItemArticle:
      allOf:
        - $ref: '#/components/schemas/AbstractArticle'
        - properties:
            attributes:
              items:
                $ref: '#/components/schemas/ArticleAttributeItem'
              type: array
              maxItems: 40
          type: object
      xml:
        name: ParcelItemArticle
      title: ParcelItemArticle
      description: ParcelItemArticle
    ParcelItemValue:
      nullable: true
      description: >-
        deprecated, use
        MandatoryShippingArticleAttribute.attributes.pricePerUnit instead
      properties:
        value:
          type: number
          description: Monetary Value of a single item in the given currency
          example: 15.5
        currency:
          type: string
          description: Currency of the given value
          example: EUR
        decimalPlaces:
          type: integer
          description: Number of decimal places for the given currency
          example: 2
        type:
          $ref: '#/components/schemas/ProductValueType'
      required:
        - value
        - currency
      type: object
      title: ParcelItemValue
    ParcelStatus:
      enum:
        - OPEN
        - PROCESSING
        - DONE
        - FAILED
        - CANCELED
        - OBSOLETE
        - WAITING_FOR_INPUT
      type: string
      title: ParcelStatus
      description: ParcelStatus
    UserModificationHistory:
      additionalProperties: false
      type: object
      required:
        - modificationDate
        - username
      properties:
        userId:
          description: ID of the user who commited this modification
          type: string
        username:
          description: Username of the user who commited this modification
          type: string
        modificationDate:
          format: date-time
          type: string
      title: UserModificationHistory
      description: UserModificationHistory
    PickJob:
      allOf:
        - $ref: '#/components/schemas/PickJobForCreation'
        - $ref: '#/components/schemas/VersionedResource'
        - properties:
            usersModificationHistory:
              type: array
              items:
                $ref: '#/components/schemas/UserModificationHistory'
            anonymized:
              description: Indicates if gdpr related data was anonymized
              example: false
              type: boolean
            deliveryinformation:
              $ref: '#/components/schemas/PickjobDeliveryInformation'
            editor:
              $ref: '#/components/schemas/Editor'
            id:
              description: >-
                The id of this pickjob. It is generated during creation
                automatically and suits as the primary identifier of the
                described entity.
              example: Esb20gpHBL94X5NdMp3C
              type: string
            pickLineItems:
              items:
                $ref: '#/components/schemas/PickLineItem'
              type: array
            expectedPickLineItems:
              items:
                $ref: '#/components/schemas/ExpectedPickLineItem'
              type: array
            shortId:
              description: >-
                A short identifier that helps assigning a pickJob to a customer.
                This is automatically created during creation.
              example: AS12
              type: string
            status:
              $ref: '#/components/schemas/PickJobStatus'
            pickRunRef:
              type: string
              description: Pick run id to which the pick job belongs
            tags:
              type: array
              minItems: 1
              items:
                $ref: '#/components/schemas/TagReference'
            documentHandling:
              $ref: '#/components/schemas/DocumentHandling'
            resetBlocked:
              type: boolean
              default: false
              description: Indicates if pickJob can still be resetted or restarted
            documentsRef:
              description: Reference to the documents collection from this entity
              type: string
            statusReason:
              type: string
              description: >-
                The reason for the current status. Currently, only reroute
                reasons are supported.
            pickingZones:
              type: array
              items:
                $ref: '#/components/schemas/PickingZone'
            assignedUsers:
              type: array
              items:
                $ref: '#/components/schemas/AssignedUser'
              description: Assigned users for this entity
          required:
            - id
            - status
            - pickLineItems
            - shortId
            - deliveryinformation
            - documentsRef
          type: object
      title: PickJob
      description: PickJob
    PickJobForCreation:
      properties:
        operativeProcessRef:
          type: string
        customAttributes:
          description: >-
            Attributes that can be added to the pickjob. These attributes cannot
            be used within fulfillment processes, but it could be useful to have
            the informations carried here.
          type: object
        deliveryinformation:
          $ref: '#/components/schemas/PickjobDeliveryInformationForCreation'
        facilityRef:
          description: >-
            The id of the facility reference. The given ID has to be present in
            the system.
          example: Esb20gpHBL94X5NdMp3C
          type: string
        orderDate:
          description: The date this order was created at the supplying system.
          example: '2020-02-03T08:45:50.525Z'
          format: date-time
          type: string
        orderRef:
          description: >-
            The id of the order reference. The given ID has to be present in the
            system.
          example: LGMl2DuvPnfPoSHhYFOm
          type: string
        pickLineItems:
          items:
            $ref: '#/components/schemas/PickLineItemForCreation'
          minItems: 0
          type: array
        expectedPickLineItems:
          items:
            $ref: '#/components/schemas/ExpectedPickLineItemForCreation'
          minItems: 0
          type: array
        paymentInformation:
          $ref: '#/components/schemas/PaymentInformation'
        processId:
          description: >-
            Id of the global process related to this entity. For example used
            for starting the GDPR process and others.
          type: string
        shortId:
          description: A short identifier that helps assigning a pick job to a customer.
          example: AS12
          type: string
        status:
          $ref: '#/components/schemas/PickJobStatus'
        tenantOrderId:
          description: >-
            Field can be used as a reference number in foreign systems, for
            example as a reference to the source system's identifier for this
            order.
          example: R456728546
          type: string
        tags:
          description: >-
            Tags can only be set when there is no process related with this
            pickJob. Setting processId and tags will lead to an validationError.
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/TagReference'
        stickers:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/Sticker'
        routingPlanRef:
          description: Reference to the routingplan which created this pickjob
          type: string
        preferredPickingMethods:
          description: Preferred way of picking a given pickJob.
          items:
            $ref: '#/components/schemas/PickingMethodEnum'
          type: array
        transfers:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/OperativeTransfer'
        pickingTimes:
          $ref: '#/components/schemas/PickJobPickingTimes'
        assignedUsers:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/AssignedUserForCreationByName'
              - $ref: '#/components/schemas/AssignedUserForCreationById'
          description: Assigned users for this entity
      required:
        - orderDate
        - facilityRef
        - pickLineItems
      additionalProperties: false
      type: object
      xml:
        name: Pickjob
      title: PickJobForCreation
      description: PickJobForCreation
    PickingZone:
      description: Zones from which items can be picked
      properties:
        zoneRef:
          type: string
      required:
        - zoneRef
      title: PickingZone
    PaymentInformation:
      properties:
        currency:
          description: The currency in which the consumer paid with
          example: EUR
          type: string
      type: object
      title: PaymentInformation
      description: PaymentInformation
    ProductInformation:
      properties:
        productName:
          description: The name of the product used by the carrier
          example: Express
          type: string
        carrierCountryServiceMappingRef:
          type: string
          description: Id of the used CarrierCountryServiceMapping
        mandatoryShippingAttributes:
          type: array
          items:
            $ref: '#/components/schemas/MandatoryShippingAttribute'
        mandatoryShippingArticleAttributes:
          type: array
          items:
            $ref: '#/components/schemas/MandatoryShippingArticleAttribute'
        additionalShippingAttributes:
          type: array
          items:
            $ref: '#/components/schemas/AdditionalShippingAttribute'
        additionalShippingArticleAttributes:
          type: array
          items:
            $ref: '#/components/schemas/AdditionalShippingArticleAttribute'
        mandatoryShippingItemAttributes:
          type: array
          items:
            $ref: '#/components/schemas/MandatoryShippingItemAttribute'
      title: ProductInformation
      description: ProductInformation
    PickJobStatusUnprotected:
      description: >-
        The status of a pickjob. These are the status that are still allowed to
        be used in the deprecated status field of ModifyPickJob actions
      enum:
        - OPEN
        - IN_PROGRESS
        - CLOSED
        - PICKED
        - REROUTED
        - REJECTED
        - RESTOWED
        - EXPIRED
        - WAITING_FOR_INPUT
      type: string
      xml:
        name: PickJobStatusUnprotected
      title: PickJobStatusUnprotected
    PickJobStatus:
      description: The status of a pickjob.
      enum:
        - ABORTED
        - OPEN
        - IN_PROGRESS
        - CLOSED
        - PICKED
        - REROUTED
        - REJECTED
        - RESTOWED
        - EXPIRED
        - CANCELED
        - OBSOLETE
        - WAITING_FOR_INPUT
        - PAUSED
      type: string
      xml:
        name: PickJobStatus
      title: PickJobStatus
    PickJobLineItemPartialStockLocationForUpdate:
      properties:
        tenantPartialStockId:
          type: string
        stockRef:
          type: string
        picked:
          example: 21
          format: int64
          minimum: 0
          type: number
        stockEmptied:
          example: true
          type: boolean
      required:
        - tenantPartialStockId
        - picked
      type: object
      title: PickJobLineItemPartialStockLocationForUpdate
      description: PickJobLineItemPartialStockLocationForUpdate
    PickJobLineItemPartialStockLocation:
      allOf:
        - $ref: '#/components/schemas/PickJobLineItemPartialStockLocationForCreation'
      properties:
        picked:
          example: 21
          format: int64
          minimum: 0
          type: number
        stockEmptied:
          example: true
          type: boolean
        zoneRef:
          type: string
        zoneName:
          type: string
      required:
        - tenantPartialStockId
        - stockRef
      type: object
      title: PickJobLineItemPartialStockLocation
      description: PickJobLineItemPartialStockLocation
    PickJobLineItemPartialStockLocationForCreation:
      properties:
        tenantPartialStockId:
          type: string
        stockRef:
          type: string
        quantity:
          description: >-
            quantity of the specific article that should be picked from given
            stockLocation
          example: 21
          format: int64
          minimum: 0
          type: number
        available:
          example: 21
          format: int64
          minimum: 0
          type: number
        ratingScore:
          type: number
        sequenceScore:
          type: number
        location:
          $ref: '#/components/schemas/Location'
        stockProperties:
          anyOf:
            - $ref: '#/components/schemas/PickingStockPropertyPreset'
            - $ref: '#/components/schemas/PickingStockProperty'
      required:
        - tenantPartialStockId
        - stockRef
      type: object
      title: PickJobLineItemPartialStockLocationForCreation
      description: PickJobLineItemPartialStockLocationForCreation
    SubstituteLineItemPartialStockLocation:
      properties:
        quantity:
          example: 21
          format: int64
          minimum: 0
          type: number
        location:
          $ref: '#/components/schemas/Location'
      required:
        - location
        - quantity
      type: object
      title: SubstituteLineItemPartialStockLocation
      description: SubstituteLineItemPartialStockLocation
    PickLineItemArticle:
      allOf:
        - $ref: '#/components/schemas/AbstractArticle'
        - properties:
            attributes:
              items:
                $ref: '#/components/schemas/ArticleAttributeItem'
              type: array
              maxItems: 40
            prices:
              deprecated: true
              items:
                $ref: '#/components/schemas/ArticlePrice'
              type: array
              description: >-
                This part of the API is deprecated. For details please check the
                <a
                href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
                target="_blank">api-release-life-cycle documentation</a>.<br
                /><br />
          type: object
      xml:
        name: PickLineItemArticle
      title: PickLineItemArticle
      description: PickLineItemArticle
    ArticlePrice:
      additionalProperties: false
      type: object
      properties:
        pricePerUnit:
          type: number
          example: 9.99
          description: Price value for a given currency per unit
          minimum: 0
        currency:
          description: The currency of the price as an ISO 4217 code.
          example: EUR
          nullable: true
          allOf:
            - $ref: '#/components/schemas/CurrencyCode'
      required:
        - pricePerUnit
        - currency
      title: ArticlePrice
      description: ArticlePrice
    ReturnedLineItemRefundPrice:
      additionalProperties: false
      properties:
        value:
          example: 20.55
          description: 0.0 till line item price that should be refunded
          type: number
        currency:
          description: The currency of the price as an ISO 4217 code.
          example: EUR
          allOf:
            - $ref: '#/components/schemas/CurrencyCode'
      required:
        - value
        - currency
      title: ReturnedLineItemRefundPrice
      description: ReturnedLineItemRefundPrice
    PickingPatchActions:
      properties:
        actions:
          items:
            anyOf:
              - $ref: '#/components/schemas/ModifyPickLineItemAction'
              - $ref: '#/components/schemas/ModifyPickJobAction'
              - $ref: '#/components/schemas/ModifyPickJobLastEditorAction'
              - $ref: '#/components/schemas/RestartPickJobAction'
              - $ref: '#/components/schemas/ResetPickJobAction'
              - $ref: '#/components/schemas/AbortPickJobAction'
          minItems: 1
          type: array
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
        - actions
      type: object
      xml:
        name: PickingPatchActions
      title: PickingPatchActions
      description: PickingPatchActions
    PickRunPatchAction:
      properties:
        actions:
          items:
            anyOf:
              - $ref: '#/components/schemas/ModifyPickRunLineItemAction'
              - $ref: '#/components/schemas/StartPickRunAction'
              - $ref: '#/components/schemas/CancelPickRunAction'
              - $ref: '#/components/schemas/FinishPickRunAction'
          minItems: 1
          type: array
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
        - actions
      type: object
      xml:
        name: PickRunPatchAction
      title: PickRunPatchAction
      description: PickRunPatchAction
    PickRunPickJobsPatchAction:
      properties:
        actions:
          items:
            anyOf:
              - $ref: '#/components/schemas/RemovePickJobFromPickRunAction'
          minItems: 1
          maxItems: 1
          type: array
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
        - actions
      type: object
      xml:
        name: PickRunPickJobsPatchAction
      title: PickRunPickJobsPatchAction
      description: PickRunPickJobsPatchAction
    CancelPickRunAction:
      title: CancelPickRunAction
      description: >-
        This part of the API is deprecated. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />@deprecated Use api/pickruns/:id/actions instead
      deprecated: true
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: Use value 'CancelPickRun', because you want to cancel a pickrun
              enum:
                - CancelPickRun
              type: string
          required:
            - action
          type: object
      xml:
        name: CancelPickRunAction
    StartPickRunAction:
      title: StartPickRunAction
      description: >-
        This part of the API is deprecated. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />@deprecated Use api/pickruns/:id/actions instead
      deprecated: true
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: Use value 'StartPickRun', because you want to start a pickrun
              enum:
                - StartPickRun
              type: string
          required:
            - action
          type: object
      xml:
        name: StartPickRunAction
    FinishPickRunAction:
      title: FinishPickRunAction
      description: >-
        This part of the API is deprecated. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />@deprecated Use api/pickruns/:id/actions instead
      deprecated: true
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: Use value 'FinishPickRun', because you want to finish a pickrun
              enum:
                - FinishPickRun
              type: string
          required:
            - action
          type: object
      xml:
        name: FinishPickRunAction
    ParcelActionsParameter:
      anyOf:
        - $ref: '#/components/schemas/ParcelSplitItemsActionParameter'
        - $ref: '#/components/schemas/ParcelUpdateRecordableAttributesActionParameter'
      title: ParcelActionsParameter
      description: ParcelActionsParameter
    ParcelSplitItemsActionParameter:
      title: ParcelSplitItemsActionParameter
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/ParcelSplitItemsActionEnum'
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          type: integer
        splitItemsInfo:
          items:
            $ref: '#/components/schemas/ParcelSplitItemsInfo'
          type: array
      required:
        - name
        - version
        - splitItemsInfo
      type: object
      description: ParcelSplitItemsActionParameter
    ParcelSplitItemsActionEnum:
      enum:
        - SPLIT_LINES_PARCEL
      type: string
      title: ParcelSplitItemsActionEnum
      description: ParcelSplitItemsActionEnum
    ParcelSplitItemsInfo:
      additionalProperties: false
      properties:
        itemId:
          type: string
          description: references the id of the item of a parcel
        quantity:
          description: quantity of the specific item that has been ordered
          example: 21
          minimum: 1
          type: integer
      required:
        - itemId
        - quantity
      type: object
      title: ParcelSplitItemsInfo
      description: ParcelSplitItemsInfo
    ParcelUpdateRecordableAttributesActionParameter:
      title: ParcelUpdateRecordableAttributesActionParameter
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/ParcelUpdateRecordableAttributesActionEnum'
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          type: integer
        recordableAttributeUpdates:
          items:
            $ref: '#/components/schemas/RecordableAttributeForUpdate'
          type: array
      required:
        - name
        - version
        - recordableAttributeUpdates
      type: object
      description: ParcelUpdateRecordableAttributesActionParameter
    ParcelUpdateRecordableAttributesActionEnum:
      enum:
        - UPDATE_RECORDABLE_ATTRIBUTES_PARCEL
      type: string
      title: ParcelUpdateRecordableAttributesActionEnum
      description: ParcelUpdateRecordableAttributesActionEnum
    PickJobActionsParameter:
      anyOf:
        - $ref: '#/components/schemas/PickJobAbortActionParameter'
        - $ref: '#/components/schemas/PickJobRestartActionParameter'
        - $ref: '#/components/schemas/PickJobResetActionParameter'
        - $ref: '#/components/schemas/PickJobObsoleteActionParameter'
        - $ref: '#/components/schemas/ModifyPickLineItemsActionParameter'
        - $ref: '#/components/schemas/PickJobReplaceAssignedUsersActionParameter'
        - $ref: '#/components/schemas/PickJobPauseActionParameter'
        - $ref: '#/components/schemas/PickJobSplitLineItemsActionParameter'
        - $ref: >-
            #/components/schemas/PickJobUpdateRecordableAttributesActionParameter
      title: PickJobActionsParameter
      description: PickJobActionsParameter
    PackJobReplaceAssignedUsersActionParameter:
      additionalProperties: false
      title: PackJobReplaceAssignedUsersActionParameter
      description: Action to replace the assigned users.
      properties:
        name:
          $ref: '#/components/schemas/PackJobReplaceAssignedUsersActionEnum'
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
        assignedUsers:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/AssignedUserForCreationByName'
              - $ref: '#/components/schemas/AssignedUserForCreationById'
          description: Assigned users for this entity
      required:
        - name
        - version
        - assignedUsers
    PackJobReplaceAssignedUsersActionEnum:
      enum:
        - REPLACE_ASSIGNED_USERS
      type: string
      title: PackJobReplaceAssignedUsersActionEnum
      description: PackJobReplaceAssignedUsersActionEnum
    PackJobActionsParameter:
      anyOf:
        - $ref: '#/components/schemas/PackJobReplaceAssignedUsersActionParameter'
        - $ref: '#/components/schemas/PackJobSplitLineItemsActionParameter'
        - $ref: >-
            #/components/schemas/PackJobUpdateRecordableAttributesActionParameter
      title: PackJobActionsParameter
      description: PackJobActionsParameter
    PickJobReplaceAssignedUsersActionParameter:
      title: PickJobReplaceAssignedUsersActionParameter
      description: Action to replace the assigned users.
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/PickJobReplaceAssignedUsersActionEnum'
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
        assignedUsers:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/AssignedUserForCreationByName'
              - $ref: '#/components/schemas/AssignedUserForCreationById'
          description: Assigned users for this entity
      required:
        - name
        - version
        - assignedUsers
    PickJobReplaceAssignedUsersActionEnum:
      enum:
        - REPLACE_ASSIGNED_USERS
      type: string
      title: PickJobReplaceAssignedUsersActionEnum
      description: PickJobReplaceAssignedUsersActionEnum
    PickJobAbortActionParameter:
      title: PickJobAbortActionParameter
      description: Action to Abort a Pickjob.
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/PickJobAbortActionEnum'
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
      required:
        - name
        - version
    PickJobAbortActionEnum:
      enum:
        - ABORT
      type: string
      title: PickJobAbortActionEnum
      description: PickJobAbortActionEnum
    PickJobRestartActionParameter:
      title: PickJobRestartActionParameter
      description: Action to Restart a Pickjob.
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/PickJobRestartActionEnum'
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
      required:
        - name
        - version
    PickJobRestartActionEnum:
      enum:
        - RESTART
      type: string
      title: PickJobRestartActionEnum
      description: PickJobRestartActionEnum
    PickJobObsoleteActionParameter:
      title: PickJobObsoleteActionParameter
      description: Action to set the status to Obsolete of a Pickjob.
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/PickJobObsoleteActionEnum'
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
      required:
        - name
        - version
    ModifyPickLineItemsActionParameter:
      title: ModifyPickLineItemsActionParameter
      description: Action to modify picklineItems of a Pickjob.
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/ModifyPickJobLineItemsActionEnum'
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
        pickJobLineItemUpdates:
          items:
            $ref: '#/components/schemas/PickLineItemUpdate'
          minItems: 1
      required:
        - name
        - version
        - pickJobLineItemUpdates
    PickLineItemUpdate:
      properties:
        id:
          description: >-
            The id of this lineItem. It is generated during creation
            automatically and suits as the primary identifier of the described
            entity.
          example: climk4dcQFiPdA5ULuhS
          type: string
        picked:
          description: The amount of articles that were picked for this pickline.
          example: 20
          format: int64
          minimum: 0
          type: integer
        pickedAt:
          description: >-
            Date when the line has been picked. example:
            '2024-02-03T08:45:51.525Z' format: date-time type: string
        customAttributes:
          description: >-
            Attributes that can be added to the pick ine item. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the informations carried here.
          type: object
        stockEmptied:
          example: true
          type: boolean
        stickers:
          items:
            $ref: '#/components/schemas/Sticker'
          type: array
        partialStockLocations:
          items:
            $ref: '#/components/schemas/PickJobLineItemPartialStockLocationForUpdate'
        scannedCodes:
          description: Scanned Codes of the given picked line item
          items:
            $ref: '#/components/schemas/PickLineItemScannedCode'
          minItems: 0
        status:
          $ref: '#/components/schemas/PickLineItemStatus'
        secondaryPicked:
          type: integer
        substituteLineItems:
          description: >-
            This part of the API is in Beta status. For details please check the
            <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />
          items:
            $ref: '#/components/schemas/SubstituteLineItemForCreation'
          type: array
          x-badges:
            - color: orange
              label: BETA
        shortPickReason:
          properties:
            reasonLocalized:
              description: Localized reason
              example: '{ en_US: ''SomeName'' }'
              $ref: '#/components/schemas/LocaleString'
      required:
        - id
      type: object
      additionalProperties: false
      title: PickLineItemUpdate
      description: PickLineItemUpdate
    ModifyPickJobLineItemsActionEnum:
      enum:
        - MODIFY_PICK_JOB_LINE_ITEMS
      type: string
      title: ModifyPickJobLineItemsActionEnum
      description: ModifyPickJobLineItemsActionEnum
    PickJobObsoleteActionEnum:
      enum:
        - OBSOLETE
      type: string
      title: PickJobObsoleteActionEnum
      description: PickJobObsoleteActionEnum
    PickJobResetActionParameter:
      title: PickJobResetActionParameter
      description: Action to reset a Pickjob.
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/PickJobResetActionEnum'
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
      required:
        - name
        - version
    PickJobResetActionEnum:
      enum:
        - RESET
      type: string
      title: PickJobResetActionEnum
      description: PickJobResetActionEnum
    PickJobPauseActionParameter:
      title: PickJobPauseActionParameter
      description: Action to pause a Pickjob.
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/PickJobPauseActionEnum'
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
      required:
        - name
        - version
    PickJobPauseActionEnum:
      enum:
        - PAUSE
      type: string
      title: PickJobPauseActionEnum
      description: PickJobPauseActionEnum
    PickJobSplitLineItemsActionParameter:
      title: PickJobSplitLineItemsActionParameter
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/PickJobSplitLineItemsActionEnum'
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          type: integer
        splitLineItemsInfo:
          items:
            $ref: '#/components/schemas/PickJobSplitLineItemsInfo'
          type: array
      required:
        - name
        - version
        - splitLineItemsInfo
      type: object
      description: PickJobSplitLineItemsActionParameter
    PickJobSplitLineItemsActionEnum:
      enum:
        - SPLIT_LINES_PICK_JOB
      type: string
      title: PickJobSplitLineItemsActionEnum
      description: PickJobSplitLineItemsActionEnum
    PickJobSplitLineItemsInfo:
      additionalProperties: false
      properties:
        lineItemId:
          type: string
          description: references the id of the pickLineItem of a pickJob
        quantity:
          description: quantity of the specific item that has been ordered
          example: 21
          minimum: 1
          type: integer
        picked:
          description: The amount of articles that were picked for this line item.
          example: 20
          format: int64
          minimum: 0
          type: integer
      required:
        - lineItemId
        - quantity
        - picked
      type: object
      title: PickJobSplitLineItemsInfo
      description: PickJobSplitLineItemsInfo
    PickJobUpdateRecordableAttributesActionParameter:
      title: PickJobUpdateRecordableAttributesActionParameter
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/PickJobUpdateRecordableAttributesActionEnum'
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          type: integer
        recordableAttributeUpdates:
          items:
            $ref: '#/components/schemas/RecordableAttributeForUpdate'
          type: array
      required:
        - name
        - version
        - recordableAttributeUpdates
      type: object
      description: PickJobUpdateRecordableAttributesActionParameter
    PickJobUpdateRecordableAttributesActionEnum:
      enum:
        - UPDATE_RECORDABLE_ATTRIBUTES_PICK_JOB
      type: string
      title: PickJobUpdateRecordableAttributesActionEnum
      description: PickJobUpdateRecordableAttributesActionEnum
    PackingTargetContainerActionsParameter:
      anyOf:
        - $ref: '#/components/schemas/UpdatePackingTargetContainerLineItemAction'
        - $ref: >-
            #/components/schemas/ReplacePackingTargetContainerLineItemCodesAction
      title: PackingTargetContainerActionsParameter
      description: PackingTargetContainerActionsParameter
    UpdatePackingTargetContainerLineItemAction:
      title: UpdatePackingTargetContainerLineItemAction
      description: Action to update a packing target container of a line item.
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/UpdatePackingTargetContainerLineItemEnum'
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
        payload:
          additionalProperties: false
          properties:
            lineItem:
              $ref: '#/components/schemas/PackingTargetContainerLineItem'
          required:
            - lineItem
      required:
        - version
        - payload
        - name
    UpdatePackingTargetContainerLineItemEnum:
      enum:
        - UpdateLineItem
      type: string
      title: UpdatePackingTargetContainerLineItemEnum
      description: UpdatePackingTargetContainerLineItemEnum
    ReplacePackingTargetContainerLineItemCodesEnum:
      enum:
        - ReplaceLineItemCodes
      type: string
      title: ReplacePackingTargetContainerLineItemCodesEnum
      description: ReplacePackingTargetContainerLineItemCodesEnum
    ReplacePackingTargetContainerLineItemCodesAction:
      title: ReplacePackingTargetContainerLineItemCodesAction
      description: Action to replace packing target container codes of a line item.
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/ReplacePackingTargetContainerLineItemCodesEnum'
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
        payload:
          additionalProperties: false
          properties:
            codes:
              items:
                description: List of codes
                type: string
                minItems: 1
              type: array
          required:
            - codes
      required:
        - payload
        - version
        - name
    PickRunActionsParameter:
      anyOf:
        - $ref: '#/components/schemas/PickRunStartActionParameter'
        - $ref: '#/components/schemas/PickRunFinishActionParameter'
        - $ref: '#/components/schemas/PickRunCancelActionParameter'
        - $ref: '#/components/schemas/PickRunRemovePickJobActionParameter'
        - $ref: '#/components/schemas/PickRunSplitLineItemsActionParameter'
      title: PickRunActionsParameter
      description: PickRunActionsParameter
    PickRunFinishActionParameter:
      title: PickRunFinishActionParameter
      description: Action to finish a PickRun.
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/PickRunFinishActionEnum'
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
      required:
        - name
        - version
    PickRunFinishActionEnum:
      enum:
        - FINISH
      type: string
      title: PickRunFinishActionEnum
      description: PickRunFinishActionEnum
    PickRunStartActionParameter:
      title: PickRunStartActionParameter
      description: Action to start a PickRun.
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/PickRunStartActionEnum'
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
      required:
        - name
        - version
    PickRunStartActionEnum:
      enum:
        - START
      type: string
      title: PickRunStartActionEnum
      description: PickRunStartActionEnum
    PickRunRemovePickJobActionParameter:
      title: PickRunRemovePickJobActionParameter
      description: Action to Remove a Pickjob from a PickRun.
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/PickRunRemovePickJobActionEnum'
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
        payload:
          additionalProperties: false
          properties:
            pickJobId:
              type: string
              example: 4baaa052-7286-4dc2-937f-6e703ece25ac
          required:
            - pickJobId
      required:
        - name
        - version
        - payload
    PickRunRemovePickJobActionEnum:
      enum:
        - REMOVE_PICK_JOB
      type: string
      title: PickRunRemovePickJobActionEnum
      description: PickRunRemovePickJobActionEnum
    PickRunCancelActionParameter:
      title: PickRunCancelActionParameter
      description: Action to cancel a PickRun.
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/PickRunCancelActionEnum'
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
      required:
        - name
        - version
    PickRunCancelActionEnum:
      enum:
        - CANCEL
      type: string
      title: PickRunCancelActionEnum
      description: PickRunCancelActionEnum
    PickRunSplitLineItemsActionParameter:
      title: PickRunSplitLineItemsActionParameter
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/PickRunSplitLineItemsActionEnum'
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          type: integer
        splitLineItemsInfo:
          items:
            $ref: '#/components/schemas/PickRunSplitLineItemsInfo'
          type: array
      required:
        - name
        - version
        - splitLineItemsInfo
      type: object
      description: PickRunSplitLineItemsActionParameter
    PickRunSplitLineItemsActionEnum:
      enum:
        - SPLIT_LINES_PICK_RUN
      type: string
      title: PickRunSplitLineItemsActionEnum
      description: PickRunSplitLineItemsActionEnum
    PickRunSplitLineItemsInfo:
      additionalProperties: false
      properties:
        lineItemId:
          type: string
          description: references the id of the pickLineItem of a pickRun
        quantity:
          description: quantity of the specific item that has been ordered
          example: 21
          minimum: 1
          type: integer
        picked:
          description: The amount of articles that were picked for this line item.
          example: 20
          format: int64
          minimum: 0
          type: integer
      required:
        - lineItemId
        - quantity
        - picked
      type: object
      title: PickRunSplitLineItemsInfo
      description: PickRunSplitLineItemsInfo
    HandoverJobActionsParameter:
      anyOf:
        - $ref: '#/components/schemas/HandoverJobCancelActionParameter'
        - $ref: '#/components/schemas/HandoverJobLineItemUpdateActionParameter'
        - $ref: '#/components/schemas/FinishHandoverJobActionParameter'
        - $ref: '#/components/schemas/HandoverJobReplaceAssignedUsersActionParameter'
        - $ref: '#/components/schemas/HandoverJobSplitLineItemsActionParameter'
        - $ref: >-
            #/components/schemas/HandoverJobUpdateRecordableAttributesActionParameter
      title: HandoverJobActionsParameter
      description: HandoverJobActionsParameter
    HandoverJobReplaceAssignedUsersActionParameter:
      title: HandoverJobReplaceAssignedUsersActionParameter
      description: Action to replace the assigned users.
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/HandoverJobReplaceAssignedUsersActionEnum'
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
        assignedUsers:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/AssignedUserForCreationByName'
              - $ref: '#/components/schemas/AssignedUserForCreationById'
          description: Assigned users for this entity
      required:
        - name
        - version
        - assignedUsers
    HandoverJobReplaceAssignedUsersActionEnum:
      enum:
        - REPLACE_ASSIGNED_USERS
      type: string
      title: HandoverJobReplaceAssignedUsersActionEnum
      description: HandoverJobReplaceAssignedUsersActionEnum
    HandoverJobSplitLineItemsActionParameter:
      title: HandoverJobSplitLineItemsActionParameter
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/HandoverJobSplitLineItemsActionEnum'
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          type: integer
        splitLineItemsInfo:
          items:
            $ref: '#/components/schemas/HandoverJobSplitLineItemsInfo'
          type: array
      required:
        - name
        - version
        - splitLineItemsInfo
      type: object
      description: HandoverJobSplitLineItemsActionParameter
    HandoverJobSplitLineItemsActionEnum:
      enum:
        - SPLIT_LINES_HANDOVER_JOB
      type: string
      title: HandoverJobSplitLineItemsActionEnum
      description: HandoverJobSplitLineItemsActionEnum
    HandoverJobSplitLineItemsInfo:
      additionalProperties: false
      properties:
        lineItemId:
          type: string
          description: references the id of the line item of a handover job
        quantity:
          description: quantity of the specific item that has been ordered
          example: 21
          minimum: 1
          type: integer
        handedOverQuantity:
          description: The amount of articles that were handed over for this line item.
          example: 20
          format: int64
          minimum: 0
          type: integer
      required:
        - lineItemId
        - quantity
        - handedOverQuantity
      type: object
      title: HandoverJobSplitLineItemsInfo
      description: HandoverJobSplitLineItemsInfo
    HandoverJobUpdateRecordableAttributesActionParameter:
      title: HandoverJobUpdateRecordableAttributesActionParameter
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/HandoverJobUpdateRecordableAttributesActionEnum'
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          type: integer
        recordableAttributeUpdates:
          items:
            $ref: '#/components/schemas/RecordableAttributeForUpdate'
          type: array
      required:
        - name
        - version
        - recordableAttributeUpdates
      type: object
      description: HandoverJobUpdateRecordableAttributesActionParameter
    HandoverJobUpdateRecordableAttributesActionEnum:
      enum:
        - UPDATE_RECORDABLE_ATTRIBUTES_HANDOVER_JOB
      type: string
      title: HandoverJobUpdateRecordableAttributesActionEnum
      description: HandoverJobUpdateRecordableAttributesActionEnum
    HandoverJobCancelActionParameter:
      title: HandoverJobCancelActionParameter
      description: Action to cancel a handoverjob.
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/HandoverJobCancelActionEnum'
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
        payload:
          additionalProperties: false
          properties:
            handoverJobCancelReason:
              $ref: '#/components/schemas/HandoverJobCancelReason'
          required:
            - handoverJobCancelReason
      required:
        - name
        - version
        - payload
    HandoverJobLineItemUpdateActionParameter:
      title: HandoverJobLineItemUpdateActionParameter
      description: Action to update a lineItem of a handoverjob.
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/HandoverJobLineItemUpdateActionEnum'
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
        lineItem:
          additionalProperties: false
          properties:
            id:
              type: string
            refused:
              items:
                $ref: '#/components/schemas/RefusedItemForUpdate'
            substituteItems:
              type: array
              items:
                $ref: '#/components/schemas/HandoverSubstituteLineItemForUpdate'
          required:
            - id
      required:
        - name
        - version
        - lineItem
    FinishHandoverJobActionParameter:
      title: FinishHandoverJobActionParameter
      description: Action to finish a handoverjob.
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/FinishHandoverJobActionEnum'
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
        lineItems:
          additionalProperties: false
          type: array
          items:
            $ref: '#/components/schemas/FinishHandoverJobLineItem'
      required:
        - name
        - version
        - lineItems
    RefusedItem:
      properties:
        quantity:
          type: integer
          minimum: 0
        reason:
          type: string
        reasonLocalized:
          $ref: '#/components/schemas/LocaleString'
        comment:
          type: string
      required:
        - quantity
      title: RefusedItem
      description: RefusedItem
    RefusedItemForUpdate:
      properties:
        quantity:
          type: integer
          minimum: 0
        reasonLocalized:
          $ref: '#/components/schemas/LocaleString'
        comment:
          type: string
      required:
        - quantity
      title: RefusedItemForUpdate
      description: RefusedItemForUpdate
    HandoverSubstituteLineItemForUpdate:
      properties:
        id:
          type: string
        refused:
          type: array
          items:
            $ref: '#/components/schemas/RefusedItemForUpdate'
      required:
        - id
      title: HandoverSubstituteLineItemForUpdate
      description: HandoverSubstituteLineItemForUpdate
    FinishHandoverJobLineItem:
      additionalProperties: false
      properties:
        id:
          type: string
        handedOverQuantity:
          type: number
        refused:
          type: array
          items:
            $ref: '#/components/schemas/RefusedItemForUpdate'
        substituteLineItems:
          type: array
          items:
            $ref: '#/components/schemas/FinishHandoverJobSubstituteLineItem'
      required:
        - id
        - handedOverQuantity
      title: FinishHandoverJobLineItem
      description: FinishHandoverJobLineItem
    FinishHandoverJobSubstituteLineItem:
      properties:
        id:
          type: string
        handedOverQuantity:
          minimum: 0
          type: integer
        refused:
          type: array
          items:
            $ref: '#/components/schemas/RefusedItemForUpdate'
      required:
        - id
        - handedOverQuantity
      title: FinishHandoverJobSubstituteLineItem
      description: FinishHandoverJobSubstituteLineItem
    HandoverJobCancelActionEnum:
      enum:
        - CANCEL
      type: string
      title: HandoverJobCancelActionEnum
      description: HandoverJobCancelActionEnum
    HandoverJobLineItemUpdateActionEnum:
      enum:
        - UPDATE_LINEITEM
      type: string
      title: HandoverJobLineItemUpdateActionEnum
      description: HandoverJobLineItemUpdateActionEnum
    FinishHandoverJobActionEnum:
      enum:
        - FINISH_HANDOVER_JOB
      type: string
      title: FinishHandoverJobActionEnum
      description: FinishHandoverJobActionEnum
    ModifyPickRunLineItemAction:
      title: ModifyPickRunLineItemAction
      description: Action to modify a lineitem of a pickrun
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - properties:
            action:
              description: >-
                Use value 'ModifyPickRunLineItem', because you want to modify a
                pick line item
              enum:
                - ModifyPickRunLineItem
              type: string
            id:
              description: >-
                The id of this lineItem. It is generated during creation
                automatically and suits as the primary identifier of the
                described entity.
              example: climk4dcQFiPdA5ULuhS
              type: string
            picked:
              description: The amount of articles that were picked for this pickline.
              example: 20
              format: int64
              minimum: 0
              type: integer
            secondaryPicked:
              description: >-
                The secondary amount of articles that were picked for this
                pickline.
              example: 20
              format: int64
              minimum: 0
              type: integer
            status:
              $ref: '#/components/schemas/PickLineItemStatus'
            partialStockLocations:
              items:
                $ref: >-
                  #/components/schemas/PickJobLineItemPartialStockLocationForUpdate
            shortPickReason:
              $ref: '#/components/schemas/ShortPickReasonForUpsert'
          required:
            - id
            - action
          type: object
      xml:
        name: ModifyPickRunLineItemAction
    ShortPickReasonForUpsert:
      additionalProperties: false
      type: object
      properties:
        reasonLocalized:
          $ref: '#/components/schemas/LocaleString'
      title: ShortPickReasonForUpsert
      description: ShortPickReasonForUpsert
    RemovePickJobFromPickRunAction:
      title: RemovePickJobFromPickRunAction
      deprecated: true
      description: >-
        This part of the API is deprecated. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />@deprecated Use /api/pickruns/{pickRunId}/actions instead
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: >-
                Use value 'RemovePickJobFromPickRunAction', because you want to
                remove a pickjob
              enum:
                - RemovePickJobFromPickRunAction
              type: string
            pickJobRef:
              description: PickJob reference of the PickJob you want to remove.
              type: string
          required:
            - action
            - pickJobRef
          type: object
      xml:
        name: RemovePickJobFromPickRunAction
    PickingTimes:
      description: >-
        Time ranges defining the picking times per weekday. No overlapping
        ranges are allowed. There must be no overlaps for time ranges on a day
      properties:
        friday:
          items:
            $ref: '#/components/schemas/TimeRange'
          type: array
        monday:
          items:
            $ref: '#/components/schemas/TimeRange'
          type: array
        saturday:
          items:
            $ref: '#/components/schemas/TimeRange'
          type: array
        sunday:
          items:
            $ref: '#/components/schemas/TimeRange'
          type: array
        thursday:
          items:
            $ref: '#/components/schemas/TimeRange'
          type: array
        tuesday:
          items:
            $ref: '#/components/schemas/TimeRange'
          type: array
        wednesday:
          items:
            $ref: '#/components/schemas/TimeRange'
          type: array
      type: object
      title: PickingTimes
    PickjobDeliveryInformation:
      allOf:
        - $ref: '#/components/schemas/PickjobDeliveryInformationForCreation'
        - required:
            - targetTime
            - channel
      title: PickjobDeliveryInformation
      description: PickjobDeliveryInformation
    PickjobDeliveryInformationForCreation:
      properties:
        channel:
          enum:
            - COLLECT
            - SHIPPING
          type: string
        details:
          properties:
            collect:
              properties:
                identifier:
                  description: Includes information about Click & Collect recipient
                  type: string
                paid:
                  default: false
                  description: Indicates if the order is already paid.
                  type: boolean
              type: object
            shipping:
              properties:
                carrierKey:
                  type: string
                carrierProductCategory:
                  $ref: '#/components/schemas/CarrierProductCategory'
                carrierProduct:
                  description: >-
                    Desired product of given carrier to choose when ordering a
                    label, this is specific to a carrier
                  type: string
                  example: EXPRESS
                carrierServices:
                  type: array
                  items:
                    $ref: '#/components/schemas/CarrierServices'
                identifier:
                  description: >-
                    Includes information on how to identify Ship from Store
                    recipient (Name, PIN, Reference number, ...)
                  type: string
                recipientaddress:
                  $ref: '#/components/schemas/ConsumerAddress'
                invoiceAddress:
                  $ref: '#/components/schemas/ConsumerAddress'
                postalAddress:
                  $ref: '#/components/schemas/ConsumerAddress'
                serviceLevel:
                  description: TBD
                  enum:
                    - DELIVERY
                    - SAMEDAY
                  type: string
              type: object
          type: object
        targetTime:
          description: At which time the result is expected.
          example: '2020-02-03T09:45:51.525Z'
          format: date-time
          type: string
        targetTimeBaseDate:
          description: The start date for the targetTime calculation.
          example: '2020-02-03T08:45:50.525Z'
          format: date-time
          type: string
      type: object
      title: PickjobDeliveryInformationForCreation
      description: PickjobDeliveryInformationForCreation
    PreselectedFacility:
      properties:
        facilityRef:
          description: Reference to the facility which is supposed to fulfill the order
          type: string
      required:
        - facilityRef
      type: object
      title: PreselectedFacility
      description: PreselectedFacility
    PrioritizationRule:
      description: >-
        You can select a default Prioritization Rule from the catalog. When you
        decide to select 'CUSTOM' you must also provide a vmExpression to match
        the type CustomPrioritizationRule.
      properties:
        active:
          type: boolean
        id:
          description: >-
            This value identifies this very instance of the prioritization rule.
            It is set autmatically by the server when the configuration is
            updated.
          example: 9156fafb-d0b4-4f99-815e-5f231cb50fae
          type: string
        implementation:
          $ref: '#/components/schemas/PrioritizationRuleImplementation'
        name:
          type: string
      required:
        - active
        - name
        - implementation
      type: object
      title: PrioritizationRule
    PrioritizationRuleImplementation:
      enum:
        - CUSTOM
      type: string
      xml:
        name: PrioritizationRuleImplementation
      title: PrioritizationRuleImplementation
      description: PrioritizationRuleImplementation
    Processes:
      properties:
        processes:
          items:
            $ref: '#/components/schemas/Process'
          type: array
        total:
          description: Total number of found entities for this query
          example: 42
          type: integer
      type: object
      title: Processes
      description: Processes
    DomainStatusHistoryItem:
      description: >-
        This item represent a process status change triggered by a specific
        domain.
      properties:
        timestamp:
          description: >-
            Timestamp of the moment at which the state was notified by the
            domain.
          example: '2020-02-03T08:45:50.525Z'
          format: date-time
          type: string
        domain:
          description: The domain of the entity that caused the status change.
          $ref: '#/components/schemas/DomainType'
        domainRef:
          description: The id of the domain entity that caused the status change.
          type: string
        domainEntityProcessStatus:
          description: The assigned status
          $ref: '#/components/schemas/DomainStatus'
        statusChangeReasonKey:
          description: >-
            This property captures the reason for the entity’s status change.
            Each domain can define its own set of reasons, represented as an
            ENUM
          type: string
      required:
        - timestamp
        - domain
        - domainEntityProcessStatus
        - domainRef
      type: object
      title: DomainStatusHistoryItem
    LastDomainEntityStatusItem:
      description: >-
        An object holding the last DomainStatus of a given entity and its
        corresponding domain.
      properties:
        domain:
          description: The domain of the entity that caused the status change.
          $ref: '#/components/schemas/DomainType'
        status:
          description: The status of the entity.
          $ref: '#/components/schemas/DomainStatus'
        entityId:
          description: The entity id
          type: string
      required:
        - domain
        - status
        - entityId
      type: object
      title: LastDomainEntityStatusItem
    Process:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        tags:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/TagReference'
        flatRefs:
          description: >-
            This field references all IDs of any entity connected to this
            process.
          items:
            type: string
          type: array
        gdprCleanupDate:
          description: >-
            The date that defines when the entities will be or have been
            anonymized.
          example: '2020-02-03T08:45:50.525Z'
          format: date-time
          type: string
        deletionDate:
          description: >-
            The date that defines when the entities will be or have been
            deleted.
          example: '2020-02-03T08:45:50.525Z'
          format: date-time
          type: string
        handoverJobRefs:
          description: References to Handoverjobs connected to this process (if present).
          items:
            type: string
          type: array
        id:
          description: ID of this process
          type: string
        isAnonymized:
          description: Indicates if the entities have been anonymized.
          type: boolean
        orderRef:
          description: References to the Order connected to this process (if present).
          type: string
        routingPlanRefs:
          description: >-
            References the RoutingPlans that were used during this process (if
            present).
          items:
            type: string
          type: array
        pickJobRefs:
          description: References to the Pickjobs connected to this process (if present).
          items:
            type: string
          type: array
        returnRefs:
          description: References to the Returns connected to this process (if present).
          items:
            type: string
          type: array
        itemReturnJobsRef:
          description: >-
            References to the Item Return Job connected to this process (if
            present).
          items:
            type: string
          type: array
        shipmentRefs:
          description: References to the Shipments connected to this process (if present).
          items:
            type: string
          type: array
        tenantOrderId:
          description: The tenantOrderId referencing this process.
          type: string
        documentRefs:
          description: References to documents that are attached to this process.
          items:
            type: string
          type: array
        status:
          description: Overall status of the process.
          $ref: '#/components/schemas/ProcessStatus'
          default: CREATED
        domsStatus:
          description: Overall DOMS status of the process.
          $ref: '#/components/schemas/ProcessStatus'
          default: CREATED
        operativeStatus:
          description: Overall operative status of the process
          $ref: '#/components/schemas/ProcessStatus'
          default: CREATED
        returnStatus:
          description: Overall return status of the process
          $ref: '#/components/schemas/ProcessStatus'
          default: NOT_AVAILABLE
        domainStatuses:
          type: object
          description: Overview of the different domain adherent status of the process.
          additionalProperties:
            $ref: '#/components/schemas/DomainStatus'
        lastDomainEntityStatuses:
          type: array
          description: The last domain statuses of each domain
          items:
            $ref: '#/components/schemas/LastDomainEntityStatusItem'
        packJobRefs:
          description: References of the Packjobs connected to this process (if present).
          items:
            type: string
          type: array
        facilityRefs:
          description: References of the Facilities connected to this process (if any).
          items:
            type: string
          type: array
        domainStatusHistory:
          description: >-
            History of process status changes caused by changes on the related
            domains.
          type: array
          items:
            $ref: '#/components/schemas/DomainStatusHistoryItem'
        serviceJobRefs:
          description: >-
            References to the Service Jobs connected to this process (if
            present).
          items:
            type: string
          type: array
        externalActionRefs:
          description: >-
            References to the external actions connected to this process (if
            any).
          items:
            type: string
          type: array
      required:
        - gdprCleanupDate
        - id
      type: object
      title: Process
      description: Process
    ProcessProgressLog:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        id:
          type: string
        processRef:
          type: string
        domainEntityProcessStatus:
          $ref: '#/components/schemas/DomainStatus'
        domain:
          $ref: '#/components/schemas/DomainType'
        domainRef:
          type: string
        domainStatus:
          type: string
        domainLastModified:
          description: The last modified date of the related domain entity
          example: '2020-02-03T09:45:51.525Z'
          format: date-time
          type: string
        domainVersion:
          description: The version of the related domain entity
          example: 1
          format: int64
          type: integer
        attributes:
          type: object
        statusChangeReasonKey:
          description: >-
            This property captures the reason for the entity’s status change.
            Each domain can define its own set of reasons, represented as an
            ENUM
          type: string
      required:
        - id
        - domainVersion
        - processRef
        - domainEntityProcessStatus
        - domain
        - domainRef
        - domainStatus
      title: ProcessProgressLog
      description: ProcessProgressLog
    DomainStatus:
      enum:
        - PENDING
        - CREATED
        - IN_PROGRESS
        - STUCK
        - FINISHED
        - CANCELED
        - OBSOLETE
      type: string
      title: DomainStatus
      description: DomainStatus
    ProcessStatus:
      enum:
        - CREATED
        - IN_PROGRESS
        - FINISHED
        - CANCELED
        - ERROR
        - NOT_AVAILABLE
      type: string
      title: ProcessStatus
      description: ProcessStatus
    DomainType:
      enum:
        - ORDER
        - ROUTING_PLAN
        - PICKJOB
        - PACKJOB
        - SHIPMENT
        - HANDOVER
        - RETURN
        - SERVICE_JOB
        - ITEM_RETURN_JOB
        - PARCEL
      type: string
      title: DomainType
      description: DomainType
    Section:
      enum:
        - ORDER
        - PACKJOB
        - PICKJOB
        - HANDOVERJOB
        - PARCEL
        - PACKING_TARGET_CONTAINER
      type: string
      title: Section
      description: Section
    DocumentType:
      enum:
        - PDF
        - PNG
        - JPG
        - GIF
        - JPEG
        - XML
        - JSON
      type: string
      title: DocumentType
      description: DocumentType
    ExternalDocument:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        type:
          $ref: '#/components/schemas/DocumentType'
        section:
          $ref: '#/components/schemas/Section'
        name:
          type: string
        path:
          type: string
        id:
          type: string
        priority:
          type: number
          minimum: 0
      required:
        - type
        - section
        - id
      type: object
      title: ExternalDocument
      description: ExternalDocument
    ExternalDocumentInSectionForCreation:
      additionalProperties: false
      properties:
        type:
          $ref: '#/components/schemas/DocumentType'
        file:
          $ref: '#/components/schemas/NamedFile'
        priority:
          type: number
          minimum: 0
      required:
        - type
      type: object
      title: ExternalDocumentInSectionForCreation
      description: ExternalDocumentInSectionForCreation
    ExternalDocumentForCreation:
      additionalProperties: false
      properties:
        type:
          $ref: '#/components/schemas/DocumentType'
        section:
          $ref: '#/components/schemas/Section'
        file:
          $ref: '#/components/schemas/NamedFile'
        priority:
          type: number
          minimum: 0
      required:
        - type
        - section
      type: object
      title: ExternalDocumentForCreation
      description: ExternalDocumentForCreation
    ExternalDocumentForUpdate:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        file:
          $ref: '#/components/schemas/NamedFile'
      required:
        - file
      type: object
      title: ExternalDocumentForUpdate
      description: ExternalDocumentForUpdate
    OidcProviders:
      properties:
        providers:
          items:
            $ref: '#/components/schemas/StrippedOidcProvider'
          type: array
        total:
          type: number
      required:
        - providers
        - total
      title: OidcProviders
      description: OidcProviders
    OidcProviderForUpdate:
      allOf:
        - $ref: '#/components/schemas/OidcProviderForCreation'
      properties:
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
      title: OidcProviderForUpdate
      description: OidcProviderForUpdate
    OidcProviderForCreation:
      properties:
        name:
          type: string
          minLength: 3
          maxLength: 15
        status:
          $ref: '#/components/schemas/OidcProviderStatus'
        issuer:
          type: string
        clientId:
          type: string
        customParameters:
          type: array
          items:
            $ref: '#/components/schemas/OidcProviderCustomParameter'
          minItems: 0
          maxItems: 3
        clientSecret:
          type: string
        assignedGroups:
          type: array
          items:
            $ref: '#/components/schemas/AssignedGroup'
      required:
        - clientSecret
        - name
        - status
        - issuer
        - clientId
        - customParameters
        - assignedGroups
      title: OidcProviderForCreation
      description: OidcProviderForCreation
    OidcProviderCustomParameter:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
      required:
        - key
        - value
      title: OidcProviderCustomParameter
      description: OidcProviderCustomParameter
    StrippedOidcProvider:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        id:
          type: string
        name:
          type: string
          minLength: 3
          maxLength: 15
        status:
          $ref: '#/components/schemas/OidcProviderStatus'
        issuer:
          type: string
        clientId:
          type: string
        customParameters:
          items:
            $ref: '#/components/schemas/OidcProviderCustomParameter'
          minItems: 0
          maxItems: 3
          type: array
        assignedGroups:
          type: array
          items:
            $ref: '#/components/schemas/AssignedGroup'
      required:
        - id
        - name
        - status
        - issuer
        - clientId
        - customParameters
        - assignedGroups
      title: StrippedOidcProvider
      description: StrippedOidcProvider
    OidcProviderStatus:
      description: Status of Provider
      enum:
        - ACTIVE
        - INACTIVE
      type: string
      title: OidcProviderStatus
    AssignedGroup:
      type: object
      properties:
        group:
          type: string
          minLength: 1
        facilityRefs:
          type: array
          minItems: 1
          items:
            type: string
      required:
        - group
        - facilityRefs
      title: AssignedGroup
      description: AssignedGroup
    RerouteShortPickConfiguration:
      title: RerouteShortPickConfiguration
      description: Reroute ShortPick Configuration
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        blacklistAssignedFacilities:
          default: false
          description: >-
            Does not consider facilities which previously owned the pickjob
            during routing.
          type: boolean
        clickAndCollectReroute:
          $ref: '#/components/schemas/ClickAndCollectRerouteConfiguration'
        restowAfterMinutes:
          description: The amount of minutes after which an automated restow is executed
          example: '60'
          type: number
        shipFromStoreReroute:
          $ref: '#/components/schemas/ShipFromStoreRerouteConfiguration'
        id:
          type: string
        rerouteZeroPicksOnly:
          default: false
          description: >-
            Specifies whether only pick jobs with zero items picked are eligible
            for rerouting.
          type: boolean
      required:
        - clickAndCollectReroute
        - shipFromStoreReroute
      type: object
    ClickAndCollectRerouteConfiguration:
      properties:
        active:
          type: boolean
        rerouteType:
          $ref: '#/components/schemas/RerouteType'
      required:
        - active
      type: object
      title: ClickAndCollectRerouteConfiguration
      description: ClickAndCollectRerouteConfiguration
    ShipFromStoreRerouteConfiguration:
      properties:
        active:
          type: boolean
        allowManualReroute:
          default: false
          description: >-
            @deprecated This config property is deprecated since 26/02/24. Use
            GlobalManualRerouteConfiguration instead.
          type: boolean
          deprecated: true
        facilityWideRerouteOnShortPick:
          default: false
          type: boolean
        rerouteTargetTime:
          description: >-
            Only pickJobs where the targetTime in not larger than now plus this
            number are rerouted
          example: '48'
          type: number
        rerouteType:
          $ref: '#/components/schemas/RerouteType'
      required:
        - active
        - rerouteType
      type: object
      title: ShipFromStoreRerouteConfiguration
      description: ShipFromStoreRerouteConfiguration
    RerouteType:
      description: |-
        The type of reroute to apply to the order
          * `REROUTE`- the complete routing plan is rerouted.
          * `ORDERSPLIT`- the order is splitted. The short picked line items will be moved to a new routing plan and rerouted
      enum:
        - REROUTE
        - ORDERSPLIT
      type: string
      title: RerouteType
    ReturnArticleAttributeItem:
      allOf:
        - $ref: '#/components/schemas/ArticleAttributeItem'
      title: ReturnArticleAttributeItem
      description: ReturnArticleAttributeItem
    ReturnConfiguration:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        active:
          deprecated: true
          default: true
          description: >-
            This part of the API is deprecated. For details please check the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />Enable or disable legacy returns. Use returnTypeConfiguration
            instead
          type: boolean
        returnTypeConfiguration:
          $ref: '#/components/schemas/ReturnTypeConfiguration'
        availableItemConditions:
          items:
            $ref: '#/components/schemas/AvailableItemCondition'
        availableReturnReasons:
          items:
            $ref: '#/components/schemas/AvailableReturnReason'
        allowTriggerRefund:
          default: false
          description: >-
            If true, a refund can be triggered. If false, the endpoints to
            trigger a refund are disabled.
          type: boolean
      required:
        - active
      type: object
      title: ReturnConfiguration
      description: ReturnConfiguration
    ExpiryConfiguration:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        provisioningTimeOffsetInMinutes:
          type: integer
          minimum: 0
      required:
        - provisioningTimeOffsetInMinutes
      type: object
      title: ExpiryConfiguration
      description: ExpiryConfiguration
    AvailableItemCondition:
      additionalProperties: false
      properties:
        conditionLocalized:
          description: Will be translated into 'condition' when requested
          $ref: '#/components/schemas/LocaleString'
          example:
            de_DE: Beschädigt
            en_US: Damaged
      title: AvailableItemCondition
      description: AvailableItemCondition
    AvailableReturnReason:
      additionalProperties: false
      properties:
        reasonLocalized:
          description: Will be translated into 'reason' when requested
          example:
            de_DE: Beschädigt
            en_US: Damaged
          $ref: '#/components/schemas/LocaleString'
        identifier:
          type: string
          description: >-
            Small identifier to be displayed and printed. Allowed values are
            1-99 and A-Z. Needs to be unique respecting all other reasons. If
            not set, an ascending will be chosen automatically
          example: A
      required:
        - reasonLocalized
      title: AvailableReturnReason
      description: AvailableReturnReason
    LocalizedReturnConfiguration:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        active:
          deprecated: true
          default: true
          description: >-
            This part of the API is deprecated. For details please check the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />Enable or disable legacy returns. Use returnTypeConfiguration
            instead
          type: boolean
        returnTypeConfiguration:
          $ref: '#/components/schemas/ReturnTypeConfiguration'
        availableItemConditions:
          items:
            $ref: '#/components/schemas/LocalizedAvailableItemCondition'
        availableReturnReasons:
          items:
            $ref: '#/components/schemas/LocalizedAvailableReturnReason'
        allowTriggerRefund:
          default: false
          description: >-
            If true, a refund can be triggered. If false, the endpoints to
            trigger a refund are disabled.
          type: boolean
      required:
        - active
      type: object
      title: LocalizedReturnConfiguration
      description: LocalizedReturnConfiguration
    LocalizedAvailableItemCondition:
      additionalProperties: false
      properties:
        condition:
          type: string
          example: Damaged
          description: translated conditionsLocalized
        conditionLocalized:
          $ref: '#/components/schemas/LocaleString'
          example:
            de_DE: Beschädigt
            en_US: Damaged
      required:
        - conditionLocalized
        - condition
      title: LocalizedAvailableItemCondition
      description: LocalizedAvailableItemCondition
    LocalizedAvailableReturnReason:
      allOf:
        - $ref: '#/components/schemas/AvailableReturnReason'
      additionalProperties: false
      properties:
        reason:
          type: string
          example: Damaged
          description: translated reasonLocalized
        identifier:
          type: string
          description: >-
            Small identifier to be displayed and printed. Allowed values are
            1-99 and A-Z. Needs to be unique respecting all other reasons. If
            not set, an ascending will be chosen automatically
          example: A
      required:
        - reasonLocalized
        - reason
        - identifier
      title: LocalizedAvailableReturnReason
      description: LocalizedAvailableReturnReason
    ReturnTypeConfiguration:
      properties:
        type:
          $ref: '#/components/schemas/ReturnConfigurationType'
      required:
        - type
      title: ReturnTypeConfiguration
      description: ReturnTypeConfiguration
    ReturnConfigurationType:
      type: string
      enum:
        - RETURN
        - ITEM_RETURN
      title: ReturnConfigurationType
      description: ReturnConfigurationType
    ReturnItemArticle:
      allOf:
        - $ref: '#/components/schemas/AbstractArticle'
        - properties:
            attributes:
              items:
                $ref: '#/components/schemas/ReturnArticleAttributeItem'
              type: array
              maxItems: 40
          type: object
      xml:
        name: ReturnItemArticle
      title: ReturnItemArticle
      description: ReturnItemArticle
    ReturnJob:
      allOf:
        - $ref: '#/components/schemas/ReturnJobForCreation'
        - $ref: '#/components/schemas/VersionedResource'
        - properties:
            facilityRef:
              description: >-
                Reference to the facility which could have been given via
                tenantFacilityID while creating
              type: string
            anonymized:
              description: Indicates if gdpr related data was anonymized
              example: false
              type: boolean
            id:
              description: >-
                The id of this returnJob. It is generated during creation
                automatically and suits as the primary identifier of the
                described entity.
              example: Esb20gpHBL94X5NdMp3C
              minItems: 1
              type: string
          required:
            - id
          type: object
      xml:
        name: ReturnJob
      title: ReturnJob
      description: ReturnJob
    ReturnJobForCreation:
      additionalProperties: false
      properties:
        carrierTrackingNumber:
          example: '84168117830018'
          type: string
        consumerAddress:
          $ref: '#/components/schemas/ConsumerAddress'
        facilityAddress:
          $ref: '#/components/schemas/FacilityAddress'
        tenantFacilityId:
          description: >-
            The id of the facility reference. The given ID has to be present in
            the system.
          example: Esb20gpHBL94X5NdMp3C
          type: string
        orderRef:
          description: The id of the order
          example: LGMl2DuvPnfPoSHhYFOm
          type: string
        processId:
          description: >-
            Id of the global process related to this entity. For example used
            for starting the GDPR process and others.
          type: string
        returnLines:
          items:
            $ref: '#/components/schemas/ReturnLine'
          minItems: 1
          type: array
        status:
          $ref: '#/components/schemas/ReturnStatus'
        tenantOrderId:
          type: string
        customAttributes:
          description: >-
            Attributes that can be added to the return job. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the information carried here.
      required:
        - returnLines
      type: object
      title: ReturnJobForCreation
      description: ReturnJobForCreation
    ReturnJobs:
      properties:
        returnJobs:
          items:
            $ref: '#/components/schemas/ReturnJob'
          type: array
        total:
          description: Total number of found entities for this query
          example: 42
          type: integer
      required:
        - returnJobs
        - total
      title: ReturnJobs
      description: ReturnJobs
    ReturnLine:
      properties:
        article:
          $ref: '#/components/schemas/ReturnItemArticle'
        delivered:
          description: The amount of articles that were delivered
          example: 20
          format: int64
          minimum: 0
          type: integer
        id:
          description: >-
            The id of this return Item. It is generated during creation
            automatically and suits as the primary identifier of the described
            entity.
          example: climk4dcQFiPdA5ULuhS
          type: string
        pickJobRefs:
          items:
            description: List of corresponding pickjob Ids
            type: string
          minItems: 1
          type: array
        returned:
          $ref: '#/components/schemas/Returned'
        scannableCodes:
          items:
            description: Codes, that identify the article
            type: string
          type: array
        status:
          $ref: '#/components/schemas/ReturnLineStatus'
        customAttributes:
          description: >-
            Attributes that can be added to the return job. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the information carried here.
      required:
        - pickJobRefs
        - id
        - status
        - delivered
        - returned
        - scannableCodes
        - article
      type: object
      title: ReturnLine
      description: ReturnLine
    ShortPickReason:
      additionalProperties: false
      properties:
        reason:
          description: translated reasonLocalized according to the given locale
          type: string
        active:
          type: boolean
          example: true
          description: Flag to mark a reason as active or inactive
        reasonLocalized:
          description: Localized reason
          example: '{ en_US: ''SomeName'' }'
          $ref: '#/components/schemas/LocaleString'
      required:
        - active
        - reasonLocalized
      title: ShortPickReason
      description: ShortPickReason
    ReturnLineStatus:
      description: A return item line initially has the status INITIAL.
      enum:
        - INITIAL
        - ADVISED
        - ACCEPTED
        - DECLINED
        - CANCELED
      type: string
      xml:
        name: ReturnItemStatus
      title: ReturnLineStatus
    ReturnNoteConfiguration:
      title: ReturnNoteConfiguration
      description: Return Note Configuration
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        id:
          example: delivery-note
          type: string
        logoUrl:
          type: string
        pdfBackgroundConfiguration:
          $ref: '#/components/schemas/PdfBackgroundConfiguration'
        companyAddress:
          $ref: '#/components/schemas/CompanyAddress'
        orderDateLabel:
          $ref: '#/components/schemas/LocaleString'
        orderNumberLabel:
          $ref: '#/components/schemas/LocaleString'
        headline:
          $ref: '#/components/schemas/LocaleString'
        quantityLabel:
          $ref: '#/components/schemas/LocaleString'
        articleIdLabel:
          $ref: '#/components/schemas/LocaleString'
        articleTitleLabel:
          $ref: '#/components/schemas/LocaleString'
        returnReasonLabel:
          $ref: '#/components/schemas/LocaleString'
        returnReasonExplanationHeadline:
          $ref: '#/components/schemas/LocaleString'
        returnReasonExplanation:
          $ref: '#/components/schemas/LocaleString'
        reasons:
          deprecated: true
          description: Deprecated - use ReturnConfiguration.availableReturnReasons instead
          items:
            $ref: '#/components/schemas/LocaleString'
          type: array
        disclaimerHeadline:
          $ref: '#/components/schemas/LocaleString'
        disclaimer:
          $ref: '#/components/schemas/LocaleString'
        displayPageLabel:
          type: boolean
          default: false
          description: Determines if the page label should be shown
        pageLabel:
          $ref: '#/components/schemas/LocaleString'
        substituteText:
          $ref: '#/components/schemas/LocaleString'
      required:
        - id
        - orderDateLabel
        - orderNumberLabel
        - headline
        - quantityLabel
        - articleIdLabel
        - articleTitleLabel
        - returnReasonLabel
        - disclaimerHeadline
        - disclaimer
        - pageLabel
      type: object
    PdfBackgroundConfiguration:
      properties:
        firstPageBackgroundFileUrl:
          description: >-
            File url of the background image that will be used for the first
            page
          type: string
        followingPageBackgroundFileUrl:
          description: File url of background image that will be used for 2-n pages
          type: string
      type: object
      title: PdfBackgroundConfiguration
      description: PdfBackgroundConfiguration
    PdfBackgroundConfigurationForUpsert:
      properties:
        firstPageBackgroundFile:
          $ref: '#/components/schemas/NamedFile'
        followingPageBackgroundFile:
          $ref: '#/components/schemas/NamedFile'
      type: object
      title: PdfBackgroundConfigurationForUpsert
      description: PdfBackgroundConfigurationForUpsert
    ReturnNoteConfigurationForUpsert:
      additionalProperties: false
      properties:
        logo:
          $ref: '#/components/schemas/NamedFile'
        pdfBackgroundConfiguration:
          $ref: '#/components/schemas/PdfBackgroundConfigurationForUpsert'
        companyAddress:
          $ref: '#/components/schemas/CompanyAddress'
        orderDateLabel:
          $ref: '#/components/schemas/LocaleString'
        orderNumberLabel:
          $ref: '#/components/schemas/LocaleString'
        headline:
          $ref: '#/components/schemas/LocaleString'
        quantityLabel:
          $ref: '#/components/schemas/LocaleString'
        articleIdLabel:
          $ref: '#/components/schemas/LocaleString'
        articleTitleLabel:
          $ref: '#/components/schemas/LocaleString'
        returnReasonLabel:
          $ref: '#/components/schemas/LocaleString'
        returnReasonExplanationHeadline:
          $ref: '#/components/schemas/LocaleString'
        returnReasonExplanation:
          $ref: '#/components/schemas/LocaleString'
        reasons:
          deprecated: true
          description: Deprecated - use ReturnConfiguration.availableReturnReasons instead
          items:
            $ref: '#/components/schemas/LocaleString'
          type: array
        disclaimerHeadline:
          $ref: '#/components/schemas/LocaleString'
        disclaimer:
          $ref: '#/components/schemas/LocaleString'
        displayPageLabel:
          type: boolean
          default: false
          description: Determines if the page label should be shown
        pageLabel:
          $ref: '#/components/schemas/LocaleString'
        substituteText:
          $ref: '#/components/schemas/LocaleString'
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - orderDateLabel
        - orderNumberLabel
        - headline
        - quantityLabel
        - articleIdLabel
        - articleTitleLabel
        - returnReasonLabel
        - disclaimerHeadline
        - disclaimer
        - pageLabel
        - version
      type: object
      title: ReturnNoteConfigurationForUpsert
      description: ReturnNoteConfigurationForUpsert
    ReturnPatchActions:
      description: >-
        You can choose from patch actions for the ReturnLineItems
        (ModifyReturnLineItemAction, action value: 'ModifyReturnLineItem') or
        the return itself (ModifyReturnAction, action value 'ModifyReturn').
      properties:
        actions:
          items:
            anyOf:
              - $ref: '#/components/schemas/ModifyReturnAction'
              - $ref: '#/components/schemas/ModifyReturnLineItemAction'
          minItems: 1
          type: array
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
        - actions
      type: object
      xml:
        name: ReturnPatchActions
      title: ReturnPatchActions
    ReturnStatus:
      description: >-
        A return initially has the status INITIAL. As soon as one of the
        returnlines is returned partly or in full the state changes to CLAIMED.
        When the return option voids the state could change to CLOSED. Please
        note that this last step might depend on configuration values.
      enum:
        - INITIAL
        - IN_PROGRESS
        - CLAIMED
        - CLOSED
        - CANCELED
        - OBSOLETE
      type: string
      xml:
        name: ReturnItemStatus
      title: ReturnStatus
    Returned:
      properties:
        reason:
          description: Reason of return.
          example: Zu klein
          type: string
        returnedAmount:
          description: Amount of item which is returned
          example: 5
          minimum: 0
          type: number
      required:
        - returnedAmount
      type: object
      title: Returned
      description: Returned
    ScopedCapability:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        currentUserPermissions:
          items:
            type: string
          type: array
        name:
          type: string
        status:
          $ref: '#/components/schemas/CapabilityStatus'
        configurations:
          items:
            anyOf:
              - $ref: '#/components/schemas/SubstitutionConfiguration'
              - $ref: '#/components/schemas/CarrierConfiguration'
              - $ref: '#/components/schemas/RerouteShortPickConfiguration'
              - $ref: '#/components/schemas/ReturnNoteConfiguration'
          type: array
      required:
        - name
        - status
      type: object
      title: ScopedCapability
      description: ScopedCapability
    ShipmentOrderBy:
      description: STATUS_TARGET_TIME_LAST_MODIFIED_DATE is depricated
      enum:
        - STATUS_TARGET_TIME_ORDER_DATE
      title: ShipmentOrderBy
    ShipmentWithSearchPath:
      allOf:
        - $ref: '#/components/schemas/Shipment'
        - properties:
            searchPaths:
              items:
                type: string
              type: array
              minItems: 0
          additionalProperties: false
          type: object
      title: ShipmentWithSearchPath
      description: ShipmentWithSearchPath
    Shipment:
      allOf:
        - $ref: '#/components/schemas/ShipmentForCreation'
        - $ref: '#/components/schemas/VersionedResource'
        - properties:
            anonymized:
              default: false
              description: Indicates if gdpr related data was anonymized
              example: false
              type: boolean
            hasActiveCarrier:
              default: true
              description: >-
                Indicates if there is an active carrier configuration to fulfill
                this shipment
              example: false
              type: boolean
            carrierKey:
              type: string
              example: DPD
            id:
              description: >-
                The id of this Shipment. It is generated during creation
                automatically and suits as the primary identifier of the
                described entity.
              example: 95EWrieX09OmeriXIUbb
              type: string
            lineItems:
              items:
                $ref: '#/components/schemas/ShipmentLineItem'
              type: array
            parcels:
              items:
                $ref: '#/components/schemas/StrippedParcel'
              type: array
            status:
              $ref: '#/components/schemas/ShipmentStatus'
          required:
            - id
            - status
            - hasActiveCarrier
          type: object
      title: Shipment
      description: Shipment
    ShipmentForCreation:
      additionalProperties: false
      properties:
        operativeProcessRef:
          type: string
        carrierLogoUrl:
          description: The URL to the carrier logo
          type: string
        carrierRef:
          description: The reference to the carrier for which the shipment is assigned to
          example: ca525716-7208-4a63-a2a6-11274eb37f67-0
          type: string
        carrierProduct:
          description: Desired product of given carrier to choose when ordering a label
          type: string
          example: EXPRESS
        carrierServices:
          type: array
          items:
            $ref: '#/components/schemas/CarrierServices'
        customAttributes:
          description: >-
            Attributes that can be added to the shipment. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the informations carried here.
          type: object
        facilityRef:
          description: The reference to the facility which the shipment is assigned to.
          type: string
        lineItems:
          items:
            $ref: '#/components/schemas/ShipmentLineItemForCreation'
          type: array
        orderDate:
          description: The date this order was created at the supplying system.
          format: date-time
          type: string
        pickJobRef:
          description: The id of the facility reference.
          example: Esb20gpHBL94X5NdMp3C
          type: string
        processId:
          description: >-
            Id of the global process related to this entity. For example used
            for starting the GDPR process and others.
          type: string
        shortId:
          description: The short identifier of the shipment.
          type: string
        sourceAddress:
          $ref: '#/components/schemas/FacilityAddress'
        targetAddress:
          $ref: '#/components/schemas/ConsumerAddress'
        invoiceAddress:
          $ref: '#/components/schemas/ConsumerAddress'
        postalAddress:
          $ref: '#/components/schemas/ConsumerAddress'
        targetTime:
          description: At which time the result is expected.
          example: '2020-02-03T09:45:51.525Z'
          format: date-time
          type: string
        tenantOrderId:
          description: Reference to the order in the tenant system.
          type: string
        targetTimeBaseDate:
          description: The start date for the targetTime calculation.
          example: '2020-02-03T08:45:50.525Z'
          format: date-time
          type: string
        paymentInformation:
          $ref: '#/components/schemas/PaymentInformation'
        tags:
          items:
            $ref: '#/components/schemas/TagReference'
          type: array
        transfers:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/OperativeTransfer'
      required:
        - facilityRef
        - targetTime
        - orderDate
      type: object
      xml:
        name: Shipment
      title: ShipmentForCreation
      description: ShipmentForCreation
    ShipmentLineItem:
      allOf:
        - $ref: '#/components/schemas/ShipmentLineItemForCreation'
        - properties:
            id:
              description: >-
                The id of this lineItem. It is generated during creation
                automatically and suits as the primary identifier of the
                described entity.
              example: climk4dcQFiPdA5ULuhS
              type: string
          required:
            - id
          type: object
      title: ShipmentLineItem
      description: ShipmentLineItem
    ShipmentLineItemArticle:
      allOf:
        - $ref: '#/components/schemas/AbstractArticle'
        - properties:
            attributes:
              items:
                $ref: '#/components/schemas/ArticleAttributeItem'
              type: array
              maxItems: 40
          type: object
      xml:
        name: ShipmentLineItemArticle
      title: ShipmentLineItemArticle
      description: ShipmentLineItemArticle
    ShipmentLineItemForCreation:
      properties:
        article:
          $ref: '#/components/schemas/ShipmentLineItemArticle'
        customAttributes:
          description: >-
            Attributes that can be added to the orderline. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the informations carried here.
          type: object
        measurementUnitKey:
          description: Identifier for items unit of measurement.
          example: liter
          type: string
        quantity:
          description: quantity of the specific article that has been ordered
          example: 21
          format: int64
          minimum: 1
          type: integer
        tags:
          items:
            $ref: '#/components/schemas/TagReference'
          type: array
        scannableCodes:
          items:
            description: Codes, that identify the article
            type: string
          type: array
      required:
        - quantity
        - article
      type: object
      title: ShipmentLineItemForCreation
      description: ShipmentLineItemForCreation
    ShipmentPatchActions:
      properties:
        actions:
          items:
            $ref: '#/components/schemas/ModifyShipmentAction'
          minItems: 1
          type: array
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
        - actions
      type: object
      xml:
        name: ShipmentPatchActions
      title: ShipmentPatchActions
      description: ShipmentPatchActions
    ShipmentStatus:
      description: >-
        Every newly created shipment is in state INITIAL. When the parcel labels
        should be requested the state changes to REQUEST and as soon as all
        parcel labels are successfully requested the state changes to CONFIRMED.
        The state COMPLETED is set in the end or the process
      enum:
        - INITIAL
        - REQUEST
        - RETRYABLE
        - CONFIRMED
        - COMPLETED
        - CANCELED
        - OBSOLETE
      type: string
      title: ShipmentStatus
    ShipmentActionsParameter:
      anyOf:
        - $ref: '#/components/schemas/ShipmentSplitLineItemsActionParameter'
      title: ShipmentActionsParameter
      description: ShipmentActionsParameter
    ShipmentSplitLineItemsActionParameter:
      title: ShipmentSplitLineItemsActionParameter
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/ShipmentSplitLineItemsActionEnum'
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          type: integer
        splitLineItemsInfo:
          items:
            $ref: '#/components/schemas/ShipmentSplitLineItemsInfo'
          type: array
      required:
        - name
        - version
        - splitLineItemsInfo
      type: object
      description: ShipmentSplitLineItemsActionParameter
    ShipmentSplitLineItemsActionEnum:
      enum:
        - SPLIT_LINE_LINES_SHIPMENT
      type: string
      title: ShipmentSplitLineItemsActionEnum
      description: ShipmentSplitLineItemsActionEnum
    ShipmentSplitLineItemsInfo:
      additionalProperties: false
      properties:
        lineItemId:
          type: string
          description: references the id of the item of a shipment
        quantity:
          description: quantity of the specific item that has been shipped
          example: 21
          minimum: 1
          type: integer
      required:
        - lineItemId
        - quantity
      type: object
      title: ShipmentSplitLineItemsInfo
      description: ShipmentSplitLineItemsInfo
    Status:
      additionalProperties: false
      properties:
        status:
          description: The current state of the API
          enum:
            - UP
            - DEGRADED
            - DOWN
          type: string
      required:
        - status
      type: object
      xml:
        name: Status
      title: Status
      description: Status
    StockConfiguration:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        stockModificationEnabled:
          deprecated: true
          default: true
          description: >-
            This part of the API is deprecated. For details please check the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />@deprecated Indicates if manual stock modification is allowed -
            will be moved to remoteConfig
          example: true
          type: boolean
        id:
          type: string
      required:
        - stockModificationEnabled
      type: object
      xml:
        name: StockConfiguration
      title: StockConfiguration
      description: StockConfiguration
    StockConfigurationPatchActions:
      properties:
        actions:
          items:
            anyOf:
              - $ref: '#/components/schemas/ModifyRetainedOfflineStockAction'
              - $ref: '#/components/schemas/ModifyListingReactivationAfterAction'
              - $ref: '#/components/schemas/ModifyShortpickAction'
          minItems: 1
          type: array
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
        - actions
      type: object
      xml:
        name: FacilityPatchActions
      title: StockConfigurationPatchActions
      description: StockConfigurationPatchActions
    StockInformationForCreation:
      description: >-
        @deprecated This object is deprecated since 30th of November 2023. This
        object carries information about the current stock of this listing.
      deprecated: true
      properties:
        reserved:
          deprecated: true
          description: >-
            This part of the API is deprecated. For details please check the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />@deprecated This field is deprecated since 8th of February 2023.

            Reserved can't be overridden by the API, because its internally now
            handled by open PickJobs (or other upcoming ways to reserve Stock)

            Any Value provided will be ignored upon arrival.
          example: 24
          minimum: 0
          multipleOf: 1
          type: number
        stock:
          description: >-
            This the amount of the given article that is in stock for the given
            facility
          example: 42
          minimum: 0
          multipleOf: 1
          type: number
      required:
        - stock
      type: object
      title: StockInformationForCreation
    StockInformation:
      description: '@deprecated This object is deprecated since 11th of September 2023.'
      allOf:
        - $ref: '#/components/schemas/StockInformationForCreation'
        - properties:
            reserved:
              example: 24
              minimum: 0
              multipleOf: 1
              type: number
            available:
              description: The actual available amount for this stock
              example: 24
              minimum: 0
              multipleOf: 1
              type: number
      required:
        - available
      type: object
      title: StockInformation
    StrippedCarrier:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
        - properties:
            deliveryType:
              $ref: '#/components/schemas/CarrierDeliveryType'
            id:
              description: >-
                The id of this carrier. It is generated during creation
                automatically and suits as the primary identifier of the
                described carrier.
              example: climk4dcQFiPdA5ULuhS
              type: string
            key:
              type: string
            lifecycle:
              $ref: '#/components/schemas/CarrierLifecycle'
            name:
              description: >-
                This is the well known name for a supported CEP partner. Can be
                adapted to the clients needs.
              example: DHL Köln
              type: string
            status:
              $ref: '#/components/schemas/CarrierStatus'
          required:
            - id
            - name
            - key
          type: object
      xml:
        name: StrippedCarrier
      title: StrippedCarrier
      description: StrippedCarrier
    StrippedCarriers:
      properties:
        carriers:
          items:
            $ref: '#/components/schemas/StrippedCarrier'
          type: array
        total:
          description: Total number of found entities for this query
          example: 42
          type: integer
      type: object
      title: StrippedCarriers
      description: StrippedCarriers
    StrippedFacilities:
      properties:
        facilities:
          items:
            anyOf:
              - $ref: '#/components/schemas/StrippedManagedFacility'
              - $ref: '#/components/schemas/Supplier'
          type: array
        total:
          description: Total number of found entities for this query
          example: 42
          type: integer
      type: object
      title: StrippedFacilities
      description: StrippedFacilities
    StrippedManagedFacility:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
        - $ref: '#/components/schemas/Address'
        - properties:
            id:
              type: string
            name:
              description: name of the facility
              example: Köln store
              type: string
            status:
              $ref: '#/components/schemas/FacilityStatus'
            tenantFacilityId:
              description: The id of the facility in the tenants own system
              example: K12345
              type: string
            type:
              $ref: '#/components/schemas/FacilityType'
          required:
            - id
            - status
            - type
          type: object
      title: StrippedManagedFacility
      description: StrippedManagedFacility
    StrippedHandoverjob:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
        - properties:
            carrierRef:
              type: string
              description: >-
                This part of the API is deprecated. For details please check the
                <a
                href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
                target="_blank">api-release-life-cycle documentation</a>.<br
                /><br />@deprecated This field is deprecated since 28 November
                2024. Use nested object handoverJobParcelInfo
            carrierKey:
              type: string
              description: >-
                This part of the API is deprecated. For details please check the
                <a
                href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
                target="_blank">api-release-life-cycle documentation</a>.<br
                /><br />@deprecated This field is deprecated since 28 November
                2024. Use nested object handoverJobParcelInfo
            channel:
              enum:
                - DELIVERY
                - COLLECT
              type: string
            facilityRef:
              description: The id of the facility reference.
              example: Esb20gpHBL94X5NdMp3C
              type: string
            id:
              description: >-
                The id of this handoverjob. It is generated during creation
                automatically and suits as the primary identifier of the
                described entity.
              example: 95EWrieX09OmeriXIUbb
              type: string
            loadUnitRefs:
              description: Reference to array of load unit Refs
              items:
                type: string
              type: array
            orderDate:
              description: The date this order was created at the supplying system.
              example: '2020-02-03T08:45:50.525Z'
              format: date-time
              type: string
            parcelRef:
              example: 2fOge2ZGW54K4TgvDTQw
              type: string
              description: >-
                This part of the API is deprecated. For details please check the
                <a
                href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
                target="_blank">api-release-life-cycle documentation</a>.<br
                /><br />@deprecated This field is deprecated since 28 November
                2024. Use nested object handoverJobParcelInfo
            pickJobRef:
              description: >-
                The reference to the pickjob for which the handoverjob is
                assigned to
              example: ca525716-7208-4a63-a2a6-11274eb37f67-0
              type: string
            shipmentRef:
              example: Esb20gpHBL94X5NdMp3C
              type: string
              description: >-
                This part of the API is deprecated. For details please check the
                <a
                href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
                target="_blank">api-release-life-cycle documentation</a>.<br
                /><br />@deprecated This field is deprecated since 28 November
                2024. Use nested object handoverJobParcelInfo
            status:
              $ref: '#/components/schemas/HandoverjobStatus'
            tenantOrderId:
              description: >-
                Field can be used as a reference number in foreign systems, for
                example as a reference to the source system's identifier for
                this order.
              example: R456728546
              type: string
            searchPaths:
              description: This is the search term that was used to find the handover job
              example: R456728546
              type: array
              items:
                type: string
              minItems: 0
            invoiceAddress:
              $ref: '#/components/schemas/ConsumerAddress'
            recipientAddress:
              $ref: '#/components/schemas/ConsumerAddress'
            fullIdentifier:
              type: string
              description: An information to identify the recipient
            handoverJobParcelInfo:
              $ref: '#/components/schemas/HandoverJobParcelInfo'
          required:
            - id
            - status
            - facilityRef
            - channel
          type: object
      title: StrippedHandoverjob
      description: StrippedHandoverjob
    StrippedHandoverjobs:
      properties:
        handoverjobs:
          items:
            $ref: '#/components/schemas/StrippedHandoverjob'
          type: array
        total:
          description: Total number of found entities for this query
          example: 42
          type: integer
      type: object
      title: StrippedHandoverjobs
      description: StrippedHandoverjobs
    StrippedListing:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
        - properties:
            id:
              example: fsfdsf87fsd
              type: string
            status:
              enum:
                - ACTIVE
                - INACTIVE
              type: string
            tenantArticleId:
              description: This is a reference to an article Id
              example: '4711'
              type: string
          required:
            - status
            - facilityId
            - id
            - tenantArticleId
          type: object
      title: StrippedListing
      description: StrippedListing
    StrippedListings:
      properties:
        listings:
          items:
            $ref: '#/components/schemas/StrippedListing'
          type: array
        total:
          description: Total number of found entities for this query
          example: 42
          type: integer
      type: object
      title: StrippedListings
      description: StrippedListings
    ListingBulkOperationResult:
      type: object
      properties:
        listing:
          $ref: '#/components/schemas/Listing'
        status:
          $ref: '#/components/schemas/BulkOperationResultStatus'
      required:
        - listing
        - status
      title: ListingBulkOperationResult
      description: ListingBulkOperationResult
    BulkOperationResultStatus:
      type: string
      enum:
        - UPDATED
        - CREATED
        - FAILED
      title: BulkOperationResultStatus
      description: BulkOperationResultStatus
    StrippedParcel:
      properties:
        carrierRef:
          description: The reference to the carrier for which the parcel is assigned to
          example: ca525716-7208-4a63-a2a6-11274eb37f67-0
          type: string
        parcelRef:
          example: 15EZrieW09OmeriXIUbc
          type: string
        status:
          $ref: '#/components/schemas/ParcelStatus'
        carrierTrackingNumber:
          example: '84168117830018'
          type: string
      required:
        - parcelRef
        - carrierRef
        - status
      type: object
      title: StrippedParcel
      description: StrippedParcel
    StrippedParcels:
      properties:
        parcels:
          items:
            $ref: '#/components/schemas/StrippedParcel'
          type: array
        total:
          description: Total number of found entities for this query
          example: 42
          type: integer
      type: object
      title: StrippedParcels
      description: StrippedParcels
    StrippedPickJob:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
        - properties:
            searchPaths:
              items:
                type: string
              type: array
              minItems: 0
            carrierKey:
              type: string
              example: DPD
            facilityRef:
              description: >-
                The id of the facility reference. The given ID has to be present
                in the system.
              example: Esb20gpHBL94X5NdMp3C
              type: string
            id:
              type: string
            orderRef:
              description: >-
                The id of the order that lead to the creation of this pickjob.
                Can be empty / not present when the pickjob was created without
                having an order.
              example: LGMl2DuvPnfPoSHhYFOm
              type: string
            targetTime:
              description: At which time the result is expected.
              example: '2020-02-03T09:45:51.525Z'
              format: date-time
              type: string
            status:
              $ref: '#/components/schemas/PickJobStatus'
          required:
            - id
            - status
            - created
            - lastModified
            - version
          type: object
      title: StrippedPickJob
      description: StrippedPickJob
    StrippedPickJobs:
      properties:
        pickjobs:
          items:
            $ref: '#/components/schemas/StrippedPickJob'
          type: array
        total:
          description: Total number of found entities for this query
          example: 42
          type: integer
      type: object
      title: StrippedPickJobs
      description: StrippedPickJobs
    PickJobPickingTimes:
      type: object
      additionalProperties: false
      properties:
        startLatestAt:
          description: The date this pickJob should be started at last.
          example: '2024-02-03T09:45:51.525Z'
          format: date-time
          type: string
      title: PickJobPickingTimes
      description: PickJobPickingTimes
    PickRunForCreation:
      properties:
        pickJobRefs:
          items:
            type: string
          type: array
          minItems: 1
        status:
          $ref: '#/components/schemas/PickRunStatus'
        facilityRef:
          type: string
        pickRunType:
          $ref: '#/components/schemas/PickRunType'
      required:
        - pickJobRefs
        - facilityRef
      type: object
      title: PickRunForCreation
      description: PickRunForCreation
    PickRun:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
        - properties:
            pickLineItems:
              items:
                $ref: '#/components/schemas/PickRunLineItem'
              type: array
            pickJobRefs:
              items:
                type: string
              type: array
            facilityRef:
              type: string
            status:
              $ref: '#/components/schemas/PickRunStatus'
            id:
              type: string
            editor:
              $ref: '#/components/schemas/Editor'
            pickRunType:
              $ref: '#/components/schemas/PickRunType'
      required:
        - pickLineItems
        - pickJobRefs
        - facilityRef
        - status
        - id
      type: object
      title: PickRun
      description: PickRun
    StrippedShipments:
      properties:
        shipments:
          items:
            $ref: '#/components/schemas/ShipmentWithSearchPath'
          type: array
        total:
          description: Total number of found entities for this query
          example: 42
          type: integer
      type: object
      title: StrippedShipments
      description: StrippedShipments
    Subscription:
      allOf:
        - $ref: '#/components/schemas/SubscriptionForCreation'
      properties:
        created:
          description: >-
            The date this subscription was created at the platform. This value
            is generated by the service.
          example: '2020-02-03T08:45:51.525Z'
          format: date-time
          type: string
        id:
          type: string
      required:
        - id
        - created
      type: object
      title: Subscription
      description: Subscription
    SubscriptionForCreation:
      properties:
        callbackUrl:
          type: string
          description: >-
            This part of the API is deprecated. For details please check the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />Deprecated: Use new 'target' object instead.
          deprecated: true
        event:
          type: string
          description: Name of the event in the fulfillmenttools platform.
        headers:
          items:
            $ref: '#/components/schemas/CallbackHeader'
          description: >-
            This part of the API is deprecated. For details please check the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />Deprecated: Use new 'target' object instead.
          deprecated: true
          minItems: 1
          type: array
        name:
          type: string
          description: Name of the event, this is freely selectable.
        target:
          anyOf:
            - $ref: '#/components/schemas/SubscriptionTargetWebhook'
            - $ref: '#/components/schemas/SubscriptionTargetMicrosoftAzureServiceBus'
      required:
        - name
        - event
      type: object
      title: SubscriptionForCreation
      description: SubscriptionForCreation
    Subscriptions:
      properties:
        subscriptions:
          items:
            $ref: '#/components/schemas/Subscription'
          type: array
        total:
          description: Total number of found entities for this query
          example: 42
          type: integer
      type: object
      title: Subscriptions
      description: Subscriptions
    SubscriptionTargetWebhook:
      title: SubscriptionTargetWebhook
      description: Subscriptions model for a Webhook target.
      properties:
        type:
          $ref: '#/components/schemas/SubscriptionTargetWebhookEnum'
        callbackUrl:
          type: string
        headers:
          items:
            $ref: '#/components/schemas/CallbackHeader'
          minItems: 1
          type: array
      required:
        - type
        - callbackUrl
      type: object
    SubscriptionTargetWebhookEnum:
      title: SubscriptionTargetWebhookEnum
      description: Type of subscription target webhook.
      enum:
        - WEBHOOK
      type: string
    SubscriptionTargetMicrosoftAzureServiceBus:
      title: SubscriptionTargetMicrosoftAzureServiceBus
      description: Subscriptions model for a Microsoft Azure Service Bus target.
      properties:
        type:
          $ref: '#/components/schemas/SubscriptionTargetMicrosoftAzureServiceBusEnum'
        tenantId:
          minLength: 1
          type: string
          description: >-
            'Directory (Tenant) ID' from the app registration in 'Microsoft
            Entra ID' (formerly 'Azure AD').
        clientId:
          minLength: 1
          type: string
          description: >-
            'Application (Client) ID' from the app registration in 'Microsoft
            Entra ID' (formerly 'Azure AD').
        clientSecret:
          minLength: 1
          type: string
          description: Client secret from the used Azure application.
        namespace:
          minLength: 1
          type: string
          description: The Azure Service Bus namespace.
        queueOrTopicName:
          minLength: 1
          type: string
          description: Name of the queue or topic in the Service Bus namespace.
      required:
        - type
        - tenantId
        - clientId
        - clientSecret
        - namespace
        - queueOrTopicName
      type: object
    SubscriptionTargetMicrosoftAzureServiceBusEnum:
      title: SubscriptionTargetMicrosoftAzureServiceBusEnum
      description: Type of subscription target Microsoft Azure Service Bus.
      enum:
        - MICROSOFT_AZURE_SERVICE_BUS
      type: string
    Substitute:
      properties:
        attributes:
          items:
            $ref: '#/components/schemas/SubstituteAttributeItem'
          type: array
          maxItems: 40
        imageUrl:
          type: string
        priority:
          description: >-
            This field allows you to rank substitutes against each other. The
            lowest number is the most preferrable substitute.
          minimum: 0
          type: number
        scannableCodes:
          items:
            description: Strings, that identify the substitute article
            type: string
          type: array
        tenantArticleId:
          type: string
        title:
          type: string
      required:
        - title
        - tenantArticleId
      type: object
      xml:
        name: Substitute
      title: Substitute
      description: Substitute
    SubstituteAttributeItem:
      allOf:
        - $ref: '#/components/schemas/ArticleAttributeItem'
      title: SubstituteAttributeItem
      description: SubstituteAttributeItem
    SubstituteLineItem:
      properties:
        id:
          type: string
        refused:
          type: array
          items:
            $ref: '#/components/schemas/RefusedItem'
        article:
          $ref: '#/components/schemas/SubstituteLineItemArticle'
        priority:
          description: >-
            This field allows you to rank substitutes against each other. The
            lowest number is the most preferrable substitute.
          minimum: 0
          type: number
        pickedAt:
          description: Date when the line has been picked.
          example: '2024-02-03T08:45:51.525Z'
          format: date-time
          type: string
        quantity:
          description: >-
            quantity of the specific article that has been picked to substitute
            the ordered line item
          example: 21
          format: int64
          minimum: 1
          type: integer
        scannableCodes:
          items:
            description: Codes, that identify the article
            type: string
          type: array
        partialStockLocations:
          items:
            $ref: '#/components/schemas/SubstituteLineItemPartialStockLocation'
      required:
        - quantity
        - article
      type: object
      title: SubstituteLineItem
      description: SubstituteLineItem
    SubstituteLineItemArticle:
      allOf:
        - $ref: '#/components/schemas/AbstractArticle'
        - properties:
            attributes:
              items:
                $ref: '#/components/schemas/ArticleAttributeItem'
              type: array
              maxItems: 40
          type: object
      xml:
        name: SubstituteLineItemArticle
      title: SubstituteLineItemArticle
      description: SubstituteLineItemArticle
    SubstituteLineItemForCreation:
      properties:
        quantity:
          description: >-
            quantity of the specific article that has been picked to substitute
            the ordered line item
          example: 21
          format: int64
          minimum: 1
          type: integer
        tenantArticleId:
          description: TenantArticleId of the substitute article
          type: string
        pickedAt:
          description: Date when the line has been picked.
          example: '2024-02-03T08:45:51.525Z'
          format: date-time
          type: string
      required:
        - quantity
        - tenantArticleId
      type: object
      title: SubstituteLineItemForCreation
      description: SubstituteLineItemForCreation
    Substitutes:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - $ref: '#/components/schemas/SubstitutesForUpsert'
      required:
        - tenantArticleId
        - substitutes
      type: object
      xml:
        name: Substitutes
      title: Substitutes
      description: Substitutes
    SubstitutesForUpsert:
      properties:
        substitutes:
          items:
            $ref: '#/components/schemas/Substitute'
          type: array
        tenantArticleId:
          type: string
        version:
          description: >-
            Version field is used in the optimistic locking process. If the
            Substitute is for the tenantArticleId is not set yet, this field is
            ignored.
          example: 1
          type: number
      required:
        - substitutes
        - version
        - tenantArticleId
      type: object
      xml:
        name: SubstitutesForUpsert
      title: SubstitutesForUpsert
      description: SubstitutesForUpsert
    ResolvedSubstitutes:
      properties:
        substitutes:
          items:
            $ref: '#/components/schemas/Substitute'
          type: array
        tenantArticleId:
          type: string
      required:
        - substitutes
        - tenantArticleId
      type: object
      xml:
        name: ResolvedSubstitutes
      title: ResolvedSubstitutes
      description: ResolvedSubstitutes
    PackingConfigurations:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        packingContainerRequiredConfiguration:
          $ref: '#/components/schemas/PackingContainerRequiredConfiguration'
        packingItemConfirmationNeededConfiguration:
          $ref: '#/components/schemas/PackingItemConfirmationNeededConfiguration'
        packingSourceContainerConfiguration:
          $ref: '#/components/schemas/PackingSourceContainerConfiguration'
        scanningConfiguration:
          $ref: '#/components/schemas/PackingScanningConfiguration'
      type: object
      title: PackingConfigurations
      description: PackingConfigurations
    PackingSourceContainerConfiguration:
      title: PackingSourceContainerConfiguration
      description: Can this tenant use the packing source container
      properties:
        active:
          default: false
          type: boolean
      required:
        - active
      type: object
    PackingScanningConfiguration:
      title: PackingScanningConfiguration
      description: Packing Scanning Configuration.
      properties:
        scanningType:
          $ref: '#/components/schemas/PackingScanningConfigurationEnum'
      type: object
    ScanningRuleConfiguration:
      description: >-
        Configuration to show the client how the items should be scanned during
        picking
      properties:
        values:
          items:
            $ref: '#/components/schemas/ScanningRuleValue'
          type: array
      title: ScanningRuleConfiguration
    ScanningRuleValue:
      properties:
        priority:
          description: >-
            This field allows you to rank scanningRuleType against each other.
            The lowest number is the most preferable.
          minimum: 0
          type: number
        scanningRuleType:
          $ref: '#/components/schemas/ScanningRuleTypeEnum'
      required:
        - priority
        - scanningRuleType
      title: ScanningRuleValue
      description: ScanningRuleValue
    ScanningRuleTypeEnum:
      example: ARTICLE
      description: Type of scanning rule
      enum:
        - ARTICLE
        - LOCATION
      type: string
      title: ScanningRuleTypeEnum
    StockPropertyInputType:
      example: DATE
      description: Input Type for this property, used for clients.
      enum:
        - DATE
        - TEXT
      type: string
      title: StockPropertyInputType
    PackingScanningConfigurationEnum:
      enum:
        - MUST_SCAN_EACH
        - SCAN_NOT_REQUIRED
      type: string
      title: PackingScanningConfigurationEnum
      description: PackingScanningConfigurationEnum
    PickingMethodEnum:
      example: SINGLE_ORDER
      description: >-
        Way in which the picking should be handled Deprecated: BATCH_PICKING,
        use BATCH instead
      enum:
        - SINGLE_ORDER
        - MULTI_ORDER
        - BATCH_PICKING
        - BATCH
      type: string
      title: PickingMethodEnum
    PackingContainerRequiredConfiguration:
      title: PackingContainerRequiredConfiguration
      description: Packing Container Required Configuration.
      additionalProperties: false
      properties:
        active:
          type: boolean
          default: false
      required:
        - active
      type: object
    PackingItemConfirmationNeededConfiguration:
      title: PackingContainerRequiredConfiguration
      description: Do the customer need to validate which items are part of a pack job
      additionalProperties: false
      properties:
        active:
          type: boolean
          default: true
      required:
        - active
      type: object
    SubstitutionConfiguration:
      title: SubstitutionConfiguration
      description: Substitution Configuration
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        active:
          default: true
          description: Toggle for substitution articles.
          example: false
          type: boolean
      required:
        - active
      type: object
    SupportedEvent:
      properties:
        description:
          type: string
        event:
          type: string
      type: object
      title: SupportedEvent
      description: SupportedEvent
    SupportedEvents:
      properties:
        supportedEvents:
          items:
            $ref: '#/components/schemas/SupportedEvent'
          type: array
      type: object
      title: SupportedEvents
      description: SupportedEvents
    SupportedLocale:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />ISO
        3166 conform country code and ISO 639-1 conform language code (de_DE,
        en_US, ch_FR, etc.)
      enum:
        - de_DE
        - en_US
        - pl_PL
        - ru_RU
        - nl_NL
        - fr_FR
        - it_IT
        - nb_NO
        - es_ES
        - cs_CZ
        - sk_SK
        - pt_PT
        - sl_SI
        - ro_RO
        - bg_BG
        - hr_HR
        - hu_HU
      example: de_DE
      type: string
      title: SupportedLocale
      x-badges:
        - color: orange
          label: BETA
    SupportedLocales:
      items:
        $ref: '#/components/schemas/SupportedLocale'
      type: array
      title: SupportedLocales
      description: SupportedLocales
    TargetAddress:
      allOf:
        - $ref: '#/components/schemas/ConsumerAddress'
        - properties:
            facilityRef:
              description: >-
                The id of the facility reference. The given ID has to be present
                in the system.
              example: Esb20gpHBL94X5NdMp3C
              type: string
          type: object
      type: object
      title: TargetAddress
      description: TargetAddress
    TimeRange:
      properties:
        end:
          $ref: '#/components/schemas/TimeStamp'
        start:
          $ref: '#/components/schemas/TimeStamp'
        capacity:
          type: number
          minimum: 0
      required:
        - start
        - end
      type: object
      title: TimeRange
      description: TimeRange
    TimeStamp:
      properties:
        hour:
          maximum: 23
          minimum: 0
          type: number
        minute:
          maximum: 59
          minimum: 0
          type: number
      required:
        - hour
        - minute
      type: object
      title: TimeStamp
      description: TimeStamp
    TimeZone:
      description: Timezone for information retrieved e.g. by the Google Maps API
      properties:
        offsetInSeconds:
          description: offset in seconds to standard time
          example: 28800
          type: number
        timeZoneId:
          description: official id of the timezone
          example: America/Los_Angeles
          type: string
        timeZoneName:
          description: descriptive name of the timezone
          example: Pacific Standard Time
          type: string
      required:
        - timeZoneId
        - timeZoneName
        - offsetInSeconds
      type: object
      title: TimeZone
    CarrierTrackingStatus:
      description: Native trackingStatus provided by carrier
      additionalProperties: false
      type: object
      properties:
        timestamp:
          format: date-time
          type: string
          example: '2020-02-03T08:45:51.525Z'
          description: Timestamp this status was set by the carrier
        status:
          type: string
          example: DELIVERED
          description: Status of the parcel as provided by carrier
        description:
          type: string
          example: Parcel has been delivered
          description: Description of the status
      required:
        - status
      title: CarrierTrackingStatus
    DhlTrackingStatus:
      title: DhlTrackingStatus
      description: Native trackingStatus provided by carrier
      additionalProperties: false
      type: object
      properties:
        timestamp:
          format: date-time
          type: string
          example: '2020-02-03T08:45:51.525Z'
          description: Timestamp this status was set by the carrier
        status:
          type: string
          example: DELIVERED
          description: Status of the parcel as provided by carrier
        statusDetailed:
          type: string
          example: Parcel has been delivered
          description: Second status description
        description:
          type: string
          example: Parcel has been delivered
          description: Description of the status
        location:
          $ref: '#/components/schemas/DhlTrackingLocation'
        statusCode:
          type: string
          example: delivered
          description: Status code of the parcel as provided by carrier
        remark:
          type: string
          example: Delivery successful
          description: Remark of the status
      required:
        - status
    DhlTrackingLocation:
      additionalProperties: false
      description: Location information provided by DHL
      properties:
        address:
          type: object
          properties:
            addressLocality:
              type: string
              example: Germany
      title: DhlTrackingLocation
    TrackingStatus:
      title: TrackingStatus
      description: The state of the KEP
      enum:
        - registered
        - picked_up
        - delivered
        - not_delivered
        - transit
        - exception
        - out_for_delivery
        - destroyed
        - unknown
        - canceled
        - awaits_pickup_by_receiver
        - delayed
        - notification
      type: string
    PickRunStatus:
      description: The state of the PickRun
      enum:
        - OPEN
        - IN_PROGRESS
        - CLOSED
        - CANCELED
        - OBSOLETE
      type: string
      title: PickRunStatus
    VersionedResource:
      properties:
        created:
          description: >-
            The date this entity was created at the platform. This value is
            generated by the service.
          example: '2020-02-03T08:45:51.525Z'
          format: date-time
          type: string
        lastModified:
          description: >-
            The date this entity was modified last. This value is generated by
            the service.
          example: '2020-02-03T09:45:51.525Z'
          format: date-time
          type: string
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
      type: object
      title: VersionedResource
      description: VersionedResource
    PickJobOrderBy:
      description: Attribute to order a pickJobs by
      enum:
        - TARGET_TIME_DESC
        - TARGET_TIME_ASC
        - LAST_MODIFIED_DESC
        - LAST_MODIFIED_ASC
        - ORDER_DATE_DESC
        - ORDER_DATE_ASC
        - LAST_MODIFIED_BY_USER_DESC
        - LAST_MODIFIED_BY_USER_ASC
      type: string
      xml:
        name: PickJobOrderBy
      title: PickJobOrderBy
    PackJobOrderBy:
      description: Attribute to order a packJobs by
      enum:
        - TARGET_TIME_DESC
        - TARGET_TIME_ASC
        - LAST_MODIFIED_DESC
        - LAST_MODIFIED_ASC
        - ORDER_DATE_DESC
        - ORDER_DATE_ASC
      type: string
      xml:
        name: PackJobOrderBy
      title: PackJobOrderBy
    FacilityOrderBy:
      description: Attribute to order a facility list
      enum:
        - NAME
        - CREATED
        - POSTAL_CODE_ASC
      type: string
      xml:
        name: FacilityOrderBy
      title: FacilityOrderBy
    CarrierConfiguration:
      title: CarrierConfiguration
      description: Configuration of a Carrier
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        id:
          type: string
        carrierRef:
          type: string
        returnLabel:
          default: false
          description: >-
            When enabled, a return label will be created by creating a shipping
            label
          example: false
          type: boolean
        additionalWeightInPercent:
          description: >-
            It is an amount of percentage for packaging weight which will be
            added to the calculated shipping weight
          type: number
          minimum: 0
        mustBeWeighed:
          description: >-
            Indicates if the content of a parcel must be weighed before ordering
            a label
          type: boolean
          default: false
          example: false
        fallBackTrackAndTraceEmail:
          description: >-
            EmailAddress used to receive track and trace information when no
            other emailaddress was provided
          type: string
          example: max@speedyboxales.com
          format: email
          minLength: 1
        nonDeliveryDaysPerCountryAndProvince:
          type: array
          items:
            $ref: '#/components/schemas/NonDeliveryDaysPerCountryAndProvince'
        countryServiceMappings:
          items:
            $ref: '#/components/schemas/CarrierCountryServiceMapping'
          type: array
        thresholdPriceValue:
          $ref: '#/components/schemas/ThresholdPriceValue'
        serviceUrl:
          type: string
        alternativeSendAddress:
          $ref: '#/components/schemas/FacilityAddress'
        alternativeReturnAddress:
          $ref: '#/components/schemas/FacilityAddress'
      required:
        - returnLabel
        - carrierRef
      type: object
    ThresholdPriceValue:
      additionalProperties: false
      type: object
      properties:
        priority:
          type: integer
          minimum: 1
          description: >-
            The lower the value the higher is the priority, e.g. priority 1 is
            higher than priority 10. The priority is used when comparing
            multiple carriers.
        priceRange:
          $ref: '#/components/schemas/PriceRange'
      required:
        - priority
        - priceRange
      title: ThresholdPriceValue
      description: ThresholdPriceValue
    PriceRange:
      additionalProperties: false
      type: object
      properties:
        from:
          type: integer
          example: 1299
          description: >-
            Lowest total parcel value that this carrier will be selected for.
            Value is in configured in the smallest subunit, e.g. cents.
          minimum: 0
        to:
          type: integer
          example: 25000
          description: >-
            Highest total parcel value that this carrier will be selected for.
            Value is configured in the smallest subunit, e.g. cents.
          minimum: 1
        currency:
          description: The currency of the price as an ISO 4217 code.
          example: EUR
          nullable: true
          allOf:
            - $ref: '#/components/schemas/CurrencyCode'
        decimalPlaces:
          type: integer
          description: Number of decimal places for the given currency
          example: 2
          minimum: 0
      required:
        - from
        - to
        - currency
        - decimalPlaces
      title: PriceRange
      description: PriceRange
    DeliveryCost:
      type: object
      additionalProperties: false
      properties:
        cost:
          type: number
          example: 10.99
          description: The cost of sending with a carrier
        currency:
          type: string
          example: EUR
          description: currency as 3 letter iso code
          pattern: ^[A-Z]{3}$
      required:
        - cost
        - currency
      title: DeliveryCost
      description: DeliveryCost
    CarrierCountryServiceMapping:
      type: object
      additionalProperties: false
      properties:
        id:
          description: unique identifier for a countryServiceMapping
          example: bc5b581a-8f65-45b0-9f81-6e0d4babbcb2
          type: string
        source:
          $ref: '#/components/schemas/RegionInformation'
        sourceCountry:
          type: string
          minLength: 2
          maxLength: 2
          description: >-
            This part of the API is deprecated. For details please check the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />@deprecated - Use source instead.
          example: DE
        destinations:
          description: The destination regions this mapping should be applied to.
          items:
            $ref: '#/components/schemas/RegionInformation'
          minItems: 1
          type: array
        destinationCountries:
          description: >-
            This part of the API is deprecated. For details please check the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />@deprecated - Use destination instead.
          items:
            $ref: '#/components/schemas/CountryCode'
          minItems: 1
          type: array
        mandatoryShippingArticleAttributes:
          items:
            $ref: '#/components/schemas/MandatoryShippingArticleAttribute'
          type: array
          minItems: 0
        mandatoryShippingAttributes:
          items:
            $ref: '#/components/schemas/MandatoryShippingAttribute'
          type: array
          minItems: 0
        additionalShippingArticleAttributes:
          description: >-
            Article Attributes that will be displayed in the client as
            additional. They are not mandatory but could benefit the process.
            Mandatory fields can not be additional. If duplicates found, the
            additional values will be removed on read.
          items:
            $ref: '#/components/schemas/AdditionalShippingArticleAttribute'
          type: array
          minItems: 0
        additionalShippingAttributes:
          description: >-
            Shipping Attributes that will be displayed in the client as
            additional. They are not mandatory but could benefit the process.
            Mandatory fields can not be additional If duplicates found, the
            additional values will be removed on read.
          items:
            $ref: '#/components/schemas/AdditionalShippingAttribute'
          type: array
          minItems: 0
        mandatoryShippingItemAttributes:
          deprecated: true
          description: Deprecated - use mandatoryShippingArticleAttributes instead
          items:
            $ref: '#/components/schemas/MandatoryShippingItemAttribute'
          type: array
          minItems: 0
        products:
          type: array
          items:
            type: string
            example: EXPRESS
          description: Array of products for the given mapping
        carrierServices:
          type: array
          items:
            $ref: '#/components/schemas/CarrierServices'
          description: Services which can be provided by the carrier
        carrierProductCategory:
          $ref: '#/components/schemas/CarrierProductCategory'
        transitTime:
          $ref: '#/components/schemas/CarrierTransitTime'
        deliveryCosts:
          items:
            $ref: '#/components/schemas/DeliveryCost'
          type: array
          maxItems: 1
        staticCCSMRef:
          type: string
        countAsTransitDayBefore:
          type: string
      required:
        - id
        - source
        - destinations
      title: CarrierCountryServiceMapping
      description: CarrierCountryServiceMapping
    CarrierCountryServiceMappingForCreation:
      type: object
      additionalProperties: false
      properties:
        carrierConfigurationVersion:
          description: >-
            The version of the carrier configuration to be used in optimistic
            locking mechanisms.
          example: 42
          format: int64
          type: integer
        source:
          $ref: '#/components/schemas/RegionInformation'
        destinations:
          description: The destination regions this mapping should be applied to.
          items:
            $ref: '#/components/schemas/RegionInformation'
          minItems: 1
          type: array
        sourceCountry:
          deprecated: true
          type: string
          minLength: 2
          maxLength: 2
          description: >-
            This part of the API is deprecated. For details please check the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />@deprecated Use source instead.
          example: DE
        destinationCountries:
          deprecated: true
          description: >-
            This part of the API is deprecated. For details please check the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />@deprecated Use destination instead.
          items:
            $ref: '#/components/schemas/CountryCode'
          minItems: 1
          type: array
        mandatoryShippingAttributes:
          items:
            $ref: '#/components/schemas/MandatoryShippingAttribute'
          type: array
          minItems: 0
        mandatoryShippingItemAttributes:
          description: Deprecated - use mandatoryShippingArticleAttributes instead
          items:
            $ref: '#/components/schemas/MandatoryShippingItemAttribute'
          type: array
          minItems: 0
        mandatoryShippingArticleAttributes:
          items:
            $ref: '#/components/schemas/MandatoryShippingArticleAttribute'
          type: array
          minItems: 0
        additionalShippingArticleAttributes:
          description: >-
            Article Attributes that will be displayed in the client as
            additional. They are not mandatory but could benefit the process.
            Mandatory fields can not be additional. If duplicates found, the
            additional values will be removed on read.
          items:
            $ref: '#/components/schemas/AdditionalShippingArticleAttribute'
          type: array
          minItems: 0
        additionalShippingAttributes:
          description: >-
            Shipping Attributes that will be displayed in the client as
            additional. They are not mandatory but could benefit the process.
            Mandatory fields can not be additional If duplicates found, the
            additional values will be removed on read.
          items:
            $ref: '#/components/schemas/AdditionalShippingAttribute'
          type: array
          minItems: 0
        products:
          type: array
          items:
            type: string
            example: EXPRESS
        carrierProductCategory:
          $ref: '#/components/schemas/CarrierProductCategory'
        transitTime:
          $ref: '#/components/schemas/CarrierTransitTime'
        deliveryCosts:
          items:
            $ref: '#/components/schemas/DeliveryCost'
          type: array
          minItems: 1
          maxItems: 1
        countAsTransitDayBefore:
          type: string
      required:
        - carrierConfigurationVersion
        - source
        - destinations
      title: CarrierCountryServiceMappingForCreation
      description: CarrierCountryServiceMappingForCreation
    CarrierCountryServiceMappingForUpdate:
      type: object
      additionalProperties: false
      properties:
        carrierConfigurationVersion:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
        source:
          $ref: '#/components/schemas/RegionInformation'
        destinations:
          description: The destination regions this mapping should be applied to.
          items:
            $ref: '#/components/schemas/RegionInformation'
          minItems: 1
          type: array
        sourceCountry:
          deprecated: true
          type: string
          minLength: 2
          maxLength: 2
          description: >-
            This part of the API is deprecated. For details please check the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />@deprecated Use source instead.
          example: DE
        destinationCountries:
          deprecated: true
          description: >-
            This part of the API is deprecated. For details please check the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />@deprecated Use destination instead.
          items:
            $ref: '#/components/schemas/CountryCode'
          minItems: 1
          type: array
        mandatoryShippingAttributes:
          items:
            $ref: '#/components/schemas/MandatoryShippingAttribute'
          type: array
          minItems: 0
        mandatoryShippingItemAttributes:
          description: Deprecated - use mandatoryShippingArticleAttributes instead
          items:
            $ref: '#/components/schemas/MandatoryShippingItemAttribute'
          type: array
          minItems: 0
        mandatoryShippingArticleAttributes:
          items:
            $ref: '#/components/schemas/MandatoryShippingArticleAttribute'
          type: array
          minItems: 0
        additionalShippingArticleAttributes:
          description: >-
            Article Attributes that will be displayed in the client as
            additional. They are not mandatory but could benefit the process.
            Mandatory fields can not be additional. If duplicates found, the
            additional values will be removed on read.
          items:
            $ref: '#/components/schemas/AdditionalShippingArticleAttribute'
          type: array
          minItems: 0
        additionalShippingAttributes:
          description: >-
            Shipping Attributes that will be displayed in the client as
            additional. They are not mandatory but could benefit the process.
            Mandatory fields can not be additional If duplicates found, the
            additional values will be removed on read.
          items:
            $ref: '#/components/schemas/AdditionalShippingAttribute'
          type: array
          minItems: 0
        products:
          type: array
          items:
            type: string
            example: EXPRESS
          description: Array of products for the given mapping
        carrierProductCategory:
          $ref: '#/components/schemas/CarrierProductCategory'
        transitTime:
          $ref: '#/components/schemas/CarrierTransitTime'
        deliveryCosts:
          items:
            $ref: '#/components/schemas/DeliveryCost'
          type: array
          minItems: 1
          maxItems: 1
        countAsTransitDayBefore:
          type: string
      required:
        - carrierConfigurationVersion
      title: CarrierCountryServiceMappingForUpdate
      description: CarrierCountryServiceMappingForUpdate
    CarrierProductCategory:
      description: >-
        Desired product class to choose when ordering a label, this is not a
        carrier specific value
      type: string
      enum:
        - STANDARD
        - EXPRESS
        - VALUE
        - FORWARDING
      title: CarrierProductCategory
    CarrierTransitTime:
      type: object
      properties:
        minTransitDays:
          description: Minimum days a carrier needs for transit
          example: 1
          type: integer
          minimum: 0
        maxTransitDays:
          description: Maximum days a carrier needs for transit
          example: 3
          type: integer
          minimum: 0
      required:
        - maxTransitDays
        - minTransitDays
      title: CarrierTransitTime
      description: CarrierTransitTime
    MandatoryShippingItemAttribute:
      additionalProperties: false
      properties:
        referencedField:
          type: string
          enum:
            - description
            - weightInGram
            - quantity
            - parcelItemValue.value
            - parcelItemValue.currency
            - countryOfManufacture
            - tenantArticleId
          description: |-
            Deprecated:
              - description: article.title will be used instead
              - weightInGram: use MandatoryShippingArticleAttribute.attributes.weightPerUnit
              - quantity, this field is now mandatory in the item
              - parcelItemValue.value: use MandatoryShippingArticleAttribute.attributes.pricePerUnit
              - parcelItemValue.currency: use MandatoryShippingArticleAttribute.attributes.currency
              - countryOfManufacture: use MandatoryShippingArticleAttribute.attributes.countryOfManufacture
              - tenantArticleId: mandatory on line item article
        dataType:
          type: string
          enum:
            - Number
            - String
            - Date
            - Boolean
        description:
          type: string
        descriptionLocalized:
          $ref: '#/components/schemas/LocaleString'
      type: object
      title: MandatoryShippingItemAttribute
      description: MandatoryShippingItemAttribute
    CountryServiceMappingShippingArticleAttribute:
      additionalProperties: false
      properties:
        referencedField:
          $ref: >-
            #/components/schemas/MandatoryShippingArticleAttributeReferencedField
        dataType:
          $ref: '#/components/schemas/MandatoryShippingArticleAttributeDataType'
        category:
          $ref: '#/components/schemas/MandatoryShippingArticleAttributeCategory'
        description:
          type: string
        descriptionLocalized:
          $ref: '#/components/schemas/LocaleString'
      type: object
      required:
        - referencedField
        - dataType
        - category
        - descriptionLocalized
      title: CountryServiceMappingShippingArticleAttribute
      description: CountryServiceMappingShippingArticleAttribute
    MandatoryShippingArticleAttribute:
      allOf:
        - $ref: '#/components/schemas/CountryServiceMappingShippingArticleAttribute'
      title: MandatoryShippingArticleAttribute
      description: MandatoryShippingArticleAttribute
    AdditionalShippingArticleAttribute:
      allOf:
        - $ref: '#/components/schemas/CountryServiceMappingShippingArticleAttribute'
      title: AdditionalShippingArticleAttribute
      description: AdditionalShippingArticleAttribute
    MandatoryShippingArticleAttributeReferencedField:
      enum:
        - attributes.weightPerUnit
        - attributes.hsCode
        - attributes.currency
        - attributes.valuePerUnit
        - attributes.countryOfManufacture
      type: string
      title: MandatoryShippingArticleAttributeReferencedField
      description: MandatoryShippingArticleAttributeReferencedField
    MandatoryShippingArticleAttributeCategory:
      enum:
        - customs
        - dimensions
        - insurance
      type: string
      title: MandatoryShippingArticleAttributeCategory
      description: MandatoryShippingArticleAttributeCategory
    MandatoryShippingArticleAttributeDataType:
      enum:
        - NUMBER
        - STRING
      type: string
      title: MandatoryShippingArticleAttributeDataType
      description: MandatoryShippingArticleAttributeDataType
    CountryServiceMappingShippingAttribute:
      additionalProperties: false
      properties:
        referencedField:
          type: string
          enum:
            - dimensions.weight
            - productValue
            - pickUpInformation.startTime
            - pickUpInformation.endTime
            - services.BulkyGoods
            - services.Signature
            - services.AdultSignature
            - services.CustomerSignature
            - services.SaturdayDelivery
          description: >-
            - dimensions.weight: will be calculated from
            MandatoryShippingArticleAttribute.attributes.weightPerUnit if items
            with weightPerUnit is set on all items - productValue: will be
            calculated from
            MandatoryShippingArticleAttribute.attributes.pricePerUnit if items
            with pricePerUnit is set on all items
        dataType:
          type: string
          enum:
            - Number
            - String
            - Date
            - Boolean
        description:
          type: string
        descriptionLocalized:
          $ref: '#/components/schemas/LocaleString'
      type: object
      title: CountryServiceMappingShippingAttribute
      description: CountryServiceMappingShippingAttribute
    MandatoryShippingAttribute:
      allOf:
        - $ref: '#/components/schemas/CountryServiceMappingShippingAttribute'
      title: MandatoryShippingAttribute
      description: MandatoryShippingAttribute
    AdditionalShippingAttribute:
      allOf:
        - $ref: '#/components/schemas/CountryServiceMappingShippingAttribute'
      title: AdditionalShippingAttribute
      description: AdditionalShippingAttribute
    RegionInformation:
      type: object
      properties:
        countryCode:
          $ref: '#/components/schemas/CountryCode'
        postalCodes:
          type: array
          items:
            type: string
      required:
        - countryCode
      title: RegionInformation
      description: RegionInformation
    CountryCode:
      type: string
      minLength: 2
      maxLength: 2
      description: ISO 3166 ALPHA-2 of country
      example: DE
      title: CountryCode
    PackJobForCreation:
      properties:
        customAttributes:
          description: >-
            Attributes that can be added to the pack job. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the informations carried here.
          type: object
        facilityRef:
          description: Reference to the facility you want to get the corresponding packjob
          example: Esb50gpH7794X5NdMp3C
          type: string
        pickJobRef:
          description: Reference to a pick job
          example: Pic50gpH7794X5NdMp3C
          type: string
        status:
          $ref: '#/components/schemas/PackJobStatus'
        lineItems:
          items:
            $ref: '#/components/schemas/PackLineItemForCreation'
          type: array
        assignedUsers:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/AssignedUserForCreationByName'
              - $ref: '#/components/schemas/AssignedUserForCreationById'
          description: Assigned users for this entity
        processId:
          description: >-
            Id of the global process related to this entity. For example used
            for starting the GDPR process and others.
          type: string
        operativeProcessRef:
          type: string
        tenantOrderId:
          type: string
        targetTime:
          description: Until when the pack job must be finished.
          example: '2020-02-03T09:45:51.525Z'
          format: date-time
          type: string
        orderDate:
          description: Date when the order was placed.
          example: '2020-02-03T09:45:51.525Z'
          format: date-time
          type: string
        tags:
          description: >-
            Tags can only be set when there is no process related with this
            packJob. Setting processId and tags will lead to an validationError.
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/TagReference'
        recipient:
          $ref: '#/components/schemas/ConsumerAddress'
        invoice:
          $ref: '#/components/schemas/ConsumerAddress'
        deliveryChannel:
          enum:
            - COLLECT
            - SHIPPING
          type: string
        shortId:
          description: The short identifier of the shipment.
          type: string
        transfers:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/OperativeTransfer'
        orderRef:
          description: The id of the order
          type: string
        recipientName:
          description: The name of the recipient
          type: string
      required:
        - facilityRef
        - lineItems
      type: object
      xml:
        name: PackJobForCreation
      title: PackJobForCreation
      description: PackJobForCreation
    DocumentHandling:
      type: object
      properties:
        sendLabel:
          type: object
          properties:
            enabled:
              type: boolean
              default: false
          required:
            - enabled
      required:
        - sendLabel
      title: DocumentHandling
      description: DocumentHandling
    PackJob:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
        - properties:
            id:
              description: >-
                The id of this pack job. It is generated during creation
                automatically and suits as the primary identifier of the
                described entity.
              example: Esb20gpHBL94X5NdMp3C
              type: string
            editor:
              $ref: '#/components/schemas/Editor'
            facilityRef:
              description: >-
                Reference to the facility you want to get the corresponding
                packjob
              example: Esb50gpH7794X5NdMp3C
              type: string
            pickJobRef:
              description: Reference to a pick job
              example: Pic50gpH7794X5NdMp3C
              type: string
            assignedUsers:
              type: array
              items:
                $ref: '#/components/schemas/AssignedUser'
              description: Assigned users for this entity
            status:
              $ref: '#/components/schemas/PackJobStatus'
            lineItems:
              items:
                $ref: '#/components/schemas/PackLineItem'
              type: array
            packingSourceContainers:
              items:
                $ref: '#/components/schemas/StrippedPackingSourceContainer'
            processId:
              description: >-
                Id of the global process related to this entity. For example
                used for starting the GDPR process and others.
              type: string
            operativeProcessRef:
              type: string
            targetTime:
              description: Until when the pack job must be finished.
              example: '2020-02-03T09:45:51.525Z'
              format: date-time
              type: string
            orderDate:
              description: Date when the order was placed.
              example: '2020-02-03T09:45:51.525Z'
              format: date-time
              type: string
            tags:
              type: array
              minItems: 1
              items:
                $ref: '#/components/schemas/TagReference'
            stickers:
              items:
                $ref: '#/components/schemas/Sticker'
              type: array
            recipient:
              $ref: '#/components/schemas/ConsumerAddress'
            invoice:
              $ref: '#/components/schemas/ConsumerAddress'
            tenantOrderId:
              type: string
            documentsRef:
              description: Reference to the documents collection from this entity
              type: string
            documentHandling:
              $ref: '#/components/schemas/DocumentHandling'
            anonymized:
              description: Indicates if gdpr related data was anonymized
              example: false
              type: boolean
            deliveryChannel:
              enum:
                - COLLECT
                - SHIPPING
              type: string
            customAttributes:
              description: >-
                Attributes that can be added to the pack job. These attributes
                cannot be used within fulfillment processes, but it could be
                useful to have the informations carried here.
              type: object
            shortId:
              description: The short identifier of the shipment.
              type: string
            transfers:
              type: array
              minItems: 0
              items:
                $ref: '#/components/schemas/OperativeTransfer'
            orderRef:
              description: The id of the order
              type: string
            recipientName:
              description: The name of the recipient
              type: string
          required:
            - id
            - facilityRef
            - documentsRef
            - status
            - lineItems
            - processId
          type: object
          xml:
            name: PackJob
      title: PackJob
      description: PackJob
    TagReference:
      required:
        - value
        - id
      properties:
        value:
          type: string
        id:
          type: string
      title: TagReference
      description: TagReference
    PackJobStatus:
      description: >-
        A pack job initially has the status OPEN and packing can start. When
        packing has started, the pack job changes its status to IN_PROGRESS.
        After a pack job has been completely packed its status becomes CLOSED.
      enum:
        - OPEN
        - IN_PROGRESS
        - CLOSED
        - OBSOLETE
        - CANCELED
        - PAUSED
      type: string
      xml:
        name: PackJobStatus
      title: PackJobStatus
    TagPatchActions:
      properties:
        actions:
          items:
            anyOf:
              - $ref: '#/components/schemas/AddAllowedValueToTagAction'
          minItems: 1
          type: array
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
        - actions
      type: object
      xml:
        name: TagPatchActions
      title: TagPatchActions
      description: TagPatchActions
    AddAllowedValueToTagAction:
      title: AddAllowedValueToTagAction
      description: Action to add allowed values to a tag
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: >-
                Use value 'AddAllowedValueToTag', because you want to add an
                allowed value to a tag
              enum:
                - AddAllowedValueToTag
              type: string
            allowedValue:
              type: string
          required:
            - action
            - allowedValue
          type: object
      xml:
        name: AddAllowedValueToTagAction
    PackLineItemForCreation:
      properties:
        article:
          $ref: '#/components/schemas/PackLineItemArticle'
        customAttributes:
          description: >-
            Attributes that can be added to the pack line. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the information carried here.
          type: object
        quantity:
          description: quantity of the specific article that has been ordered
          example: 21
          format: int64
          minimum: 1
          type: integer
        measurementUnitKey:
          description: Identifier for items unit of measurement.
          example: liter
          type: string
        tags:
          items:
            $ref: '#/components/schemas/TagReference'
          type: array
        stickers:
          items:
            $ref: '#/components/schemas/Sticker'
          type: array
        scannableCodes:
          items:
            description: Codes, that identify the article
            type: string
          type: array
        recordableAttributes:
          items:
            $ref: '#/components/schemas/RecordableAttributeForCreation'
          type: array
      required:
        - quantity
        - article
      type: object
      xml:
        name: PackLineItemForCreation
      title: PackLineItemForCreation
      description: PackLineItemForCreation
    PackLineItem:
      allOf:
        - $ref: '#/components/schemas/PackLineItemForCreation'
        - properties:
            id:
              description: >-
                The id of this lineItem. It is generated during creation
                automatically and suits as the primary identifier of the
                described entity.
              example: climk4dcQFiPdA5ULuhS
              type: string
            packed:
              description: The amount of articles that were packed for this packline.
              example: 20
              format: int32
              minimum: 0
              type: integer
            recordableAttributes:
              items:
                $ref: '#/components/schemas/RecordableAttribute'
              type: array
            originId:
              nullable: true
              type: string
              description: >-
                The id of the line item this line item was originated from,
                before any split has happened. This can be used to restore the
                ‘pre-split’ status.
              example: df671041-10dd-4600-a2ff-e9ffe2556bba
          required:
            - id
      type: object
      xml:
        name: PackLineItem
      title: PackLineItem
      description: PackLineItem
    PackLineItemForUpdate:
      properties:
        id:
          type: string
          description: references the id of the packLineItem of a packJob
        packed:
          description: >-
            The amount of articles that were packed for this packline. Can't be
            more than picked before.
          example: 20
          format: int64
          minimum: 0
          type: integer
      required:
        - id
        - packed
      type: object
      xml:
        name: PackLineItemForUpdate
      title: PackLineItemForUpdate
      description: PackLineItemForUpdate
    PackLineItemArticle:
      allOf:
        - $ref: '#/components/schemas/AbstractArticle'
        - properties:
            attributes:
              items:
                $ref: '#/components/schemas/ArticleAttributeItem'
              type: array
              maxItems: 40
          type: object
      xml:
        name: PackLineItemArticle
      title: PackLineItemArticle
      description: PackLineItemArticle
    PackJobWithSearchPath:
      allOf:
        - $ref: '#/components/schemas/PackJob'
        - additionalProperties: false
      properties:
        searchPaths:
          items:
            type: string
          type: array
          minItems: 0
      xml:
        name: PackJobWithPath
      title: PackJobWithSearchPath
      description: PackJobWithSearchPath
    PackJobs:
      properties:
        packJobs:
          items:
            $ref: '#/components/schemas/PackJobWithSearchPath'
          type: array
        total:
          description: Total number of found entities for this query
          example: 42
          type: integer
      type: object
      title: PackJobs
      description: PackJobs
    PackJobSplitLineItemsActionParameter:
      title: PackJobSplitLineItemsActionParameter
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/PackJobSplitLineItemsActionEnum'
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          type: integer
        splitLineItemsInfo:
          items:
            $ref: '#/components/schemas/PackJobSplitLineItemsInfo'
          type: array
      required:
        - name
        - version
        - splitLineItemsInfo
      type: object
      description: PackJobSplitLineItemsActionParameter
    PackJobSplitLineItemsActionEnum:
      enum:
        - SPLIT_LINES_PACK_JOB
      type: string
      title: PackJobSplitLineItemsActionEnum
      description: PackJobSplitLineItemsActionEnum
    PackJobSplitLineItemsInfo:
      additionalProperties: false
      properties:
        lineItemId:
          type: string
          description: references the id of the packLineItem of a packJob
        quantity:
          description: quantity of the specific item that has been ordered
          example: 21
          minimum: 1
          type: integer
        packed:
          description: The amount of articles that were packed for this line item.
          example: 20
          format: int64
          minimum: 0
          type: integer
      required:
        - lineItemId
        - quantity
      type: object
      title: PackJobSplitLineItemsInfo
      description: PackJobSplitLineItemsInfo
    PackJobUpdateRecordableAttributesActionParameter:
      title: PackJobUpdateRecordableAttributesActionParameter
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/PackJobUpdateRecordableAttributesActionEnum'
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          type: integer
        recordableAttributeUpdates:
          items:
            $ref: '#/components/schemas/RecordableAttributeForUpdate'
          type: array
      required:
        - name
        - version
        - recordableAttributeUpdates
      type: object
      description: PackJobUpdateRecordableAttributesActionParameter
    PackJobUpdateRecordableAttributesActionEnum:
      enum:
        - UPDATE_RECORDABLE_ATTRIBUTES_PACK_JOB
      type: string
      title: PackJobUpdateRecordableAttributesActionEnum
      description: PackJobUpdateRecordableAttributesActionEnum
    PackJobPatchActions:
      properties:
        actions:
          items:
            anyOf:
              - $ref: '#/components/schemas/ModifyPackJobAction'
              - $ref: '#/components/schemas/ModifyPackLineItemAction'
              - $ref: '#/components/schemas/PausePackJobAction'
          minItems: 1
          type: array
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
        - actions
      type: object
      xml:
        name: PackJobPatchActions
      title: PackJobPatchActions
      description: PackJobPatchActions
    ModifyPackJobAction:
      title: ModifyPackJobAction
      description: Action to modify a PackJob
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: Use value 'ModifyPackJob', because you want to modify a packjob
              enum:
                - ModifyPackJob
              type: string
            status:
              $ref: '#/components/schemas/PackJobStatus'
            customAttributes:
              description: >-
                Attributes that can be added to the line item. These attributes
                cannot be used within fulfillment processes, but it could be
                useful to have the informations carried here.
              type: object
          required:
            - action
          type: object
      xml:
        name: ModifyPackJobAction
    PausePackJobAction:
      title: PausePackJobAction
      description: Action to pause a PackJob
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: Use value 'PausePackJob', because you want to pause a packjob
              enum:
                - PausePackJob
              type: string
            packLineItemsUpdate:
              items:
                $ref: '#/components/schemas/PackLineItemForUpdate'
              type: array
          required:
            - action
          type: object
      xml:
        name: PausePackJobAction
    ModifyPackLineItemAction:
      title: ModifyPackLineItemAction
      description: Action to modify a PackLineItem of a PackJob
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: >-
                Use value 'ModifyPackLineItem', because you want to modify a
                packjobs lineItem
              enum:
                - ModifyPackLineItem
              type: string
            id:
              type: string
              description: references the id of the packLineItem of a packJob
            packed:
              description: >-
                The amount of articles that were packed for this packline. Can't
                be more than picked before.
              example: 20
              format: int64
              minimum: 0
              type: integer
          required:
            - action
            - id
          type: object
      xml:
        name: ModifyPackLineItemAction
    PartialStockForCreation:
      additionalProperties: false
      properties:
        tenantPartialStockId:
          description: The id associated with the partial stock
          type: string
        stockinformation:
          $ref: '#/components/schemas/StockInformationForCreation'
        scores:
          type: array
          items:
            $ref: '#/components/schemas/Score'
        location:
          $ref: '#/components/schemas/Location'
      required:
        - tenantPartialStockId
        - stockinformation
      type: object
      xml:
        name: PartialStock
      title: PartialStockForCreation
      description: PartialStockForCreation
    PartialStock:
      allOf:
        - $ref: '#/components/schemas/PartialStockForCreation'
      properties:
        eventLastModified:
          description: >-
            The date when the inventory domain comunicated a change in this
            partial stock
          example: '2020-02-03T08:45:50.525Z'
          format: date-time
          type: string
        stockinformation:
          $ref: '#/components/schemas/StockInformation'
      required:
        - tenantPartialStockId
        - stockinformation
      type: object
      xml:
        name: PartialStock
      title: PartialStock
      description: PartialStock
    Location:
      properties:
        locationRef:
          description: The id of the location
          type: string
        scannableCodes:
          description: Represents barcodes that may be scanned at this location
          type: array
          items:
            type: string
      xml:
        name: Location
      title: Location
      description: Location
    ScoreType:
      description: Describes what kind of score is represented
      enum:
        - RATING
        - SEQUENCE
      type: string
      xml:
        name: ScoreType
      title: ScoreType
    ScoreName:
      description: Describes the name of the score for humans to identify
      enum:
        - ZONE
        - EXPIRY_DATE
        - RECEIPT_DATE
        - RUNNING_SEQUENCE
        - RESTOW_SEQUENCE
      type: string
      xml:
        name: ScoreName
      title: ScoreName
    Score:
      properties:
        scoreType:
          $ref: '#/components/schemas/ScoreType'
        scoreName:
          $ref: '#/components/schemas/ScoreName'
        scoreValue:
          description: Describes the performance of the score
          type: number
      required:
        - scoreType
        - scoreName
        - scoreValue
      type: object
      xml:
        name: Score
      title: Score
      description: Score
    ModifyPartialStockAction:
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: >-
                Use value 'ModifyPartialStock', because you want to modify a
                partial stock
              enum:
                - ModifyPartialStock
              type: string
            partialStocks:
              items:
                $ref: '#/components/schemas/PartialStockForCreation'
              minItems: 0
              type: array
          required:
            - action
          type: object
      xml:
        name: ModifyPartialStockAction
      title: ModifyPartialStockAction
      description: ModifyPartialStockAction
    PartialStockPatchActions:
      properties:
        actions:
          items:
            $ref: '#/components/schemas/ModifyPartialStockAction'
          minItems: 1
          maxItems: 1
          type: array
        version:
          description: >-
            The version of the listing where we want to patch the partialStocks,
            to be used in optimistic locking mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
        - actions
      type: object
      xml:
        name: PartialStockPatchActions
      title: PartialStockPatchActions
      description: PartialStockPatchActions
    PartialStocksForReplacement:
      additionalProperties: false
      properties:
        partialStocks:
          items:
            $ref: '#/components/schemas/PartialStockForCreation'
          minItems: 1
          type: array
        version:
          description: >-
            The version of the listing where we want to put the partialStocks,
            to be used in optimistic locking mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - partialStocks
        - version
      type: object
      xml:
        name: PartialStocksForReplacement
      title: PartialStocksForReplacement
      description: PartialStocksForReplacement
    Tag:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
        - $ref: '#/components/schemas/TagForCreation'
      properties:
        id:
          type: string
      xml:
        name: Tag
      required:
        - id
      title: Tag
      description: Tag
    TagForCreation:
      additionalProperties: false
      required:
        - id
        - allowedValues
      properties:
        id:
          type: string
        allowedValues:
          type: array
          minItems: 1
          items:
            type: string
      title: TagForCreation
      description: TagForCreation
    StrippedTags:
      properties:
        tags:
          items:
            $ref: '#/components/schemas/Tag'
          type: array
        total:
          description: Total number of found entities for this query
          example: 42
          type: integer
      type: object
      title: StrippedTags
      description: StrippedTags
    ProcessPatchActions:
      properties:
        actions:
          items:
            anyOf:
              - $ref: '#/components/schemas/AddTagsToProcessAction'
              - $ref: '#/components/schemas/AssignFacilityToProcessAction'
          minItems: 1
          type: array
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
        - actions
      type: object
      xml:
        name: ProcessPatchActions
      title: ProcessPatchActions
      description: ProcessPatchActions
    AddTagsToProcessAction:
      title: AddTagsToProcessAction
      description: Action to add tags to a Process
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: >-
                Use value 'AddTagsToProcess', because you want to modify a
                process
              enum:
                - AddTagsToProcess
              type: string
            tags:
              type: array
              minItems: 1
              items:
                $ref: '#/components/schemas/TagReference'
          required:
            - action
          type: object
      xml:
        name: AddTagsToProcessAction
    PrintableDocument:
      type: object
      properties:
        id:
          type: string
        documentType:
          $ref: '#/components/schemas/DocumentType'
        documentCategory:
          $ref: '#/components/schemas/DocumentCategory'
        status:
          $ref: '#/components/schemas/DocumentStatus'
        operations:
          type: array
          description: Offered operations for this document
          items:
            $ref: '#/components/schemas/DocumentOperations'
        name:
          type: string
        path:
          type: string
        priority:
          type: number
          minimum: 0
        customAttributes:
          description: >-
            Attributes that can be added to the document. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the informations carried here.
          type: object
      required:
        - documentType
        - id
        - status
        - documentCategory
      title: PrintableDocument
      description: PrintableDocument
    PrintableDocumentForUpdate:
      type: object
      additionalProperties: false
      properties:
        version:
          description: Version of the documentSet you want to update a document of
          example: 42
          format: int64
          type: integer
        priority:
          description: Sorting display order of document
          example: 42
          format: int64
          type: integer
        status:
          $ref: '#/components/schemas/DocumentStatus'
        customAttributes:
          description: >-
            Attributes that can be added to the document. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the informations carried here.
          type: object
        operations:
          type: array
          description: Offered operations for this document
          minItems: 1
          items:
            $ref: '#/components/schemas/DocumentOperations'
      required:
        - version
      title: PrintableDocumentForUpdate
      description: PrintableDocumentForUpdate
    ExternalPrintableDocumentForCreation:
      type: object
      additionalProperties: false
      properties:
        type:
          $ref: '#/components/schemas/DocumentType'
        file:
          $ref: '#/components/schemas/NamedFile'
        priority:
          type: number
          minimum: 0
        status:
          $ref: '#/components/schemas/DocumentStatus'
        customAttributes:
          description: >-
            Attributes that can be added to the document. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the informations carried here.
          type: object
        operations:
          type: array
          description: Offered operations for this document
          minItems: 1
          items:
            $ref: '#/components/schemas/DocumentOperations'
      required:
        - type
      title: ExternalPrintableDocumentForCreation
      description: ExternalPrintableDocumentForCreation
    ExternalDocumentContentForUpdate:
      type: object
      additionalProperties: false
      properties:
        file:
          $ref: '#/components/schemas/NamedFile'
        documentSetVersion:
          type: number
          example: 2
          description: Version of documentSet to which this document belongs.
      required:
        - file
        - documentSetVersion
      title: ExternalDocumentContentForUpdate
      description: ExternalDocumentContentForUpdate
    DocumentSet:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        id:
          type: string
        facilityRef:
          type: string
        documents:
          type: array
          items:
            $ref: '#/components/schemas/PrintableDocument'
      required:
        - id
      title: DocumentSet
      description: DocumentSet
    DocumentStatus:
      type: string
      enum:
        - AVAILABLE
        - LOADING
        - REQUESTABLE
        - CANCELED
        - WAITING_FOR_INPUT
      title: DocumentStatus
      description: DocumentStatus
    DocumentOperations:
      type: string
      enum:
        - PRINT
        - VIEW
      title: DocumentOperations
      description: DocumentOperations
    DocumentCategory:
      enum:
        - EXTERNAL
        - DELIVERYNOTE
        - RETURNNOTE
        - SENDLABEL
        - RETURNLABEL
        - TRANSFERLABEL
      type: string
      title: DocumentCategory
      description: DocumentCategory
    AssignFacilityToProcessAction:
      title: AssignFacilityToProcessAction
      description: Action to assign a process to a facility.
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: Use value to manually assign a facility to a process
              enum:
                - AssignFacilityToProcess
              type: string
            facilityRef:
              type: string
            rerouteDescriptionId:
              type: string
          required:
            - action
            - facilityRef
          type: object
      xml:
        name: AssignFacilityToProcessAction
    PackingTargetContainer:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
        - $ref: '#/components/schemas/PackingTargetContainerForCreation'
      properties:
        documentsRef:
          description: Reference to the documents collection from this entity
          type: string
        description:
          type: string
        descriptionLocalized:
          $ref: '#/components/schemas/LocaleString'
        facilityRef:
          description: >-
            The id of the facility reference. The given ID has to be present in
            the system. But it is not updatable via PUT request
          example: Esb20gpHBL94X5NdMp3C
          type: string
        packJobRef:
          type: string
        shortId:
          type: string
        operativeProcessRef:
          type: string
        iconUrl:
          type: string
        id:
          type: string
        dimensions:
          $ref: '#/components/schemas/ContainerDimensions'
        weightLimitInG:
          description: 'Maximal weight in gramm(gr) the container can be loaded with. '
          example: 2500
          type: number
          minimum: 1
        name:
          type: string
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        lineItems:
          items:
            $ref: '#/components/schemas/PackingTargetContainerLineItem'
        parcels:
          type: array
          items:
            $ref: '#/components/schemas/Parcel'
      required:
        - id
        - nameLocalized
        - version
        - facilityRef
        - packJobRef
        - lineItems
      type: object
      title: PackingTargetContainer
      description: PackingTargetContainer
    PackingTargetContainerForCreation:
      properties:
        codes:
          items:
            description: List of codes
            type: string
            minItems: 1
          type: array
        lineItems:
          items:
            $ref: '#/components/schemas/PackingTargetContainerLineItemForCreation'
        packingContainerTypeRef:
          type: string
          description: deprecated - use operativeContainerTypeRef instead
        operativeContainerTypeRef:
          type: string
      required:
        - codes
      type: object
      title: PackingTargetContainerForCreation
      description: PackingTargetContainerForCreation
    ContainerDimensions:
      additionalProperties: false
      properties:
        heightInCm:
          description: The height of the container (in cm)
          example: 50
          type: number
        lengthInCm:
          description: The length of the container (in cm)
          example: 100
          type: number
        weightInG:
          description: The weight of the container (in g)
          example: 1700
          type: number
        widthInCm:
          description: The width of the container (in cm)
          example: 25.5
          type: number
      type: object
      title: ContainerDimensions
      description: ContainerDimensions
    AddressType:
      description: >-
        Type of this address, used e.g. for communication with the carrier. Use
        POSTAL_ADDRESS for the address where the order should be shipped to,
        INVOICE_ADDRESS for the address where the invoice is sent to and
        PARCEL_LOCKER if a parcel locker is used for this order.
      type: string
      enum:
        - POSTAL_ADDRESS
        - PARCEL_LOCKER
        - INVOICE_ADDRESS
      title: AddressType
    PackingTargetContainerPatchActions:
      properties:
        actions:
          items:
            anyOf:
              - $ref: >-
                  #/components/schemas/ReplaceCodesInPackingTargetContainerAction
              - $ref: '#/components/schemas/AddLineItemToPackingTargetContainerAction'
              - $ref: >-
                  #/components/schemas/RemoveLineItemFromPackingTargetContainerAction
              - $ref: >-
                  #/components/schemas/UpdateLineItemOnPackingTargetContainerAction
              - $ref: >-
                  #/components/schemas/UpdateRecordableAttributesPackingTargetContainerAction
          minItems: 1
          type: array
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
        - actions
      type: object
      xml:
        name: PackingTargetContainerPatchActions
      title: PackingTargetContainerPatchActions
      description: PackingTargetContainerPatchActions
    ReplaceCodesInPackingTargetContainerAction:
      title: ReplaceCodesInPackingTargetContainerAction
      description: Action to replace codes in packing target container.
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: >-
                Use ReplaceCodesInPackingTargetContainer to add a code to an
                existing packing container
              enum:
                - ReplaceCodesInPackingTargetContainer
              type: string
            codes:
              items:
                description: List of codes
                type: string
                minItems: 1
              type: array
          required:
            - action
          type: object
      xml:
        name: ReplaceCodesInPackingTargetContainer
    AddLineItemToPackingTargetContainerAction:
      title: AddLineItemToPackingTargetContainerAction
      description: Action to a line item to a packing target container.
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: >-
                Use AddLineItemToPackingTargetContainer to add a line item to an
                existing packing container
              enum:
                - AddLineItemToPackingTargetContainer
              type: string
            lineItem:
              $ref: '#/components/schemas/PackingTargetContainerLineItemForCreation'
          required:
            - action
            - lineItem
          type: object
      xml:
        name: AddLineItemToPackingTargetContainer
    RemoveLineItemFromPackingTargetContainerAction:
      title: RemoveLineItemFromPackingTargetContainerAction
      description: Action to a remove a line item from a packing target container.
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: >-
                Use RemoveLineItemFromPackingTargetContainer to remove a line
                item from an existing packing container
              enum:
                - RemoveLineItemFromPackingTargetContainer
              type: string
            lineItemRef:
              description: Id of the PackLineItem you want to remove.
              type: string
          required:
            - action
            - lineItemRef
          type: object
      xml:
        name: RemoveLineItemFromPackingTargetContainer
    UpdateLineItemOnPackingTargetContainerAction:
      title: UpdateLineItemOnPackingTargetContainerAction
      description: Action to a update a line item of a packing target container.
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: >-
                Use UpdateLineItemOnPackingTargetContainer to change a line item
                on an existing packing container
              enum:
                - UpdateLineItemOnPackingTargetContainer
              type: string
            lineItem:
              $ref: '#/components/schemas/PackingTargetContainerLineItem'
          required:
            - action
            - lineItem
          type: object
      xml:
        name: UpdateLineItemOnPackingTargetContainer
    UpdateRecordableAttributesPackingTargetContainerAction:
      title: UpdateRecordableAttributesPackingTargetContainerAction
      description: >-
        Action to a update the recordable attributes of the line items of a
        packing target container.
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: >-
                Use this action to update the recordable attributes of the line
                items of a packing target container
              enum:
                - UpdateRecordableAttributesPackingTargetContainer
              type: string
            recordableAttributeUpdates:
              items:
                $ref: '#/components/schemas/RecordableAttributeForUpdate'
              type: array
          required:
            - action
            - recordableAttributeUpdates
          type: object
      xml:
        name: UpdateRecordableAttributesPackingTargetContainer
    PackingTargetContainerLineItem:
      allOf:
        - $ref: '#/components/schemas/PackingTargetContainerLineItemForCreation'
      properties:
        id:
          description: >-
            The id of this lineItem. It is generated during creation
            automatically and suits as the primary identifier of the described
            entity.
          example: climk4dcQFiPdA5ULuhS
          type: string
        recordableAttributes:
          items:
            $ref: '#/components/schemas/RecordableAttribute'
          type: array
          nullable: true
      required:
        - id
        - article
        - quantity
      title: PackingTargetContainerLineItem
      description: PackingTargetContainerLineItem
    PackingTargetContainerLineItemForCreation:
      properties:
        article:
          $ref: '#/components/schemas/PackingTargetContainerLineItemArticle'
        customAttributes:
          description: >-
            Attributes that can be added to the line item. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the informations carried here.
          type: object
        measurementUnitKey:
          description: Identifier for items unit of measurement.
          example: liter
          type: string
        quantity:
          description: quantity of the specific article that has been ordered
          example: 21
          format: int64
          minimum: 1
          type: integer
        scannableCodes:
          items:
            description: Codes, that identify the article
            type: string
          type: array
        recordableAttributes:
          items:
            $ref: '#/components/schemas/RecordableAttributeForCreation'
          type: array
          nullable: true
      required:
        - article
        - quantity
      title: PackingTargetContainerLineItemForCreation
      description: PackingTargetContainerLineItemForCreation
    PackingTargetContainerLineItemArticle:
      allOf:
        - $ref: '#/components/schemas/AbstractArticle'
        - properties:
            attributes:
              items:
                $ref: '#/components/schemas/PackingTargetContainerAttributeItem'
              type: array
              maxItems: 40
          type: object
      xml:
        name: PackingTargetContainerLineItemArticle
      title: PackingTargetContainerLineItemArticle
      description: PackingTargetContainerLineItemArticle
    PackingTargetContainerAttributeItem:
      allOf:
        - $ref: '#/components/schemas/ArticleAttributeItem'
      title: PackingTargetContainerAttributeItem
      description: PackingTargetContainerAttributeItem
    PackingContainerType:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      additionalProperties: false
      properties:
        description:
          type: string
        descriptionLocalized:
          $ref: '#/components/schemas/LocaleString'
        iconUrl:
          description: ''
          type: string
        id:
          description: ''
          type: string
        name:
          type: string
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        priority:
          description: >-
            This value gives the priority of the respective
            packingContainerType. The lower the value the higher is the
            priority, e.g. priority 1 is higher than priority 10. The priority
            can be used to order packingContainerTypes in the UI.
          example: 100
          format: int32
          maximum: 10000
          minimum: 1
          type: integer
        dimensions:
          $ref: '#/components/schemas/ContainerDimensions'
        weightLimitInG:
          description: 'Maximal weight in gramm(gr) the container can be loaded with. '
          example: 2500
          type: number
          minimum: 1
      required:
        - id
        - version
        - nameLocalized
      type: object
      title: PackingContainerType
      description: PackingContainerType
    PackingContainerTypeForCreation:
      additionalProperties: false
      properties:
        descriptionLocalized:
          $ref: '#/components/schemas/LocaleString'
        icon:
          $ref: '#/components/schemas/NamedFile'
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        priority:
          description: >-
            This value gives the priority in the respective
            packingContainerType. The lower the value the higher is the
            priority, e.g. priority 1 is higher than priority 10. The priority
            can be used to order packingContainerTypes.
          example: 100
          format: int32
          maximum: 10000
          minimum: 1
          type: integer
        dimensions:
          $ref: '#/components/schemas/ContainerDimensions'
        weightLimitInG:
          description: 'Maximal weight in gramm(gr) the container can be loaded with. '
          example: 2500
          type: number
          minimum: 1
      required:
        - nameLocalized
      type: object
      title: PackingContainerTypeForCreation
      description: PackingContainerTypeForCreation
    PackingContainerTypePatchActions:
      properties:
        actions:
          items:
            anyOf:
              - $ref: '#/components/schemas/ModifyPackingContainerTypeAction'
              - $ref: '#/components/schemas/ModifyPackingContainerTypeIconAction'
          minItems: 1
          type: array
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
        - actions
      type: object
      xml:
        name: PackingContainerTypePatchActions
      title: PackingContainerTypePatchActions
      description: PackingContainerTypePatchActions
    ModifyPackingContainerTypeAction:
      title: ModifyPackingContainerTypeAction
      description: Action to a modify the type of a packing container.
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: >-
                Use value 'ModifyPackingContainerType', because you want to
                modify a PackingContainerType
              enum:
                - ModifyPackingContainerType
              type: string
            descriptionLocalized:
              $ref: '#/components/schemas/LocaleString'
            nameLocalized:
              $ref: '#/components/schemas/LocaleString'
            priority:
              description: >-
                This value gives the priority in the respective
                packingContainerType. The lower the value the higher is the
                priority, e.g. priority 1 is higher than priority 10. The
                priority can be used to order PackingContainerTypes.
              example: 100
              format: int32
              maximum: 10000
              minimum: 1
              type: integer
            dimensions:
              $ref: '#/components/schemas/ContainerDimensions'
            weightLimitInG:
              description: 'Maximal weight in gramm(gr) the container can be loaded with. '
              example: 2500
              type: number
              minimum: 1
          required:
            - action
          type: object
      xml:
        name: ModifyPackingContainerType
    NullableEntity:
      nullable: true
      title: NullableEntity
      description: NullableEntity
    SupplierForModification:
      additionalProperties: false
      properties:
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
        name:
          example: Hamburg NW2
          type: string
        address:
          type: object
          nullable: true
          allOf:
            - $ref: '#/components/schemas/FacilityAddressForCreation'
        status:
          $ref: '#/components/schemas/FacilityStatus'
        tenantFacilityId:
          description: The id of the facility in the tenants own system
          example: K12345
          type: string
          nullable: true
        tags:
          type: array
          nullable: true
          minItems: 1
          items:
            $ref: '#/components/schemas/TagReference'
        customAttributes:
          description: >-
            Attributes that can be added to the facility. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the informations carried here.
          type: object
          nullable: true
        type:
          $ref: '#/components/schemas/FacilityType'
      required:
        - type
        - version
      type: object
      title: SupplierForModification
      description: SupplierForModification
    ManagedFacilityForModification:
      additionalProperties: false
      properties:
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
        name:
          example: Hamburg NW2
          type: string
        status:
          $ref: '#/components/schemas/FacilityStatus'
        tenantFacilityId:
          description: The id of the facility in the tenants own system
          example: K12345
          type: string
          nullable: true
        tags:
          type: array
          nullable: true
          minItems: 1
          items:
            $ref: '#/components/schemas/TagReference'
        customAttributes:
          description: >-
            Attributes that can be added to the facility. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the informations carried here.
          type: object
          nullable: true
        type:
          $ref: '#/components/schemas/FacilityType'
        address:
          $ref: '#/components/schemas/FacilityAddressForCreation'
        closingDays:
          description: >-
            Days of the year where the facility is closed and doesn't allows
            picking
          items:
            $ref: '#/components/schemas/ClosingDay'
          type: array
          nullable: true
        contact:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/FacilityContact'
          type: object
        fulfillmentProcessBuffer:
          description: Duration in minutes until an order is processed
          example: '240'
          minimum: 0
          type: integer
          nullable: true
        locationType:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/FacilityLocationType'
        capacityPlanningTimeframe:
          description: >-
            The range in days per facility which defines how many days in the
            future the capacity of the facility can be planned
          type: integer
          nullable: true
          minimum: 1
        pickingTimes:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/PickingTimes'
        pickingMethods:
          description: Picking Methods supported by this facility.
          items:
            $ref: '#/components/schemas/PickingMethodEnum'
          type: array
          nullable: true
        scanningRule:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/ScanningRuleConfiguration'
        services:
          items:
            $ref: '#/components/schemas/FacilityService'
          type: array
          nullable: true
        capacityEnabled:
          type: boolean
          nullable: true
          description: >-
            Indicates that configured capacity limits for picking times are
            considered
        configs:
          nullable: true
          items:
            $ref: '#/components/schemas/LinkedConfiguration'
          type: array
      required:
        - type
        - version
      type: object
      xml:
        name: ManagedFacilityForModification
      title: ManagedFacilityForModification
      description: ManagedFacilityForModification
    ModifyPackingContainerTypeIconAction:
      title: ModifyPackingContainerTypeIconAction
      description: Action to a modify the type icon of a packing container.
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: >-
                Use value 'ModifyPackingContainerTypeIcon', because you want to
                modify a PackingContainerTypes icon
              enum:
                - ModifyPackingContainerTypeIcon
              type: string
            content:
              type: string
              description: Content of the icon as base64 string
            name:
              type: string
              description: icons filename
          required:
            - action
            - name
            - content
          type: object
      xml:
        name: ModifyPackingContainerTypeIcon
    PickRunType:
      description: >-
        Deprecated: batchPick, use batch instead Deprecated: multiOrderPick, use
        multiOrder instead
      enum:
        - multiOrderPick
        - multiOrder
        - batchPick
        - batch
      type: string
      default: batchPick
      title: PickRunType
    ParcelResult:
      description: >-
        Within this object you can find the result of the request after it has
        been processed (status = DONE or FAILED)
      properties:
        carrierTrackingNumber:
          example: '84168117830018'
          type: string
        labelUrl:
          description: >-
            The URL where you can download the label relative to the path of
            this resource
          example: '%%HOST%%/api/parcels/{parcelId}/labels/84168117830018.pdf'
          type: string
        proxyId:
          description: The ID of the corresponding job at the CEP proxy (if used)
          example: 3a186c51d4281acbecf5ed38805b1db92a9d668b
          type: string
        carrierParcelRef:
          description: The reference number of the parcel by the carrier
          example: '84168117830018'
          type: string
          minLength: 1
          maxLength: 120
        returnLabelId:
          description: The original return label id
          example: 3a186c51d4281acbecf5ed38805b1db92a9d668b
          type: string
        returnLabelUrl:
          description: The original return label URL
          example: someCepProvider.com/pathToReturnLabel.pdf
          type: string
        returnTrackingUrl:
          description: The URL to track the return of this parcel
          example: http://track.io/3a186c51d4
          type: string
        customsDocumentId:
          description: The customs document id
          example: 3a186c51d4281acbecf5ed38805b1db92a9d668b
          type: string
        customsDocumentUrl:
          description: The original customs document URL
          example: someCepProvider.com/pathToReturnLabel.pdf
          type: string
        sendLabelUrl:
          description: The original send label URL
          example: someCepProvider.com/pathToSendLabel.pdf
          type: string
        summary:
          description: Summary of the result of the request in a human readable form.
          example: Package label was successfully requested at DHL.
          type: string
        carrierTrackingStatus:
          oneOf:
            - $ref: '#/components/schemas/TrackingStatus'
            - $ref: '#/components/schemas/DhlTrackingStatus'
        trackingStatus:
          $ref: '#/components/schemas/TrackingStatus'
        trackingUrl:
          description: The URL to track this parcel
          example: http://track.io/3a186c51d4
          type: string
      required:
        - summary
      type: object
      title: ParcelResult
    WeekDay:
      description: A weekday
      enum:
        - MONDAY
        - TUESDAY
        - WEDNESDAY
        - THURSDAY
        - FRIDAY
        - SATURDAY
        - SUNDAY
      type: string
      xml:
        name: WeekDay
      title: WeekDay
    RestowedItems:
      properties:
        restowedItems:
          items:
            $ref: '#/components/schemas/RestowItem'
          type: array
        total:
          description: Total number of found entities for this query
          example: 42
          type: integer
      type: object
      title: RestowedItems
      description: RestowedItems
    ModifyRestowItemAction:
      title: ModifyRestowItemAction
      description: Action to modify a restow item.
      additionalProperties: false
      properties:
        action:
          description: >-
            Use value 'ModifyRestowItem', because you want to modify a restow
            item
          enum:
            - ModifyRestowItem
          type: string
        restowed:
          type: boolean
          example: true
          default: false
          description: Indicates if the restowItem has been restowed
        location:
          $ref: '#/components/schemas/Location'
      required:
        - action
        - restowed
      type: object
    RestowItem:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        id:
          example: LGMl2DuvPnfPoSHhYFOm
          type: string
        quantity:
          example: 1
          format: int64
          minimum: 1
          type: integer
          default: 1
        operativeProcessRef:
          description: id of the connected operative process if available
          type: string
        processRef:
          description: id of the connected process if available
          type: string
        measurementUnitKey:
          description: Identifier for items unit of measurement.
          example: liter
          type: string
        article:
          $ref: '#/components/schemas/RestowItemArticle'
        restowed:
          type: boolean
          example: true
          default: false
          description: Indicates if the restowItem has been restowed
        scannableCodes:
          items:
            description: Codes, that identify the article
            type: string
          type: array
        facilityRef:
          description: >-
            The id of the facility reference. The given ID has to be present in
            the system.
          example: Esb20gpHBL94X5NdMp3C
          type: string
        location:
          $ref: '#/components/schemas/Location'
        stockRef:
          description: id of the stock entity for this line item
          type: string
        status:
          $ref: '#/components/schemas/RestowItemStatus'
        recordableAttributes:
          items:
            $ref: '#/components/schemas/RecordableAttribute'
          type: array
          nullable: true
      required:
        - id
        - article
        - restowed
        - facilityRef
        - quantity
        - status
      type: object
      title: RestowItem
      description: RestowItem
    RestowItemForCreation:
      properties:
        measurementUnitKey:
          description: Identifier for items unit of measurement.
          example: liter
          type: string
        quantity:
          example: 1
          format: int64
          minimum: 1
          type: integer
          default: 1
        article:
          $ref: '#/components/schemas/RestowItemArticle'
        restowed:
          type: boolean
          example: true
          default: false
          description: Indicates if the restowItem has been restowed
        scannableCodes:
          items:
            description: Codes, that identify the article
            type: string
          type: array
        facilityRef:
          description: >-
            The id of the facility reference. The given ID has to be present in
            the system.
          example: Esb20gpHBL94X5NdMp3C
          type: string
        location:
          $ref: '#/components/schemas/Location'
        recordableAttributes:
          items:
            $ref: '#/components/schemas/RecordableAttributeForCreation'
          type: array
          nullable: true
      required:
        - facilityRef
        - article
        - quantity
      type: object
      title: RestowItemForCreation
      description: RestowItemForCreation
    RestowItemStatus:
      description: Status of the restow item
      enum:
        - CANCELED
        - CLOSED
        - OPEN
      type: string
      title: RestowItemStatus
    RestowItemArticle:
      allOf:
        - $ref: '#/components/schemas/AbstractArticle'
        - properties:
            attributes:
              items:
                $ref: '#/components/schemas/RestowAttributeItem'
              type: array
          type: object
      xml:
        name: RestowItemArticle
      title: RestowItemArticle
      description: RestowItemArticle
    RestowAttributeItem:
      allOf:
        - $ref: '#/components/schemas/ArticleAttributeItem'
      title: RestowAttributeItem
      description: RestowAttributeItem
    RestowItemPatchActions:
      title: RestowItemPatchActions
      description: >-
        Deprecated Actions to modify restow items - please use
        /api/restowitem/{id}/actions
      properties:
        actions:
          items:
            anyOf:
              - $ref: '#/components/schemas/ModifyRestowItemAction'
          minItems: 1
          type: array
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
        - actions
      type: object
      xml:
        name: RestowItemPatchActions
    OperationalRestowingConfigurations:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        restowingProcessConfiguration:
          $ref: '#/components/schemas/RestowingProcessConfiguration'
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
      type: object
      title: OperationalRestowingConfigurations
      description: OperationalRestowingConfigurations
    RestowingProcessConfiguration:
      properties:
        restowingProcessTypes:
          type: array
          items:
            $ref: '#/components/schemas/RestowingProcessTypeEnum'
          minItems: 0
      required:
        - restowingProcessTypes
      type: object
      title: RestowingProcessConfiguration
      description: RestowingProcessConfiguration
    RestowingProcessTypeEnum:
      description: Where restow items should be created during the operational process
      enum:
        - PICKING
        - PACKING
        - HANDOVER
      type: string
      title: RestowingProcessTypeEnum
    RestowItemActionsParameter:
      anyOf:
        - $ref: '#/components/schemas/RestowItemRestowActionParameter'
        - $ref: '#/components/schemas/RestowItemCancelActionParameter'
      title: RestowItemActionsParameter
      description: RestowItemActionsParameter
    RestowItemRestowActionParameter:
      title: RestowItemRestowActionParameter
      description: Action to restow a RestowItem.
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/RestowItemRestowActionEnum'
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
        location:
          $ref: '#/components/schemas/Location'
      required:
        - name
        - version
    RestowItemRestowActionEnum:
      enum:
        - RESTOW
      type: string
      title: RestowItemRestowActionEnum
      description: RestowItemRestowActionEnum
    RestowItemCancelActionParameter:
      title: RestowItemCancelActionParameter
      description: Action to cancel a RestowItem.
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/RestowItemCancelActionEnum'
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
      required:
        - name
        - version
    RestowItemCancelActionEnum:
      enum:
        - CANCEL
      type: string
      title: RestowItemCancelActionEnum
      description: RestowItemCancelActionEnum
    RestowItemsSortOptionsEnum:
      enum:
        - CREATED_DESC
        - CREATED_ASC
        - LAST_MODIFIED_DESC
        - LAST_MODIFIED_ASC
      type: string
      title: RestowItemsSortOptionsEnum
      description: RestowItemsSortOptionsEnum
    PickingConfigurations:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        pickingShortPickConfiguration:
          $ref: '#/components/schemas/PickingShortPickConfiguration'
        scanningConfiguration:
          $ref: '#/components/schemas/PickingScanningConfiguration'
        scanCodeValidationConfiguration:
          $ref: '#/components/schemas/PickingScanCodeValidationConfiguration'
        takeOverPickJobConfiguration:
          $ref: '#/components/schemas/TakeOverPickJobConfiguration'
        scheduledPickJobReleaseConfiguration:
          $ref: '#/components/schemas/ScheduledPickJobReleaseConfiguration'
        loadUnitAssignmentConfiguration:
          $ref: '#/components/schemas/LoadUnitAssignmentConfiguration'
        pickingMethodsConfiguration:
          $ref: '#/components/schemas/PickingMethodsConfiguration'
        restartPickJobConfiguration:
          $ref: '#/components/schemas/RestartPickJobConfiguration'
        stockUpdateConfiguration:
          $ref: '#/components/schemas/PickingStockUpdateConfiguration'
        backofficePickingConfiguration:
          $ref: '#/components/schemas/BackofficePickingConfiguration'
        multiOrderPickingConfiguration:
          $ref: '#/components/schemas/MultiOrderPickingConfiguration'
        storageLocationAssignmentConfiguration:
          $ref: '#/components/schemas/StorageLocationAssignmentConfiguration'
      type: object
      title: PickingConfigurations
      description: PickingConfigurations
    PickingStockUpdateConfiguration:
      properties:
        active:
          default: false
          description: Enable or disable stock update check for pick jobs
          type: boolean
      required:
        - active
      type: object
      title: PickingStockUpdateConfiguration
      description: PickingStockUpdateConfiguration
    PickingScanCodeValidationConfiguration:
      properties:
        pickingScanCodeValidationType:
          $ref: '#/components/schemas/PickingScanCodeValidationEnum'
      required:
        - pickingScanCodeValidationType
      type: object
      title: PickingScanCodeValidationConfiguration
      description: PickingScanCodeValidationConfiguration
    PickingScanCodeValidationEnum:
      description: State that defines if unknown scan codes can be accepted
      enum:
        - NO_VALIDATION
        - CODE_MUST_BE_KNOWN
      type: string
      title: PickingScanCodeValidationEnum
    TakeOverPickJobConfiguration:
      properties:
        active:
          default: false
          description: Enable or disable returns
          type: boolean
      required:
        - active
      type: object
      title: TakeOverPickJobConfiguration
      description: TakeOverPickJobConfiguration
    ScheduledPickJobReleaseConfiguration:
      properties:
        openPickJobLeadTimeInMinutes:
          description: >-
            This config describes when a scheduled PickJob should be released
            and made available for picking (pickjob.pickingTimes.latest -
            openPickJobLeadTimeInMinutes = time when the PickJob should be
            released).
          type: integer
      required:
        - openPickJobLeadTimeInMinutes
      type: object
      title: ScheduledPickJobReleaseConfiguration
      description: ScheduledPickJobReleaseConfiguration
    PickingMethodsConfiguration:
      properties:
        defaultPickingMethod:
          $ref: '#/components/schemas/PickingMethodEnum'
      required:
        - defaultPickingMethod
      type: object
      title: PickingMethodsConfiguration
      description: PickingMethodsConfiguration
    RestartPickJobConfiguration:
      properties:
        active:
          default: true
          type: boolean
      required:
        - active
      type: object
      title: RestartPickJobConfiguration
      description: RestartPickJobConfiguration
    BackofficePickingConfiguration:
      description: Can this tenant use the backoffice for picking?
      properties:
        active:
          default: false
          type: boolean
      required:
        - active
      type: object
      title: BackofficePickingConfiguration
    MultiOrderPickingConfiguration:
      additionalProperties: false
      properties:
        maxAmountOfPickJobsForMultiOrderPick:
          description: >-
            The maximum amount of pick jobs that can be combined in a multi
            order pick. Must be a value between 1 and 50.
          type: integer
      required:
        - maxAmountOfPickJobsForMultiOrderPick
      type: object
      title: MultiOrderPickingConfiguration
      description: MultiOrderPickingConfiguration
    StorageLocationAssignmentConfiguration:
      additionalProperties: false
      properties:
        storageLocationRequired:
          enum:
            - ALL
            - SOME
            - NONE
          type: string
      required:
        - storageLocationRequired
      type: object
      title: StorageLocationAssignmentConfiguration
      description: StorageLocationAssignmentConfiguration
    PickingShortPickConfiguration:
      properties:
        confirmationOnShortPick:
          description: >-
            Does the picker needs to confirm a stock correction before adding a
            short pick
          default: false
          type: boolean
        shortPickReasons:
          type: array
          items:
            $ref: '#/components/schemas/ShortPickReason'
      required:
        - confirmationOnShortPick
      type: object
      title: PickingShortPickConfiguration
      description: PickingShortPickConfiguration
    PickingScanningConfiguration:
      properties:
        scanningType:
          $ref: '#/components/schemas/PickingScanningConfigurationEnum'
        scanningRule:
          $ref: '#/components/schemas/ScanningRuleConfiguration'
        rolesWithOverwritingScanningPermission:
          type: array
          items:
            $ref: '#/components/schemas/UserRoleNames'
          minItems: 1
      type: object
      title: PickingScanningConfiguration
      description: PickingScanningConfiguration
    LoadUnitAssignmentConfiguration:
      description: >-
        Who do the load units need to be assigned in pickJob (SingleOrderPick)
        and pickRun (MultiOrderPick)
      properties:
        pickJob:
          $ref: '#/components/schemas/LoadUnitAssignmentType'
        pickRun:
          $ref: '#/components/schemas/LoadUnitAssignmentType'
      required:
        - pickJob
        - pickRun
      type: object
      title: LoadUnitAssignmentConfiguration
    LoadUnitAssignmentType:
      example: AT_END
      description: Where do the load unit needs to be assigned?
      enum:
        - INACTIVE
        - AT_START
        - AT_END
        - DURING_PICKING
      type: string
      title: LoadUnitAssignmentType
    TagScanningConfiguration:
      additionalProperties: false
      properties:
        offeredScanningRuleByTag:
          type: array
          items:
            $ref: '#/components/schemas/OfferedScanningRuleByTag'
      title: TagScanningConfiguration
      description: TagScanningConfiguration
    OfferedScanningRuleByTag:
      additionalProperties: false
      properties:
        tagRef:
          type: string
          minLength: 1
        matchingValues:
          type: array
          minItems: 1
          items:
            type: string
        scanningType:
          $ref: '#/components/schemas/PickingScanningConfigurationEnum'
      required:
        - tagRef
        - matchingValues
        - scanningType
      type: object
      title: OfferedScanningRuleByTag
      description: OfferedScanningRuleByTag
    PreferredPickingMethodsPerTag:
      additionalProperties: false
      required:
        - tagRef
        - pickingMethods
        - matchingValues
      properties:
        tagRef:
          type: string
        matchingValues:
          type: array
          minItems: 1
          items:
            type: string
        pickingMethods:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/PickingMethodEnum'
      title: PreferredPickingMethodsPerTag
      description: PreferredPickingMethodsPerTag
    PreferredPickingMethodsConfiguration:
      properties:
        PreferredPickingMethodsPerTag:
          type: array
          items:
            $ref: '#/components/schemas/PreferredPickingMethodsPerTag'
      title: PreferredPickingMethodsConfiguration
      description: PreferredPickingMethodsConfiguration
    PickJobTagConfiguration:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        stickerConfiguration:
          $ref: '#/components/schemas/StickerConfiguration'
        lineItemStickerConfiguration:
          $ref: '#/components/schemas/StickerConfiguration'
        lineItemScanningConfiguration:
          $ref: '#/components/schemas/TagScanningConfiguration'
        preferredPickingMethodsConfiguration:
          $ref: '#/components/schemas/PreferredPickingMethodsConfiguration'
        offeredDocumentsPerTag:
          type: array
          description: >-
            All entries with a match in their matchingValues will be combined
            when determining what documents belong to an entity
          items:
            $ref: '#/components/schemas/OfferedDocumentPerTag'
        offeredDocumentsByDefault:
          type: array
          description: >-
            This configuration is a fallback and applies only if none of the
            entries in offeredDocumentsPerTag can be applied
          items:
            $ref: '#/components/schemas/OfferedDocument'
      required:
        - offeredDocumentsPerTag
        - offeredDocumentsByDefault
      title: PickJobTagConfiguration
      description: PickJobTagConfiguration
    ItemReturnJob:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      additionalProperties: false
      properties:
        id:
          type: string
        processRef:
          type: string
        originFacilityRefs:
          items:
            type: string
          type: array
        status:
          $ref: '#/components/schemas/ItemReturnJobStatus'
        tenantOrderId:
          type: string
        consumerAddresses:
          items:
            $ref: '#/components/schemas/ConsumerAddress'
          type: array
        scannableCodes:
          items:
            type: string
          type: array
        shortId:
          description: >-
            A short identifier that helps assigning a item return job to a
            customer. This is automatically created during creation.
          example: AS12
          type: string
        returnableLineItems:
          items:
            $ref: '#/components/schemas/ItemReturnJobLineItem'
          type: array
          minItems: 1
        notReturnableLineItems:
          items:
            $ref: '#/components/schemas/ItemReturnJobLineItem'
          type: array
          minItems: 0
        itemReturns:
          items:
            $ref: '#/components/schemas/ItemReturn'
          type: array
          minItems: 0
        anonymized:
          description: Indicates if gdpr related data was anonymized
          example: false
          type: boolean
        customAttributes:
          description: >-
            Attributes that can be added to the entity. These attributes cannot
            be used within fulfillment processes, but it could be useful to have
            the information carried here.
          type: object
      type: object
      required:
        - id
        - processRef
        - originFacilityRefs
        - status
        - consumerAddresses
        - returnableLineItems
        - itemReturns
      title: ItemReturnJob
      description: ItemReturnJob
    ItemReturnJobWithSearchPaths:
      allOf:
        - $ref: '#/components/schemas/ItemReturnJob'
      additionalProperties: false
      properties:
        searchPaths:
          items:
            type: string
          type: array
          minItems: 0
      type: object
      title: ItemReturnJobWithSearchPaths
      description: ItemReturnJobWithSearchPaths
    ItemReturnJobForCreation:
      additionalProperties: false
      properties:
        processRef:
          type: string
        originFacilityRefs:
          items:
            type: string
          type: array
        status:
          $ref: '#/components/schemas/ItemReturnJobStatus'
        tenantOrderId:
          type: string
        consumerAddresses:
          items:
            $ref: '#/components/schemas/ConsumerAddress'
          type: array
        scannableCodes:
          items:
            type: string
          type: array
        shortId:
          description: >-
            A short identifier that helps assigning a item return job to a
            customer. This is automatically created during creation.
          example: AS12
          type: string
        returnableLineItems:
          items:
            $ref: '#/components/schemas/ItemReturnJobLineItemForCreation'
          type: array
          minItems: 0
        notReturnableLineItems:
          items:
            $ref: '#/components/schemas/ItemReturnJobLineItemForCreation'
          type: array
          minItems: 0
        customAttributes:
          description: >-
            Attributes that can be added to the entity. These attributes cannot
            be used within fulfillment processes, but it could be useful to have
            the information carried here.
          type: object
      type: object
      required:
        - originFacilityRefs
        - status
        - consumerAddresses
        - returnableLineItems
      title: ItemReturnJobForCreation
      description: ItemReturnJobForCreation
    ItemReturnJobs:
      properties:
        itemReturnJobsWithSearchPaths:
          items:
            $ref: '#/components/schemas/ItemReturnJobWithSearchPaths'
          type: array
        total:
          description: Total number of found entities for this query
          example: 42
          type: integer
      type: object
      title: ItemReturnJobs
      description: ItemReturnJobs
    ItemReturnJobStatus:
      type: string
      enum:
        - OPEN
        - IN_PROGRESS
        - FINISHED
        - CANCELED
      title: ItemReturnJobStatus
      description: ItemReturnJobStatus
    ItemReturnJobLineItem:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/ItemReturnJobLineItemForCreation'
      properties:
        id:
          type: string
        returned:
          type: number
          minimum: 0
        returnable:
          type: number
          minimum: 0
        notReturnableItemsExists:
          type: boolean
          description: Add items to notReturnableLineItems array in itemReturnJob instead.
          deprecated: true
        recordableAttributes:
          items:
            $ref: '#/components/schemas/RecordableAttribute'
          nullable: true
          type: array
      required:
        - id
        - article
        - delivered
        - returned
        - returnable
      title: ItemReturnJobLineItem
      description: ItemReturnJobLineItem
    ReturnedLineItemRefund:
      additionalProperties: false
      description: Either price or percent must be set, not both.
      properties:
        status:
          $ref: '#/components/schemas/ReturnedLineItemRefundStatus'
        price:
          $ref: '#/components/schemas/ReturnedLineItemRefundPrice'
        percent:
          example: 80.6
          description: 0.0 - 100.0 amount of the line item price that should be refunded
          type: number
      required:
        - status
      title: ReturnedLineItemRefund
    ReturnedLineItemRefundStatus:
      enum:
        - OPEN
        - IN_PROGRESS
        - CLOSED
      type: string
      title: ReturnedLineItemRefundStatus
      description: ReturnedLineItemRefundStatus
    ItemReturnJobLineItemForCreation:
      additionalProperties: false
      properties:
        article:
          $ref: '#/components/schemas/ItemReturnJobLineItemArticle'
        delivered:
          type: number
          minimum: 1
        notReturnableItemsExists:
          type: boolean
          description: Add items to notReturnableLineItems array in itemReturnJob instead.
          deprecated: true
        scannableCodes:
          items:
            type: string
          type: array
        customAttributes:
          description: >-
            Attributes that can be added to the entity. These attributes cannot
            be used within fulfillment processes, but it could be useful to have
            the information carried here.
          type: object
        recordableAttributes:
          items:
            $ref: '#/components/schemas/RecordableAttributeForCreation'
          nullable: true
          type: array
      required:
        - article
        - delivered
      title: ItemReturnJobLineItemForCreation
      description: ItemReturnJobLineItemForCreation
    ItemReturnJobLineItemArticle:
      allOf:
        - $ref: '#/components/schemas/AbstractArticle'
        - properties:
            attributes:
              items:
                $ref: '#/components/schemas/ArticleAttributeItem'
              type: array
            prices:
              description: >-
                Deprecated: Use attributes with keys: 'valuePerUnit', 'currency'
                and 'numberOfDecimalPlaces'
              items:
                $ref: '#/components/schemas/ArticlePrice'
              type: array
          type: object
      xml:
        name: PickLineItemArticle
      title: ItemReturnJobLineItemArticle
      description: ItemReturnJobLineItemArticle
    ItemReturn:
      additionalProperties: false
      properties:
        id:
          type: string
        created:
          description: >-
            The date this entity was created at the platform. This value is
            generated by the service.
          example: '2020-02-03T08:45:51.525Z'
          format: date-time
          type: string
        lastModified:
          description: >-
            The date this entity was modified last. This value is generated by
            the service.
          example: '2020-02-03T09:45:51.525Z'
          format: date-time
          type: string
        returnFacilityRef:
          type: string
        status:
          $ref: '#/components/schemas/ItemReturnStatus'
        tenantOrderId:
          type: string
        scannableCodes:
          items:
            type: string
          type: array
        parcelRefs:
          type: array
          items:
            type: string
            description: references the parcel
            example: 672f3f72-b5d3-47c7-941c-9af5348e3cd7
        returnedLineItems:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/ItemReturnLineItem'
        customAttributes:
          description: >-
            Attributes that can be added to the entity. These attributes cannot
            be used within fulfillment processes, but it could be useful to have
            the information carried here.
          type: object
      required:
        - id
        - status
        - returnedLineItems
        - returnFacilityRef
      title: ItemReturn
      description: ItemReturn
    ItemReturnStatus:
      enum:
        - ANNOUNCED
        - OPEN
        - IN_PROGRESS
        - PAUSED
        - FINISHED
        - WAITING_FOR_INPUT
      type: string
      title: ItemReturnStatus
      description: ItemReturnStatus
    ItemReturnLineItem:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/ItemReturnLineItemForCreation'
      properties:
        id:
          type: string
          example: a69006ba-7100-4b4d-a610-1ca28016a4eb
        itemCondition:
          type: string
          example: Damaged
        itemReturnJobLineItemRefs:
          items:
            example: a69006ba-7100-4b4d-a610-1ca28016a4eb
            type: string
          type: array
        reasons:
          items:
            $ref: '#/components/schemas/ItemReturnLineItemReason'
          type: array
        refund:
          $ref: '#/components/schemas/ReturnedLineItemRefund'
        recordableAttributes:
          items:
            $ref: '#/components/schemas/RecordableAttribute'
          nullable: true
          type: array
      required:
        - id
        - status
        - itemReturnJobLineItemRefs
        - tenantArticleId
      title: ItemReturnLineItem
      description: ItemReturnLineItem
    ItemReturnLineItemReason:
      additionalProperties: false
      properties:
        reason:
          description: Translated reasonLocalized
          type: string
        reasonLocalized:
          $ref: '#/components/schemas/LocaleString'
        comment:
          type: string
          minLength: 1
          example: Upper corner damaged
      required:
        - reasonLocalized
      title: ItemReturnLineItemReason
      description: ItemReturnLineItemReason
    ItemReturnForCreation:
      additionalProperties: false
      properties:
        status:
          $ref: '#/components/schemas/ItemReturnStatus'
        returnFacilityRef:
          type: string
        tenantOrderId:
          type: string
        scannableCodes:
          items:
            type: string
          type: array
        returnedLineItems:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/ItemReturnLineItemForCreation'
      required:
        - returnedLineItems
        - status
        - returnFacilityRef
      title: ItemReturnForCreation
      description: ItemReturnForCreation
    ItemReturnsWithSearchPaths:
      allOf:
        - $ref: '#/components/schemas/ItemReturn'
      additionalProperties: false
      properties:
        searchPaths:
          type: array
          items:
            type: string
      required:
        - searchPaths
      title: ItemReturnsWithSearchPaths
      description: ItemReturnsWithSearchPaths
    AddItemReturnToItemReturnJob:
      additionalProperties: false
      properties:
        itemReturnForCreation:
          $ref: '#/components/schemas/ItemReturnForCreation'
        itemReturnJobVersion:
          description: Version of the itemReturnJob the itemReturn gets added to
          minimum: 0
          type: integer
      required:
        - itemReturnForCreation
        - itemReturnJobVersion
      title: AddItemReturnToItemReturnJob
      description: AddItemReturnToItemReturnJob
    ItemReturnLineItemForCreation:
      additionalProperties: false
      properties:
        itemConditionLocalized:
          $ref: '#/components/schemas/LocaleString'
        itemConditionComment:
          type: string
          minLength: 1
          example: Upper corner damaged
        tenantArticleId:
          type: string
          example: a69006ba-7100-4b4d-a610-1ca28016a4eb
        scannedCodes:
          type: array
          items:
            type: string
        status:
          $ref: '#/components/schemas/ItemReturnLineItemStatus'
        reasons:
          items:
            $ref: '#/components/schemas/ItemReturnLineItemReason'
          type: array
        customAttributes:
          description: >-
            Attributes that can be added to the entity. These attributes cannot
            be used within fulfillment processes, but it could be useful to have
            the information carried here.
          type: object
        recordableAttributes:
          items:
            $ref: '#/components/schemas/RecordableAttributeForCreation'
          nullable: true
          type: array
      required:
        - tenantArticleId
        - status
      title: ItemReturnLineItemForCreation
      description: ItemReturnLineItemForCreation
    ItemReturnLineItemForUpdate:
      additionalProperties: false
      properties:
        status:
          $ref: '#/components/schemas/ItemReturnLineItemStatus'
        refund:
          $ref: '#/components/schemas/ReturnedLineItemRefund'
        itemReturnJobVersion:
          type: number
          example: 42
          description: version of the overlaying itemReturnJob
      required:
        - itemReturnJobVersion
      title: ItemReturnLineItemForUpdate
      description: ItemReturnLineItemForUpdate
    ReplaceReturnedLineItems:
      additionalProperties: false
      properties:
        itemReturnJobVersion:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
        returnedLineItems:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/ItemReturnLineItemForCreation'
      required:
        - itemReturnJobVersion
        - returnedLineItems
      title: ReplaceReturnedLineItems
      description: ReplaceReturnedLineItems
    ItemReturnLineItemStatus:
      enum:
        - OPEN
        - IN_PROGRESS
        - WAITING_FOR_INPUT
        - REJECTED
        - ACCEPTED
        - CANCELED
      type: string
      title: ItemReturnLineItemStatus
      description: ItemReturnLineItemStatus
    ItemReturns:
      properties:
        itemReturns:
          items:
            $ref: '#/components/schemas/ItemReturnsWithSearchPaths'
          type: array
        totalCount:
          description: Total number of found entities for this query
          example: 42
          type: integer
      type: object
      required:
        - itemReturns
        - totalCount
      title: ItemReturns
      description: ItemReturns
    ItemReturnJobActionsParameter:
      anyOf:
        - $ref: '#/components/schemas/StartItemReturnJobActionParameter'
        - $ref: '#/components/schemas/FinishItemReturnJobActionParameter'
        - $ref: '#/components/schemas/RestartItemReturnJobActionParameter'
        - $ref: >-
            #/components/schemas/ChangeLineItemsToNotReturnableInItemReturnJobActionParameter
        - $ref: >-
            #/components/schemas/ChangeLineItemsToReturnableInItemReturnJobActionParameter
      title: ItemReturnJobActionsParameter
      description: ItemReturnJobActionsParameter
    StartItemReturnJobActionParameter:
      title: StartItemReturnJobActionParameter
      description: Action to start a ItemReturnJob.
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/StartItemReturnJobActionEnum'
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
      required:
        - name
        - version
    StartItemReturnJobActionEnum:
      enum:
        - StartItemReturnJob
      type: string
      title: StartItemReturnJobActionEnum
      description: StartItemReturnJobActionEnum
    FinishItemReturnJobActionParameter:
      title: FinishItemReturnJobActionParameter
      description: Action to finish a ItemReturnJob.
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/FinishItemReturnJobActionEnum'
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
      required:
        - name
        - version
    FinishItemReturnJobActionEnum:
      enum:
        - FinishItemReturnJob
      type: string
      title: FinishItemReturnJobActionEnum
      description: FinishItemReturnJobActionEnum
    RestartItemReturnJobActionParameter:
      title: RestartItemReturnJobActionParameter
      description: Action to restart a ItemReturnJob.
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/RestartItemReturnJobActionEnum'
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
      required:
        - name
        - version
    RestartItemReturnJobActionEnum:
      enum:
        - RestartItemReturnJob
      type: string
      title: RestartItemReturnJobActionEnum
      description: RestartItemReturnJobActionEnum
    ChangeLineItemsToNotReturnableInItemReturnJobActionParameter:
      title: ChangeLineItemsToNotReturnableInItemReturnJobActionParameter
      description: >-
        Action to move line items from returnableLineItems to
        notReturnableLineItems.
      additionalProperties: false
      properties:
        name:
          $ref: >-
            #/components/schemas/ChangeLineItemsToNotReturnableInItemReturnJobActionEnum
        version:
          description: Version of the entity to be changed
          type: integer
          minimum: 0
        lineItemIds:
          type: array
          items:
            type: string
      required:
        - name
        - version
        - lineItemIds
    ChangeLineItemsToNotReturnableInItemReturnJobActionEnum:
      type: string
      enum:
        - CHANGE_LINE_ITEMS_TO_NOT_RETURNABLE_IN_ITEM_RETURN_JOB
      title: ChangeLineItemsToNotReturnableInItemReturnJobActionEnum
      description: ChangeLineItemsToNotReturnableInItemReturnJobActionEnum
    ChangeLineItemsToReturnableInItemReturnJobActionParameter:
      title: ChangeLineItemsToReturnableInItemReturnJobActionParameter
      description: >-
        Action to move line items from notReturnableLineItems to
        returnableLineItems.
      additionalProperties: false
      properties:
        name:
          $ref: >-
            #/components/schemas/ChangeLineItemsToReturnableInItemReturnJobActionEnum
        version:
          description: Version of the entity to be changed
          type: integer
          minimum: 0
        lineItemIds:
          type: array
          items:
            type: string
      required:
        - name
        - version
        - lineItemIds
    ChangeLineItemsToReturnableInItemReturnJobActionEnum:
      type: string
      enum:
        - CHANGE_LINE_ITEMS_TO_RETURNABLE_IN_ITEM_RETURN_JOB
      title: ChangeLineItemsToReturnableInItemReturnJobActionEnum
      description: ChangeLineItemsToReturnableInItemReturnJobActionEnum
    ItemReturnActionsParameter:
      anyOf:
        - $ref: '#/components/schemas/AnnounceItemReturnActionParameter'
        - $ref: '#/components/schemas/OpenItemReturnActionParameter'
        - $ref: '#/components/schemas/StartItemReturnActionParameter'
        - $ref: '#/components/schemas/PauseItemReturnActionParameter'
        - $ref: '#/components/schemas/FinishItemReturnActionParameter'
        - $ref: '#/components/schemas/WaitForInputItemReturnActionParameter'
      title: ItemReturnActionsParameter
      description: ItemReturnActionsParameter
    AnnounceItemReturnActionParameter:
      title: AnnounceItemReturnActionParameter
      description: Action to announce an ItemReturn.
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/AnnounceItemReturnActionEnum'
        itemReturnJobVersion:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
      required:
        - name
        - itemReturnJobVersion
    AnnounceItemReturnActionEnum:
      enum:
        - AnnounceItemReturn
      type: string
      title: AnnounceItemReturnActionEnum
      description: AnnounceItemReturnActionEnum
    OpenItemReturnActionParameter:
      title: OpenItemReturnActionParameter
      description: Action to open an ItemReturn.
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/OpenItemReturnActionEnum'
        itemReturnJobVersion:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
      required:
        - name
        - itemReturnJobVersion
    OpenItemReturnActionEnum:
      enum:
        - OpenItemReturn
      type: string
      title: OpenItemReturnActionEnum
      description: OpenItemReturnActionEnum
    StartItemReturnActionParameter:
      title: StartItemReturnActionParameter
      description: Action to start an ItemReturn.
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/StartItemReturnActionEnum'
        itemReturnJobVersion:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
      required:
        - name
        - itemReturnJobVersion
    StartItemReturnActionEnum:
      enum:
        - StartItemReturn
      type: string
      title: StartItemReturnActionEnum
      description: StartItemReturnActionEnum
    PauseItemReturnActionParameter:
      title: PauseItemReturnActionParameter
      description: Action to pause an ItemReturn.
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/PauseItemReturnActionEnum'
        itemReturnJobVersion:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
      required:
        - name
        - itemReturnJobVersion
    PauseItemReturnActionEnum:
      enum:
        - PauseItemReturn
      type: string
      title: PauseItemReturnActionEnum
      description: PauseItemReturnActionEnum
    FinishItemReturnActionParameter:
      title: FinishItemReturnActionParameter
      description: Action to finish an ItemReturn.
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/FinishItemReturnActionEnum'
        itemReturnJobVersion:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
      required:
        - name
        - itemReturnJobVersion
    FinishItemReturnActionEnum:
      enum:
        - FinishItemReturn
      type: string
      title: FinishItemReturnActionEnum
      description: FinishItemReturnActionEnum
    WaitForInputItemReturnActionParameter:
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/WaitForInputItemReturnActionEnum'
        itemReturnJobVersion:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
      required:
        - name
        - itemReturnJobVersion
      title: WaitForInputItemReturnActionParameter
      description: WaitForInputItemReturnActionParameter
    WaitForInputItemReturnActionEnum:
      enum:
        - WaitForInputItemReturn
      type: string
      title: WaitForInputItemReturnActionEnum
      description: WaitForInputItemReturnActionEnum
    RefundTrigger:
      type: object
      additionalProperties: false
      properties:
        tenantOrderId:
          type: string
          description: The tenant order id of the order that should be refunded
          example: a69006ba-7100-4b4d-a610-1ca28016a4eb
          minLength: 1
          maxLength: 256
        refundedLineItems:
          type: array
          items:
            $ref: '#/components/schemas/ItemReturnLineItem'
          description: The line items that should be refunded
        itemReturnRef:
          type: string
          description: reference to the item return that should be refunded
          example: a69006ba-7100-4b4d-a610-1ca28016a4eb
        created:
          type: string
          format: date-time
          description: Date when the refund was triggered
          example: '2020-02-03T08:45:51.525Z'
        returnFacilityRef:
          type: string
          description: The facility where the return was processed
          example: a69006ba-7100-4b4d-a610-1ca28016a4eb
      required:
        - refundedLineItems
        - itemReturnRef
        - created
        - returnFacilityRef
      title: RefundTrigger
      description: RefundTrigger
    ItemReturnSortOptions:
      type: string
      enum:
        - ITEM_RETURN_LAST_MODIFIED_ASC
        - ITEM_RETURN_LAST_MODIFIED_DESC
        - ITEM_RETURN_CREATED_ASC
        - ITEM_RETURN_CREATED_DESC
      title: ItemReturnSortOptions
      description: ItemReturnSortOptions
    OperativeProcess:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      additionalProperties: false
      properties:
        id:
          type: string
        processRef:
          type: string
          description: Reference to the overall process
        facilityRef:
          type: string
          description: Reference to the facility this operative process is handled in
        flatEntityRefs:
          items:
            type: string
          description: >-
            References to all operational entities belonging to this operative
            process
          minLength: 0
        entityChildren:
          items:
            $ref: '#/components/schemas/OperativeEntity'
          description: Tree structure of entities belonging to this operative process
          minLength: 0
      type: object
      required:
        - id
        - processRef
        - facilityRef
        - flatEntityRefs
        - entityChildren
      title: OperativeProcess
      description: OperativeProcess
    OperativeProcessForCreation:
      additionalProperties: false
      properties:
        processRef:
          type: string
          description: Reference to the overall process
        facilityRef:
          type: string
          description: Reference to the facility this operative process is handled in
        entityChildren:
          items:
            $ref: '#/components/schemas/OperativeEntity'
          description: Tree structure of entities belonging to this operative process
      type: object
      required:
        - processRef
        - facilityRef
      title: OperativeProcessForCreation
      description: OperativeProcessForCreation
    OperativeEntity:
      additionalProperties: false
      properties:
        entityRef:
          type: string
          description: Reference to the full entity
        entityType:
          $ref: '#/components/schemas/OperativeEntityType'
        entityChildren:
          items:
            $ref: '#/components/schemas/OperativeEntity'
          description: Tree structure of entities belonging to this entity
      required:
        - entityRef
        - entityType
      title: OperativeEntity
      description: OperativeEntity
    OperativeEntityType:
      type: string
      enum:
        - PICK_JOB
        - PACK_JOB
        - SHIPMENT
        - HANDOVER_JOB
        - PARCEL
        - SERVICE_JOB
        - RESTOW_ITEM
        - ITEM_RETURN_JOB
        - LINKED_SERVICE_JOBS
        - PACKING_TARGET_CONTAINER
      title: OperativeEntityType
      description: OperativeEntityType
    OperativeContainerType:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      additionalProperties: false
      properties:
        description:
          type: string
        descriptionLocalized:
          $ref: '#/components/schemas/LocaleString'
        iconUrl:
          type: string
        id:
          type: string
        name:
          type: string
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        priority:
          description: >-
            This value gives the priority of the respective
            operativeContainerType. The lower the value the higher is the
            priority, e.g. priority 1 is higher than priority 10. The priority
            can be used to order packingContainerTypes in the UI.
          example: 100
          format: int32
          maximum: 10000
          minimum: 1
          type: integer
        dimensions:
          $ref: '#/components/schemas/ContainerDimensions'
        weightLimitInG:
          description: 'Maximal weight in gramm(gr) the container can be loaded with. '
          example: 2500
          type: number
          minimum: 1
        customAttributes:
          description: >-
            Attributes that can be added to the operativeContainerType. These
            attributes cannot be used within fulfillment processes, but it could
            be useful to have the informations carried here.
          type: object
        allowedOperativeTypes:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/OperativeType'
        scannableIdentifiers:
          type: array
          maxItems: 1
          items:
            $ref: '#/components/schemas/ScannableIdentifier'
      required:
        - id
        - version
        - nameLocalized
        - allowedOperativeTypes
      type: object
      title: OperativeContainerType
      description: OperativeContainerType
    OperativeContainerTypeForCreation:
      additionalProperties: false
      properties:
        descriptionLocalized:
          $ref: '#/components/schemas/LocaleString'
        iconUrl:
          description: ''
          type: string
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        priority:
          description: >-
            This value gives the priority of the respective
            operativeContainerType. The lower the value the higher is the
            priority, e.g. priority 1 is higher than priority 10. The priority
            can be used to order packingContainerTypes in the UI.
          example: 100
          format: int32
          maximum: 10000
          minimum: 1
          type: integer
        dimensions:
          $ref: '#/components/schemas/ContainerDimensions'
        weightLimitInG:
          description: 'Maximal weight in gramm(gr) the container can be loaded with. '
          example: 2500
          type: number
          minimum: 1
        customAttributes:
          description: >-
            Attributes that can be added to the operativeContainerType. These
            attributes cannot be used within fulfillment processes, but it could
            be useful to have the informations carried here.
          type: object
        allowedOperativeTypes:
          type: array
          items:
            $ref: '#/components/schemas/OperativeType'
          minItems: 1
        scannableIdentifiers:
          type: array
          maxItems: 1
          items:
            $ref: '#/components/schemas/ScannableIdentifier'
        icon:
          $ref: '#/components/schemas/NamedFile'
      required:
        - nameLocalized
        - allowedOperativeTypes
      type: object
      title: OperativeContainerTypeForCreation
      description: OperativeContainerTypeForCreation
    OperativeContainerTypeForUpdate:
      additionalProperties: false
      properties:
        descriptionLocalized:
          $ref: '#/components/schemas/LocaleString'
        iconUrl:
          description: ''
          type: string
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        priority:
          description: >-
            This value gives the priority of the respective
            operativeContainerType. The lower the value the higher is the
            priority, e.g. priority 1 is higher than priority 10. The priority
            can be used to order packingContainerTypes in the UI.
          example: 100
          format: int32
          maximum: 10000
          minimum: 1
          type: integer
        dimensions:
          $ref: '#/components/schemas/ContainerDimensions'
        weightLimitInG:
          description: 'Maximal weight in gramm(gr) the container can be loaded with. '
          example: 2500
          type: number
          minimum: 1
        customAttributes:
          description: >-
            Attributes that can be added to the operativeContainerTypes. These
            attributes cannot be used within fulfillment processes, but it could
            be useful to have the informations carried here.
          type: object
        allowedOperativeTypes:
          type: array
          items:
            $ref: '#/components/schemas/OperativeType'
        scannableIdentifiers:
          type: array
          maxItems: 1
          items:
            $ref: '#/components/schemas/ScannableIdentifier'
        version:
          minimum: 1
          type: integer
      required:
        - version
      type: object
      title: OperativeContainerTypeForUpdate
      description: OperativeContainerTypeForUpdate
    ScannableIdentifier:
      type: object
      additionalProperties: false
      properties:
        searchType:
          $ref: '#/components/schemas/SearchType'
        identifiers:
          type: array
          items:
            type: string
            minItems: 1
            maxItems: 10
      required:
        - identifiers
      title: ScannableIdentifier
      description: ScannableIdentifier
    OperativeContainerTypes:
      type: array
      additionalProperties: false
      items:
        $ref: '#/components/schemas/OperativeContainerType'
      title: OperativeContainerTypes
      description: OperativeContainerTypes
    OperativeContainerTypesResponse:
      additionalProperties: false
      properties:
        operativeContainerTypes:
          items:
            $ref: '#/components/schemas/OperativeContainerType'
          type: array
        total:
          description: Total number of found entities for this query
          example: 42
          type: integer
      type: object
      title: OperativeContainerTypesResponse
      description: OperativeContainerTypesResponse
    OperativeType:
      additionalProperties: false
      type: string
      enum:
        - PICKING
        - PACKING_SOURCE
        - PACKING_TARGET
        - HANDOVER
      title: OperativeType
      description: OperativeType
    SearchType:
      additionalProperties: false
      type: string
      enum:
        - PREFIX
        - SUFFIX
        - CONTAINS
      title: SearchType
      description: SearchType
    ExpiryEntity:
      additionalProperties: false
      properties:
        id:
          type: string
          description: Generated identifier of this entity
          example: 611c860f-3f00-4b01-9f4c-64cdee38a30e
        version:
          type: integer
          format: int64
          example: 42
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
        processVersion:
          type: integer
          format: int64
          example: 42
          description: >-
            the version of the process this expiry entity belongs to, needed for
            preventing of faulty changes via late messages
        created:
          type: string
          format: date-time
          example: '2020-02-03T08:45:51.525Z'
          description: >-
            The date this entity was created at the platform. This value is
            generated by the service.
        lastModified:
          type: string
          format: date-time
          example: '2020-02-03T09:45:51.525Z'
          description: >-
            The date this entity was modified last. This value is generated by
            the service.
        processRef:
          type: string
          example: c4e5fb70-a893-4ffa-b7b0-e042cda6fb9f
          description: Reference to the Process of this Entity
        provisioningTime:
          type: string
          format: date-time
          example: '2020-02-03T08:45:51.525Z'
          description: >-
            Planned time where this entity should be provided or handed over to
            the customer
        expiryTime:
          type: string
          format: date-time
          example: '2020-02-03T08:45:51.525Z'
          description: Time where the connected process expires, if not fulfilled
        status:
          $ref: '#/components/schemas/ExpiryEntityStatus'
      required:
        - id
        - version
        - created
        - lastModified
        - processRef
        - provisioningTime
        - expiryTime
        - status
      title: ExpiryEntity
      description: ExpiryEntity
    ExpiryEntityForCreation:
      additionalProperties: false
      properties:
        processRef:
          type: string
          example: c4e5fb70-a893-4ffa-b7b0-e042cda6fb9f
          description: >-
            Reference to the Process for which this expiry entity will be
            created
        provisioningTime:
          type: string
          format: date-time
          example: '2020-02-03T08:45:51.525Z'
          description: >-
            Planned time where this entity should be provided or handed over to
            the customer
        status:
          $ref: '#/components/schemas/ExpiryEntityStatus'
      required:
        - processRef
        - provisioningTime
        - status
      title: ExpiryEntityForCreation
      description: ExpiryEntityForCreation
    ExpiryEntityForUpdate:
      additionalProperties: false
      properties:
        version:
          type: integer
          description: version of the entity you want to alter
        provisioningTime:
          type: string
          format: date-time
          example: '2020-02-03T08:45:51.525Z'
          description: >-
            Planned time where this entity should be provided or handed over to
            the customer
        status:
          $ref: '#/components/schemas/ExpiryEntityStatus'
      required:
        - version
      title: ExpiryEntityForUpdate
      description: ExpiryEntityForUpdate
    ExpiryEntityFilter:
      additionalProperties: false
      properties:
        processRef:
          type: string
          description: process of the entity you want to load
        status:
          $ref: '#/components/schemas/ExpiryEntityStatus'
        startDate:
          format: date-time
          example: '2020-02-03T08:45:51.525Z'
          description: start date range for expiryTime
        endDate:
          format: date-time
          example: '2020-02-03T08:45:51.525Z'
          description: end date range for expiryTime
      title: ExpiryEntityFilter
      description: ExpiryEntityFilter
    ExpiryEntityStatus:
      enum:
        - ACTIVE
        - INACTIVE
      type: string
      title: ExpiryEntityStatus
      description: ExpiryEntityStatus
    StorageLocationForCreation:
      allOf:
        - $ref: '#/components/schemas/CustomAttributesResource'
      properties:
        name:
          description: The name of this storage location
          type: string
          maxLength: 15
        tenantLocationId:
          description: The internal tenant id for this location
          type: string
        type:
          $ref: '#/components/schemas/StorageLocationType'
        traits:
          description: >-
            The traits of this storage location, includes both local config and
            and defaults. Do not use to write to traits, use traitConfig
            instead.
          type: array
          items:
            $ref: '#/components/schemas/StorageLocationTrait'
        traitConfig:
          $ref: '#/components/schemas/StorageLocationTraitConfig'
        scannableCodes:
          description: Barcodes representing this storage location
          type: array
          maxItems: 5
          items:
            type: string
        runningSequences:
          description: The Sequence item/s of this location
          type: array
          maxItems: 10
          items:
            $ref: '#/components/schemas/StorageLocationSequenceItem'
        zoneRef:
          description: The id of the Zone to which this storage location belongs
          example: Esb20gpHBL94X5NdMp3C
          type: string
        zoneName:
          description: The name of the Zone to which this storage location belongs
          type: string
        information:
          description: A free text information about this storage location, max length 1024
          type: string
          maxLength: 1024
      required:
        - name
        - runningSequences
        - scannableCodes
        - type
      type: object
      xml:
        name: StorageLocationForCreation
      title: StorageLocationForCreation
      description: StorageLocationForCreation
    StorageLocationForReplacement:
      allOf:
        - $ref: '#/components/schemas/StorageLocationForCreation'
      properties:
        version:
          example: 42
          format: int64
          type: integer
      required:
        - version
      type: object
      xml:
        name: StorageLocationForReplacement
      title: StorageLocationForReplacement
      description: StorageLocationForReplacement
    StorageLocation:
      allOf:
        - $ref: '#/components/schemas/StorageLocationForReplacement'
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        id:
          description: The id of this storage location
          type: string
        facilityRef:
          description: The id of the facility reference.
          example: Esb20gpHBL94X5NdMp3C
          type: string
        zoneName:
          description: >-
            Deprecated! This field will not be filled in newly created storage
            locations. Resolve the zone name separately via the
            facilities/{id}/zones endpoint. The name of the Zone to which this
            storage location belongs
          type: string
          deprecated: true
        traits:
          description: The traits of this storage location
          type: array
          items:
            $ref: '#/components/schemas/StorageLocationTrait'
        traitConfig:
          $ref: '#/components/schemas/StorageLocationTraitConfig'
        schemaVersion:
          type: number
      required:
        - id
        - facilityRef
        - traits
      type: object
      xml:
        name: StorageLocation
      title: StorageLocation
      description: StorageLocation
    StorageLocationTraitConfig:
      description: The configuration of the traits of this storage location
      type: array
      items:
        type: object
        properties:
          trait:
            $ref: '#/components/schemas/StorageLocationTrait'
          enabled:
            type: boolean
        required:
          - trait
          - enabled
      title: StorageLocationTraitConfig
    StorageLocationType:
      description: |-
        Describes the kind of a storage location:
          * `SINGLE_STORAGE`- it is only allowed to store stock with the same tenantArticleId here
          * `BULK_STORAGE`- stocks belonging to different tenantArticleIds can be stored here
      enum:
        - SINGLE_STORAGE
        - BULK_STORAGE
      type: string
      xml:
        name: StorageLocationType
      title: StorageLocationType
    StorageLocationTrait:
      type: string
      description: |-
        Describes what kind of actions this stock is available for
          * `PICKABLE`- The stock is available for picking
          * `ACCESSIBLE`- The stock is available for stock movements (stowing, inbound, etc)
          * `KEEP_ON_ZERO`- The stock will not be deleted when emptied
          * `OUTBOUND`- The stock is intended for outbound processes
          * `IN_MOTION`- The stock is in motion, used by StowJobs.
      enum:
        - PICKABLE
        - ACCESSIBLE
        - KEEP_ON_ZERO
        - OUTBOUND
        - IN_MOTION
      xml:
        name: StorageLocationTrait
      title: StorageLocationTrait
    StorageLocationSequenceType:
      description: |-
        Describes the type of a storage location sequence type
          * `PICKING_SEQUENCE`- The sequence in wich the storage locations are picked.
          * `RESTOW_SEQUENCE`- The sequence in wich the storage locations are restowed.
      enum:
        - PICKING_SEQUENCE
        - RESTOW_SEQUENCE
      type: string
      xml:
        name: StorageLocationType
      title: StorageLocationSequenceType
    StorageLocationSequenceItem:
      properties:
        type:
          $ref: '#/components/schemas/StorageLocationSequenceType'
        previousStorageLocationRef:
          description: The previous storage from which to pick up after this one
          type: string
        nextStorageLocationRef:
          description: The next storage from which to pick up after this one
          type: string
        score:
          deprecated: true
          description: Running sequence score - read-only
          type: number
      required:
        - type
      type: object
      xml:
        name: StorageLocationSequenceItem
      title: StorageLocationSequenceItem
      description: StorageLocationSequenceItem
    ModifyStorageLocationAction:
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: >-
                Use value 'ModifyStorageLocation', because you want to modify a
                storage location
              enum:
                - ModifyStorageLocation
              type: string
            name:
              description: The name of this storage location
              type: string
              maxLength: 15
            tenantLocationId:
              description: The internal tenant id for this location
              type: string
            type:
              $ref: '#/components/schemas/StorageLocationType'
            traits:
              deprecated: true
              description: >-
                The traits of this storage location. Do not use this to write
                traits, use traitConfig instead.
              type: array
              items:
                $ref: '#/components/schemas/StorageLocationTrait'
            traitConfig:
              $ref: '#/components/schemas/StorageLocationTraitConfig'
            scannableCodes:
              description: Barcodes representing this storage location
              type: array
              maxItems: 5
              items:
                type: string
            runningSequences:
              description: The Sequence item/s of this location
              type: array
              maxItems: 10
              items:
                $ref: '#/components/schemas/StorageLocationSequenceItem'
            zoneRef:
              description: The id of the Zone to which this storage location belongs.
              example: Esb20gpHBL94X5NdMp3C
              type: string
            information:
              description: >-
                A free text information about this storage location, max length
                1024
              type: string
              maxLength: 1024
            customAttributes:
              description: >-
                Attributes that can be added to the storage location. These
                attributes cannot be used within fulfillment processes, but it
                could be useful to have the informations carried here.
              type: object
          required:
            - action
          type: object
      xml:
        name: ModifyStorageLocationAction
      title: ModifyStorageLocationAction
      description: ModifyStorageLocationAction
    StorageLocationPatchActions:
      properties:
        actions:
          items:
            $ref: '#/components/schemas/ModifyStorageLocationAction'
          minItems: 1
          type: array
        version:
          description: >-
            The version of the facility where we want to patch the storage
            locations to be used in optimistic locking mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
        - actions
      type: object
      xml:
        name: StorageLocationPatchActions
      title: StorageLocationPatchActions
      description: StorageLocationPatchActions
    ZoneForCreation:
      allOf:
        - $ref: '#/components/schemas/CustomAttributesResource'
      properties:
        name:
          description: The name of this zone
          type: string
        score:
          description: The score of this zone
          type: number
      required:
        - name
        - score
      type: object
      xml:
        name: ZoneForCreation
      title: ZoneForCreation
      description: ZoneForCreation
    ZoneForReplacement:
      allOf:
        - $ref: '#/components/schemas/ZoneForCreation'
      properties:
        version:
          example: 42
          format: int64
          type: integer
      required:
        - version
      type: object
      xml:
        name: ZoneForReplacement
      title: ZoneForReplacement
      description: ZoneForReplacement
    Zone:
      allOf:
        - $ref: '#/components/schemas/ZoneForReplacement'
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        id:
          description: The id of this zone
          type: string
        facilityRef:
          description: >-
            The id of the facility reference. The given ID has to be present in
            the system.
          example: Esb20gpHBL94X5NdMp3C
          type: string
      required:
        - id
        - facilityRef
      type: object
      xml:
        name: Zone
      title: Zone
      description: Zone
    RemoteConfigurationForCreation:
      additionalProperties: false
      properties:
        key:
          type: string
          example: PICKING_SHOW_NEW_SCAN_VIEW
          description: unique business key of this entity
        scopes:
          type: array
          items:
            $ref: '#/components/schemas/RemoteConfigurationScopeForCreation'
        valueType:
          $ref: '#/components/schemas/RemoteConfigurationValueType'
        value:
          oneOf:
            - type: string
            - type: integer
            - type: number
            - type: boolean
            - type: object
        groups:
          type: array
          items:
            example: INVENTORY
            type: string
          minItems: 1
      required:
        - key
        - value
        - valueType
        - groups
      type: object
      title: RemoteConfigurationForCreation
      description: RemoteConfigurationForCreation
    RemoteConfiguration:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      additionalProperties: false
      properties:
        id:
          type: string
          example: LGMl2DuvPnfPoSHhYFOm
          description: auto generated unique identifier
        key:
          type: string
          example: PICKING_SHOW_NEW_SCAN_VIEW
          description: unique business key of this entity
        scopes:
          type: array
          items:
            $ref: '#/components/schemas/RemoteConfigurationScope'
        valueType:
          $ref: '#/components/schemas/RemoteConfigurationValueType'
        value:
          oneOf:
            - type: string
            - type: number
            - type: boolean
            - type: object
            - type: integer
        groups:
          type: array
          items:
            example: INVENTORY
            type: string
          minItems: 1
        flattenScopeIds:
          description: >-
            generated flatten unique ids of all scope sub elements (userRef,
            facilityRef)
          type: array
          items:
            example:
              - INVENTORY
              - 67151fc3-3ce1-400e-8b23-23c29e0cde90
            type: string
      required:
        - id
        - key
        - version
        - value
        - valueType
        - groups
        - flattenScopeIds
      type: object
      title: RemoteConfiguration
      description: RemoteConfiguration
    RemoteConfigurationForUpdate:
      additionalProperties: false
      properties:
        version:
          type: integer
        scopes:
          type: array
          items:
            $ref: '#/components/schemas/RemoteConfigurationScopeForCreation'
        valueType:
          $ref: '#/components/schemas/RemoteConfigurationValueType'
        value:
          oneOf:
            - type: string
            - type: integer
            - type: number
            - type: boolean
            - type: object
        groups:
          type: array
          items:
            example: INVENTORY
            type: string
          minItems: 1
      required:
        - version
      type: object
      title: RemoteConfigurationForUpdate
      description: RemoteConfigurationForUpdate
    RemoteConfigurationForPut:
      additionalProperties: false
      properties:
        version:
          type: integer
        scopes:
          type: array
          items:
            $ref: '#/components/schemas/RemoteConfigurationScopeForCreation'
        valueType:
          $ref: '#/components/schemas/RemoteConfigurationValueType'
        value:
          oneOf:
            - type: string
            - type: integer
            - type: number
            - type: boolean
            - type: object
        groups:
          type: array
          items:
            example: INVENTORY
            type: string
          minItems: 1
      required:
        - version
        - value
        - valueType
        - groups
      type: object
      title: RemoteConfigurationForPut
      description: RemoteConfigurationForPut
    RemoteConfigurations:
      properties:
        remoteConfigurations:
          items:
            $ref: '#/components/schemas/RemoteConfiguration'
          type: array
        total:
          description: Total number of found entities for this query
          example: 42
          type: integer
      type: object
      title: RemoteConfigurations
      description: RemoteConfigurations
    RemoteConfigurationScopeForCreation:
      additionalProperties: false
      properties:
        facilityRefs:
          type: array
          items:
            description: Reference of a Facility
            example: 928f3730-bc48-4d85-b83f-3fd86b776178
            type: string
        userRefs:
          type: array
          items:
            description: Reference of a user
            example: 928f3730-bc48-4d85-b83f-3fd86b776178
            type: string
      type: object
      title: RemoteConfigurationScopeForCreation
      description: RemoteConfigurationScopeForCreation
    AddRemoteConfigurationScopeParameter:
      additionalProperties: false
      properties:
        scope:
          $ref: '#/components/schemas/RemoteConfigurationScopeForCreation'
        remoteConfigVersion:
          type: number
          minimum: 0
      required:
        - scope
        - remoteConfigVersion
      type: object
      title: AddRemoteConfigurationScopeParameter
      description: AddRemoteConfigurationScopeParameter
    RemoteConfigurationScope:
      allOf:
        - $ref: '#/components/schemas/RemoteConfigurationScopeForCreation'
      additionalProperties: false
      properties:
        id:
          type: string
          example: LGMl2DuvPnfPoSHhYFOm
          description: auto generated unique identifier
      required:
        - id
      type: object
      title: RemoteConfigurationScope
      description: RemoteConfigurationScope
    RemoteConfigurationValueType:
      enum:
        - BOOLEAN
        - STRING
        - JSON
        - NUMBER
        - INT
      type: string
      title: RemoteConfigurationValueType
      description: RemoteConfigurationValueType
    ExternalActionType:
      type: string
      description: The type of an external action
      enum:
        - BLANK_LINK
        - FORM
        - COMMENT
      title: ExternalActionType
    ExternalFormActionDefinition:
      title: ExternalFormActionDefinition
      description: External Form Action.
      additionalProperties: false
      properties:
        type:
          $ref: '#/components/schemas/ExternalActionType'
        elements:
          type: array
          minItems: 1
          items:
            anyOf:
              - $ref: '#/components/schemas/ExternalFormActionElement'
              - $ref: '#/components/schemas/ExternalFormActionInputElement'
            discriminator:
              propertyName: elementType
              mapping:
                TEXT_INPUT: '#/components/schemas/ExternalFormActionInputElement'
                HEADLINE: '#/components/schemas/ExternalFormActionElement'
                SUBHEADLINE: '#/components/schemas/ExternalFormActionElement'
                TEXT: '#/components/schemas/ExternalFormActionElement'
        success:
          $ref: '#/components/schemas/ExternalFormActionButton'
        cancel:
          $ref: '#/components/schemas/ExternalFormActionButton'
      required:
        - elements
        - type
        - cancel
      type: object
      xml:
        name: ExternalFormActionDefinition
    ExternalFormActionElementType:
      type: string
      enum:
        - TEXT_INPUT
        - HEADLINE
        - SUBHEADLINE
        - TEXT
      title: ExternalFormActionElementType
      description: ExternalFormActionElementType
    ExternalFormActionInputElement:
      title: ExternalFormActionInputElement
      description: External Form Input Action.
      additionalProperties: false
      properties:
        elementId:
          type: string
        isMandatory:
          type: boolean
        validation:
          anyOf:
            - $ref: '#/components/schemas/StringValidation'
            - $ref: '#/components/schemas/IntegerValidation'
            - $ref: '#/components/schemas/FloatValidation'
          discriminator:
            propertyName: validationType
            mapping:
              STRING: '#/components/schemas/StringValidation'
              FLOAT: '#/components/schemas/FloatValidation'
              INTEGER: '#/components/schemas/IntegerValidation'
        style:
          type: string
          enum:
            - BODY
            - INFO
            - WARN
            - ERROR
        titleLocalized:
          description: The name of this external action localized
          example: '{ en_US: ''SomeName'' }'
          $ref: '#/components/schemas/LocaleString'
        title:
          type: string
        elementType:
          $ref: '#/components/schemas/ExternalFormActionElementType'
      required:
        - elementId
        - titleLocalized
        - elementType
      type: object
      xml:
        name: ExternalFormActionInputElement
    BaseValidation:
      type: object
      properties:
        validationType:
          type: string
          enum:
            - STRING
            - FLOAT
            - INTEGER
      required:
        - validationType
      title: BaseValidation
      description: BaseValidation
    StringValidation:
      title: StringValidation
      description: Validate input as string.
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseValidation'
      additionalProperties: false
      properties:
        minLength:
          type: number
        maxLength:
          type: number
    IntegerValidation:
      title: IntegerValidation
      description: Validate input as integer.
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseValidation'
      additionalProperties: false
      properties:
        minValue:
          type: number
        maxValue:
          type: number
    FloatValidation:
      title: FloatValidation
      description: Validate input as float.
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseValidation'
      additionalProperties: false
      properties:
        minValue:
          type: number
        maxValue:
          type: number
    ExternalFormActionElement:
      properties:
        style:
          type: string
          description: it is only allowed to set a style for elementType TEXT
          enum:
            - BODY
            - INFO
            - WARN
            - ERROR
        titleLocalized:
          description: The name of this external action localized
          example: '{ en_US: ''SomeName'' }'
          $ref: '#/components/schemas/LocaleString'
        title:
          type: string
        elementType:
          $ref: '#/components/schemas/ExternalFormActionElementType'
      required:
        - elementType
        - titleLocalized
      type: object
      xml:
        name: ExternalFormActionElement
      title: ExternalFormActionElement
      description: ExternalFormActionElement
    ExternalFormActionButton:
      additionalProperties: false
      properties:
        labelLocalized:
          description: The name of this external action localized
          example: '{ en_US: ''SomeName'' }'
          $ref: '#/components/schemas/LocaleString'
        label:
          type: string
      required:
        - labelLocalized
      type: object
      xml:
        name: ExternalFormActionElement
      title: ExternalFormActionButton
      description: ExternalFormActionButton
    ExternalLinkActionDefinition:
      title: ExternalLinkActionDefinition
      description: External Link Action.
      additionalProperties: false
      properties:
        type:
          $ref: '#/components/schemas/ExternalActionType'
        linkUrl:
          type: string
      required:
        - linkUrl
        - type
      type: object
      xml:
        name: ExternalLinkActionDefinition
    ExternalCommentActionDefinition:
      title: ExternalCommentActionDefinition
      description: >-
        This action provides a possibility to set comments. It also enables a
        possibility to save action results for other actions.
      additionalProperties: false
      properties:
        type:
          $ref: '#/components/schemas/ExternalActionType'
        isInternal:
          type: boolean
          default: false
          description: >-
            Whether or not this action is meant to be internally to the
            fulfillmenttools platform. If true, an additional entry in the
            actions dropdown will be added.
      required:
        - type
      type: object
      xml:
        name: ExternalCommentActionDefinition
    ExternalActionForCreation:
      properties:
        processRef:
          description: Id of the global process related to this entity.
          type: string
        nameLocalized:
          description: The name of this external action localized
          example: '{ en_US: ''SomeName'' }'
          $ref: '#/components/schemas/LocaleString'
        groups:
          items:
            description: User-defined text strings for grouping external actions
            type: string
          type: array
        action:
          oneOf:
            - $ref: '#/components/schemas/ExternalFormActionDefinition'
            - $ref: '#/components/schemas/ExternalLinkActionDefinition'
            - $ref: '#/components/schemas/ExternalCommentActionDefinition'
          discriminator:
            propertyName: type
            mapping:
              BLANK_LINK: '#/components/schemas/ExternalLinkActionDefinition'
              FORM: '#/components/schemas/ExternalFormActionDefinition'
        customAttributes:
          nullable: true
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          type: object
      required:
        - processRef
        - nameLocalized
        - groups
        - action
      type: object
      xml:
        name: ExternalActionForCreation
      title: ExternalActionForCreation
      description: ExternalActionForCreation
    ExternalActionForReplacement:
      properties:
        version:
          example: 42
          format: int64
          type: integer
        nameLocalized:
          description: The name of this external action localized
          example: '{ en_US: ''SomeName'' }'
          $ref: '#/components/schemas/LocaleString'
        groups:
          items:
            description: User-defined text strings for grouping external actions
            type: string
          type: array
        action:
          oneOf:
            - $ref: '#/components/schemas/ExternalFormActionDefinition'
            - $ref: '#/components/schemas/ExternalLinkActionDefinition'
            - $ref: '#/components/schemas/ExternalCommentActionDefinition'
          discriminator:
            propertyName: type
            mapping:
              BLANK_LINK: '#/components/schemas/ExternalLinkActionDefinition'
              FORM: '#/components/schemas/ExternalFormActionDefinition'
        customAttributes:
          nullable: true
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          type: object
      required:
        - version
        - nameLocalized
        - groups
        - action
      type: object
      xml:
        name: ExternalActionForReplacement
      title: ExternalActionForReplacement
      description: ExternalActionForReplacement
    ExternalAction:
      allOf:
        - $ref: '#/components/schemas/ExternalActionForReplacement'
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        id:
          description: >-
            The id of this external action. It is generated during creation
            automatically and suits as the primary identifier of the described
            entity.
          example: LGMl2DuvPnfPoSHhYFOm
          type: string
        processRef:
          description: Id of the global process related to this entity.
          type: string
        name:
          description: The name of this external action.
          type: string
      required:
        - id
        - name
        - processRef
      type: object
      xml:
        name: ExternalAction
      title: ExternalAction
      description: ExternalAction
    ExternalActions:
      additionalProperties: false
      properties:
        externalActions:
          items:
            $ref: '#/components/schemas/ExternalAction'
          type: array
        total:
          description: Total number of found entities for this query
          example: 42
          type: integer
      type: object
      required:
        - externalActions
        - total
      title: ExternalActions
      description: ExternalActions
    ExternalActionLogs:
      additionalProperties: false
      properties:
        externalActionLogs:
          items:
            $ref: '#/components/schemas/ExternalActionLog'
          type: array
        total:
          description: Total number of found entities for this query
          example: 42
          type: integer
      type: object
      required:
        - externalActionLogs
        - total
      title: ExternalActionLogs
      description: ExternalActionLogs
    ExternalFormActionLogPayloadElement:
      properties:
        elementId:
          type: string
        value:
          type: string
      required:
        - elementId
        - value
      type: object
      xml:
        name: ExternalFormActionLogPayloadElement
      title: ExternalFormActionLogPayloadElement
      description: ExternalFormActionLogPayloadElement
    ExternalLinkActionLogPayload:
      title: ExternalLinkActionLogPayload
      description: External Link Action Log Payload.
      properties:
        linkOpenedAt:
          description: The date when this link was opened.
          example: '2020-02-03T08:45:50.525Z'
          format: date-time
          type: string
      required:
        - linkOpenedAt
      type: object
      xml:
        name: ExternalLinkActionLogPayload
    ExternalFormActionLogPayload:
      title: ExternalFormActionLogPayload
      description: External Form Action Log Payload.
      properties:
        elements:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/ExternalFormActionLogPayloadElement'
      required:
        - elements
      type: object
      xml:
        name: ExternalFormActionLogPayload
    ExternalCommentActionLogPayload:
      title: ExternalCommentActionLogPayload
      description: >-
        This action payload provides a possibility to set comments. It also
        enables a possibility to save action results for other actions.
      additionalProperties: false
      properties:
        comment:
          description: The actual comment.
          type: string
          minLength: 1
        externalActionRef:
          description: >-
            An existing external action id you want to link with. The action
            have to be in the same process.
          type: string
          minLength: 1
      required:
        - comment
      type: object
      xml:
        name: ExternalCommentActionLogPayload
    ExternalActionLogForCreation:
      properties:
        requiresAnonymization:
          type: boolean
        actionPayload:
          oneOf:
            - $ref: '#/components/schemas/ExternalLinkActionLogPayload'
            - $ref: '#/components/schemas/ExternalFormActionLogPayload'
            - $ref: '#/components/schemas/ExternalCommentActionLogPayload'
      required:
        - requiresAnonymization
        - actionPayload
      type: object
      xml:
        name: ExternalActionLogForCreation
      title: ExternalActionLogForCreation
      description: ExternalActionLogForCreation
    ExternalActionLog:
      allOf:
        - $ref: '#/components/schemas/ExternalActionLogForCreation'
      additionalProperties: false
      properties:
        id:
          type: string
        externalActionRef:
          description: Id of the refered external action.
          type: string
        editor:
          $ref: '#/components/schemas/Editor'
        created:
          description: The date this action has been executed
          example: '2020-02-03T08:45:50.525Z'
          format: date-time
          type: string
      required:
        - id
        - externalActionRef
        - editor
        - created
      type: object
      xml:
        name: ExternalActionLog
      title: ExternalActionLog
      description: ExternalActionLog
    AbstractReasonForCreation:
      additionalProperties: false
      properties:
        reason:
          description: Text explaining the reason for a supported action.
          example: Rerouted because of an issue in the Facility.
          type: string
        reasonLocalized:
          $ref: '#/components/schemas/LocaleString'
      required:
        - reason
        - reasonLocalized
      type: object
      xml:
        name: AbstractReasonForCreation
      title: AbstractReasonForCreation
      description: AbstractReasonForCreation
    AbstractReasonForModification:
      additionalProperties: false
      properties:
        reason:
          description: Text explaining the reason for a supported action.
          example: Rerouted because of an issue in the Facility.
          type: string
        reasonLocalized:
          $ref: '#/components/schemas/LocaleString'
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
        - reason
        - reasonLocalized
      type: object
      xml:
        name: AbstractReasonForModification
      title: AbstractReasonForModification
      description: AbstractReasonForModification
    AbstractReason:
      allOf:
        - $ref: '#/components/schemas/AbstractReasonForCreation'
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        id:
          description: The id of the Reason
          type: string
        action:
          description: The action this reason can be attached to.
          type: string
      required:
        - id
        - action
      type: object
      xml:
        name: AbstractReason
      title: AbstractReason
      description: AbstractReason
    AbstractReasons:
      properties:
        reasons:
          items:
            $ref: '#/components/schemas/AbstractReason'
          type: array
        hasNextPage:
          description: True if there are more results after the current page
          type: boolean
        total:
          description: Total number of found entities for this query
          type: integer
      required:
        - reasons
        - hasNextPage
        - total
      type: object
      xml:
        name: AbstractReasons
      title: AbstractReasons
      description: AbstractReasons
    CarrierCutoffConfiguration:
      properties:
        time:
          type: string
          pattern: ^(2[0-3]|[01]?[0-9]):([0-5]?[0-9])$
          example: '12:00'
        capacity:
          type: number
      type: object
      required:
        - time
      xml:
        name: CarrierCutoffTimes
      title: CarrierCutoffConfiguration
      description: CarrierCutoffConfiguration
    CarrierCutoffTimesWeekDay:
      properties:
        day:
          $ref: '#/components/schemas/WeekDay'
        cutoffConfigurations:
          items:
            $ref: '#/components/schemas/CarrierCutoffConfiguration'
          type: array
      type: object
      required:
        - day
        - cutoffConfigurations
      xml:
        name: CarrierCutoffTimesWeekDay
      title: CarrierCutoffTimesWeekDay
      description: CarrierCutoffTimesWeekDay
    CarrierCutoffTimesOverwrite:
      properties:
        date:
          type: string
          pattern: ^\d{4}-\d{2}-\d{2}$
          example: '2020-02-03'
        cutoffConfigurations:
          items:
            $ref: '#/components/schemas/CarrierCutoffConfiguration'
          type: array
      type: object
      required:
        - date
        - cutoffConfigurations
      xml:
        name: CarrierCutoffTimes
      title: CarrierCutoffTimesOverwrite
      description: CarrierCutoffTimesOverwrite
    CarrierCutoffTimes:
      nullable: true
      properties:
        weekdays:
          items:
            $ref: '#/components/schemas/CarrierCutoffTimesWeekDay'
          type: array
        overwrites:
          items:
            $ref: '#/components/schemas/CarrierCutoffTimesOverwrite'
          type: array
      type: object
      required:
        - weekdays
        - overwrites
      xml:
        name: CarrierCutoffTimes
      title: CarrierCutoffTimes
      description: CarrierCutoffTimes
    FacilityCarrierConnection:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        id:
          example: fsfdsf87fsd
          type: string
        facilityRef:
          description: The id of the facility reference.
          example: Esb20gpHBL94X5NdMp3C
          type: string
        carrierRef:
          description: ID that references the configured carrier.
          type: string
        deliveryType:
          $ref: '#/components/schemas/CarrierDeliveryType'
        key:
          type: string
        configuration:
          description: Facility specific configuration for this carrier
          anyOf:
            - $ref: '#/components/schemas/GlsFacilityCarrierConfiguration'
            - $ref: '#/components/schemas/AngelFacilityCarrierConfiguration'
            - $ref: '#/components/schemas/PostNLFacilityCarrierConfiguration'
            - $ref: '#/components/schemas/DpdChFacilityCarrierConfiguration'
            - $ref: '#/components/schemas/DhlV2FacilityCarrierConfiguration'
            - $ref: '#/components/schemas/VceFacilityCarrierConfiguration'
            - $ref: '#/components/schemas/BringFacilityCarrierConfiguration'
            - $ref: '#/components/schemas/FedExFacilityCarrierConfiguration'
            - $ref: '#/components/schemas/HermesFacilityCarrierConfiguration'
        credentials:
          description: Facility specific credentials for this carrier
          anyOf:
            - $ref: '#/components/schemas/DHLV2BusinessCredentials'
            - $ref: '#/components/schemas/DpdChCarrierCredentials'
            - $ref: '#/components/schemas/PostNLCarrierCredentials'
            - $ref: '#/components/schemas/VceCarrierCredentials'
            - $ref: '#/components/schemas/HermesCarrierCredentials'
        cutoffTime:
          description: >-
            @deprecated: This property has been deprecated and is no longer
            considered. Please use the new property ‘cutoffTimes’ instead
          deprecated: true
          $ref: '#/components/schemas/CutoffTime'
        cutoffTimes:
          $ref: '#/components/schemas/CarrierCutoffTimes'
        deliveryAreas:
          items:
            $ref: '#/components/schemas/DeliveryArea'
          type: array
        name:
          description: >-
            This is the well known name for a supported CEP partner. Can be
            adapted to the clients needs.
          example: DHL Köln
          type: string
        status:
          $ref: '#/components/schemas/CarrierStatus'
        parcelLabelClassifications:
          items:
            $ref: '#/components/schemas/ParcelLabelClassification'
          type: array
        tags:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/TagReference'
        validDeliveryTargets:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/DeliveryTarget'
      required:
        - id
        - facilityRef
        - carrierRef
        - key
        - status
      type: object
      title: FacilityCarrierConnection
      description: FacilityCarrierConnection
    FacilityCarrierConnectionForCreation:
      additionalProperties: false
      properties:
        credentials:
          description: Facility specific credentials for this carrier
          anyOf:
            - $ref: '#/components/schemas/DHLV2BusinessCredentials'
            - $ref: '#/components/schemas/DpdChCarrierCredentials'
            - $ref: '#/components/schemas/PostNLCarrierCredentials'
            - $ref: '#/components/schemas/VceCarrierCredentials'
            - $ref: '#/components/schemas/HermesCarrierCredentials'
        configuration:
          description: Facility specific configuration for this carrier
          anyOf:
            - $ref: '#/components/schemas/GlsFacilityCarrierConfiguration'
            - $ref: '#/components/schemas/AngelFacilityCarrierConfiguration'
            - $ref: '#/components/schemas/PostNLFacilityCarrierConfiguration'
            - $ref: '#/components/schemas/DpdChFacilityCarrierConfiguration'
            - $ref: '#/components/schemas/DhlV2FacilityCarrierConfiguration'
            - $ref: '#/components/schemas/VceFacilityCarrierConfiguration'
            - $ref: '#/components/schemas/BringFacilityCarrierConfiguration'
            - $ref: '#/components/schemas/FedExFacilityCarrierConfiguration'
            - $ref: '#/components/schemas/HermesFacilityCarrierConfiguration'
        cutoffTime:
          deprecated: true
          description: Deprecated in favor of cutoffTimes
          $ref: '#/components/schemas/CutoffTime'
        cutoffTimes:
          $ref: '#/components/schemas/CarrierCutoffTimes'
        deliveryAreas:
          items:
            $ref: '#/components/schemas/DeliveryArea'
          type: array
        name:
          description: >-
            This is the well known name for a supported CEP partner. Can be
            adapted to the clients needs.
          example: DHL Köln
          type: string
        status:
          $ref: '#/components/schemas/CarrierStatus'
        parcelLabelClassifications:
          items:
            $ref: '#/components/schemas/ParcelLabelClassificationForCreation'
          type: array
        tags:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/TagReference'
        validDeliveryTargets:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/DeliveryTarget'
      type: object
      title: FacilityCarrierConnectionForCreation
      description: FacilityCarrierConnectionForCreation
    FacilityCarrierConnectionForModification:
      additionalProperties: false
      properties:
        credentials:
          description: Facility specific credentials for this carrier
          anyOf:
            - $ref: '#/components/schemas/DHLV2BusinessCredentials'
            - $ref: '#/components/schemas/DpdChCarrierCredentials'
            - $ref: '#/components/schemas/PostNLCarrierCredentials'
            - $ref: '#/components/schemas/VceCarrierCredentials'
            - $ref: '#/components/schemas/HermesCarrierCredentials'
        configuration:
          description: Facility specific configuration for this carrier
          anyOf:
            - $ref: '#/components/schemas/GlsFacilityCarrierConfiguration'
            - $ref: '#/components/schemas/AngelFacilityCarrierConfiguration'
            - $ref: '#/components/schemas/PostNLFacilityCarrierConfiguration'
            - $ref: '#/components/schemas/DpdChFacilityCarrierConfiguration'
            - $ref: '#/components/schemas/DhlV2FacilityCarrierConfiguration'
            - $ref: '#/components/schemas/VceFacilityCarrierConfiguration'
            - $ref: '#/components/schemas/BringFacilityCarrierConfiguration'
            - $ref: '#/components/schemas/FedExFacilityCarrierConfiguration'
            - $ref: '#/components/schemas/HermesFacilityCarrierConfiguration'
        cutoffTime:
          deprecated: true
          description: Deprecated in favor of cutoffTimes
          $ref: '#/components/schemas/CutoffTime'
        cutoffTimes:
          $ref: '#/components/schemas/CarrierCutoffTimes'
        deliveryAreas:
          items:
            $ref: '#/components/schemas/DeliveryArea'
          type: array
        name:
          description: >-
            This is the well known name for a supported CEP partner. Can be
            adapted to the clients needs.
          example: DHL Köln
          type: string
        status:
          $ref: '#/components/schemas/CarrierStatus'
        parcelLabelClassifications:
          items:
            $ref: '#/components/schemas/ParcelLabelClassificationForCreation'
          type: array
        tags:
          type: array
          items:
            $ref: '#/components/schemas/TagReference'
        version:
          type: number
        validDeliveryTargets:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/DeliveryTarget'
      required:
        - version
      type: object
      title: FacilityCarrierConnectionForModification
      description: FacilityCarrierConnectionForModification
    AbstractFacilityCarrierConfiguration:
      discriminator:
        propertyName: key
      properties:
        key:
          type: string
        serviceUrl:
          type: string
        thresholdPriceValue:
          $ref: '#/components/schemas/ThresholdPriceValue'
        alternativeReturnAddress:
          $ref: '#/components/schemas/FacilityAddress'
        alternativeSendAddress:
          $ref: '#/components/schemas/FacilityAddress'
      required:
        - key
      type: object
      xml:
        name: AbstractFacilityCarrierConfiguration
      title: AbstractFacilityCarrierConfiguration
      description: AbstractFacilityCarrierConfiguration
    DhlV2FacilityCarrierConfiguration:
      title: DhlV2FacilityCarrierConfiguration
      description: DHL Facility Carrier Configuration.
      allOf:
        - $ref: '#/components/schemas/AbstractFacilityCarrierConfiguration'
      properties:
        trackAndTraceUrl:
          type: string
        shipperRef:
          type: string
        alwaysDoTrackAndTrace:
          type: boolean
          default: false
          description: >-
            If true, the track and trace will always be done, even if a parcel
            is directly created in DONE status
      xml:
        name: DhlV2FacilityCarrierConfiguration
    VceFacilityCarrierConfiguration:
      title: VceFacilityCarrierConfiguration
      description: VCE Facility Carrier Configuration.
      allOf:
        - $ref: '#/components/schemas/AbstractFacilityCarrierConfiguration'
      properties:
        trackAndTraceUrl:
          type: string
      xml:
        name: VceFacilityCarrierConfiguration
    AngelFacilityCarrierConfiguration:
      title: AngelFacilityCarrierConfiguration
      description: Angel Facility Carrier Configuration.
      allOf:
        - $ref: '#/components/schemas/AbstractFacilityCarrierConfiguration'
        - properties:
            pickupLocationId:
              description: The id of the Pickup Location
              type: string
              pattern: ^[A-z0-9-]{15}$
          type: object
      xml:
        name: AngelFacilityCarrierConfiguration
    PostNLFacilityCarrierConfiguration:
      title: PostNLFacilityCarrierConfiguration
      description: Post NL Facility Carrier Configuration.
      allOf:
        - $ref: '#/components/schemas/AbstractFacilityCarrierConfiguration'
        - properties:
            customerId:
              type: string
            customerCode:
              type: string
            trackAndTraceUrl:
              type: string
          type: object
          required:
            - customerId
            - customerCode
      xml:
        name: PostNLFacilityCarrierConfiguration
    GlsFacilityCarrierConfiguration:
      title: GlsFacilityCarrierConfiguration
      description: Gls Facility Carrier Configuration.
      allOf:
        - $ref: '#/components/schemas/AbstractFacilityCarrierConfiguration'
        - properties:
            contactId:
              type: string
              pattern: ^[A-z0-9-]{15}$
            returnContactId:
              type: string
              pattern: ^[A-z0-9-]{15}$
            trackAndTraceUrl:
              type: string
            trackAndTraceWsdlUrl:
              type: string
          type: object
      xml:
        name: GlsFacilityCarrierConfiguration
    DpdChFacilityCarrierConfiguration:
      title: DpdChFacilityCarrierConfiguration
      description: DPD CH Facility Carrier Configuration.
      allOf:
        - $ref: '#/components/schemas/AbstractFacilityCarrierConfiguration'
        - properties:
            depot:
              type: string
            trackAndTraceUrl:
              type: string
          type: object
      xml:
        name: DpdChFacilityCarrierConfiguration
    BringFacilityCarrierConfiguration:
      title: BringFacilityCarrierConfiguration
      description: Bring Facility Carrier Configuration.
      allOf:
        - $ref: '#/components/schemas/AbstractFacilityCarrierConfiguration'
        - properties:
            trackAndTraceUrl:
              type: string
            webhookFftHost:
              type: string
          type: object
      xml:
        name: BringFacilityCarrierConfiguration
    FedExFacilityCarrierConfiguration:
      title: FedExFacilityCarrierConfiguration
      description: FedEx Facility Carrier Configuration.
      allOf:
        - $ref: '#/components/schemas/AbstractFacilityCarrierConfiguration'
        - properties:
            trackAndTraceUrl:
              type: string
          type: object
      xml:
        name: FedExFacilityCarrierConfiguration
    HermesFacilityCarrierConfiguration:
      title: HermesFacilityCarrierConfiguration
      description: Hermes Facility Carrier Configuration.
      allOf:
        - $ref: '#/components/schemas/AbstractFacilityCarrierConfiguration'
        - properties:
            alwaysDoTrackAndTrace:
              type: boolean
          type: object
      xml:
        name: HermesFacilityCarrierConfiguration
    InterFacilityConnections:
      additionalProperties: false
      properties:
        interFacilityConnections:
          items:
            $ref: '#/components/schemas/InterFacilityConnection'
          type: array
        total:
          description: Total number of entities found for this query
          example: 42
          type: integer
      required:
        - interFacilityConnections
        - total
      type: object
      xml:
        name: InterFacilityConnection
      title: InterFacilityConnections
      description: InterFacilityConnections
    InterFacilityConnection:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        id:
          type: string
        sourceFacilityRef:
          type: string
        target:
          oneOf:
            - $ref: '#/components/schemas/InterFacilityConnectionCustomerTarget'
            - $ref: >-
                #/components/schemas/InterFacilityConnectionManagedFacilityTarget
            - $ref: '#/components/schemas/InterFacilityConnectionSupplierTarget'
          discriminator:
            propertyName: type
            mapping:
              SUPPLIER: '#/components/schemas/InterFacilityConnectionSupplierTarget'
              MANAGED_FACILITY: >-
                #/components/schemas/InterFacilityConnectionManagedFacilityTarget
              CUSTOMER: '#/components/schemas/InterFacilityConnectionCustomerTarget'
        fallbackCost:
          $ref: '#/components/schemas/DeliveryCost'
        fallbackTransitTime:
          $ref: '#/components/schemas/CarrierTransitTime'
        cutoffTimes:
          $ref: '#/components/schemas/CarrierCutoffTimes'
      required:
        - id
        - sourceFacilityRef
        - target
      type: object
      xml:
        name: InterFacilityConnection
      title: InterFacilityConnection
      description: InterFacilityConnection
    ConnectionType:
      type: string
      enum:
        - SUPPLIER
        - MANAGED_FACILITY
        - CUSTOMER
      title: ConnectionType
      description: ConnectionType
    InterFacilityConnectionForUpdate:
      properties:
        version:
          type: number
        fallbackCost:
          $ref: '#/components/schemas/DeliveryCost'
        fallbackTransitTime:
          $ref: '#/components/schemas/CarrierTransitTime'
        cutoffTimes:
          $ref: '#/components/schemas/CarrierCutoffTimes'
        type:
          $ref: '#/components/schemas/ConnectionType'
      required:
        - version
        - type
      type: object
      xml:
        name: InterFacilityConnectionForUpdate
      title: InterFacilityConnectionForUpdate
      description: InterFacilityConnectionForUpdate
    InterFacilityConnectionToCustomerForUpdate:
      allOf:
        - $ref: '#/components/schemas/InterFacilityConnectionForUpdate'
      properties:
        target:
          $ref: '#/components/schemas/InterFacilityConnectionCustomerTarget'
      required:
        - target
      type: object
      xml:
        name: InterFacilityConnectionToCustomerForUpdate
      title: InterFacilityConnectionToCustomerForUpdate
      description: InterFacilityConnectionToCustomerForUpdate
    InterFacilityConnectionToManagedFacilityForUpdate:
      allOf:
        - $ref: '#/components/schemas/InterFacilityConnectionForUpdate'
      properties:
        target:
          $ref: '#/components/schemas/InterFacilityConnectionManagedFacilityTarget'
      required:
        - target
      type: object
      xml:
        name: InterFacilityConnectionToManagedFacilityForUpdate
      title: InterFacilityConnectionToManagedFacilityForUpdate
      description: InterFacilityConnectionToManagedFacilityForUpdate
    InterFacilityConnectionToSupplierForUpdate:
      allOf:
        - $ref: '#/components/schemas/InterFacilityConnectionForUpdate'
      properties:
        target:
          $ref: '#/components/schemas/InterFacilityConnectionSupplierTarget'
      required:
        - target
      type: object
      xml:
        name: InterFacilityConnectionToSupplierForUpdate
      title: InterFacilityConnectionToSupplierForUpdate
      description: InterFacilityConnectionToSupplierForUpdate
    InterFacilityConnectionToCustomerForCreation:
      allOf:
        - $ref: '#/components/schemas/InterFacilityConnectionForCreation'
      properties:
        target:
          $ref: '#/components/schemas/InterFacilityConnectionCustomerTarget'
      required:
        - target
      type: object
      xml:
        name: InterFacilityConnectionToCustomerForCreation
      title: InterFacilityConnectionToCustomerForCreation
      description: InterFacilityConnectionToCustomerForCreation
    InterFacilityConnectionToManagedFacilityForCreation:
      allOf:
        - $ref: '#/components/schemas/InterFacilityConnectionForCreation'
      properties:
        target:
          $ref: '#/components/schemas/InterFacilityConnectionManagedFacilityTarget'
      required:
        - target
      type: object
      xml:
        name: InterFacilityConnectionToManagedFacilityForCreation
      title: InterFacilityConnectionToManagedFacilityForCreation
      description: InterFacilityConnectionToManagedFacilityForCreation
    InterFacilityConnectionToSupplierForCreation:
      allOf:
        - $ref: '#/components/schemas/InterFacilityConnectionForCreation'
      properties:
        target:
          $ref: '#/components/schemas/InterFacilityConnectionSupplierTarget'
      required:
        - target
      type: object
      xml:
        name: InterFacilityConnectionToSupplierForCreation
      title: InterFacilityConnectionToSupplierForCreation
      description: InterFacilityConnectionToSupplierForCreation
    InterFacilityConnectionForCreation:
      properties:
        fallbackCost:
          $ref: '#/components/schemas/DeliveryCost'
        fallbackTransitTime:
          $ref: '#/components/schemas/CarrierTransitTime'
        cutoffTimes:
          $ref: '#/components/schemas/CarrierCutoffTimes'
        type:
          $ref: '#/components/schemas/ConnectionType'
      required:
        - type
      type: object
      xml:
        name: InterFacilityConnectionForCreation
      title: InterFacilityConnectionForCreation
      description: InterFacilityConnectionForCreation
    InterFacilityConnectionBaseTarget:
      discriminator:
        propertyName: type
      properties:
        type:
          $ref: '#/components/schemas/ConnectionType'
        carrierProductCategory:
          $ref: '#/components/schemas/CarrierProductCategory'
      required:
        - type
      type: object
      xml:
        name: InterFacilityConnectionBaseTarget
      title: InterFacilityConnectionBaseTarget
      description: InterFacilityConnectionBaseTarget
    InterFacilityConnectionCustomerTarget:
      type: object
      allOf:
        - $ref: '#/components/schemas/InterFacilityConnectionBaseTarget'
      title: InterFacilityConnectionCustomerTarget
      description: InterFacilityConnectionCustomerTarget
    InterFacilityConnectionSupplierTarget:
      type: object
      allOf:
        - $ref: '#/components/schemas/InterFacilityConnectionBaseTarget'
      properties:
        facilityRef:
          type: string
      required:
        - facilityRef
      title: InterFacilityConnectionSupplierTarget
      description: InterFacilityConnectionSupplierTarget
    InterFacilityConnectionManagedFacilityTarget:
      type: object
      allOf:
        - $ref: '#/components/schemas/InterFacilityConnectionBaseTarget'
      properties:
        facilityRef:
          type: string
      required:
        - facilityRef
      title: InterFacilityConnectionManagedFacilityTarget
      description: InterFacilityConnectionManagedFacilityTarget
    CustomServiceForCreation:
      additionalProperties: false
      properties:
        tenantCustomServiceId:
          type: string
        status:
          $ref: '#/components/schemas/CustomServiceStatus'
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        descriptionLocalized:
          $ref: '#/components/schemas/LocaleString'
        executionTimeInMin:
          type: integer
          example: 120
        itemsReturnable:
          type: boolean
        itemsRequired:
          $ref: '#/components/schemas/ItemsRequiredEnum'
        additionalInformation:
          type: array
          items:
            $ref: '#/components/schemas/AdditionalInformationForCreation'
        customAttributes:
          type: object
          nullable: true
          description: >-
            Attributes that can be added to custom service. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the information carried here.
      type: object
      required:
        - nameLocalized
        - itemsRequired
        - status
      title: CustomServiceForCreation
      description: CustomServiceForCreation
    CustomService:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
        - $ref: '#/components/schemas/CustomServiceForCreation'
      properties:
        id:
          type: string
        status:
          $ref: '#/components/schemas/CustomServiceStatus'
        name:
          type: string
        description:
          type: string
        additionalInformation:
          type: array
          items:
            $ref: '#/components/schemas/AdditionalInformation'
      type: object
      required:
        - id
      title: CustomService
      description: CustomService
    StrippedCustomServices:
      properties:
        customServices:
          items:
            $ref: '#/components/schemas/CustomService'
          type: array
        total:
          description: Total number of found entities for this query
          example: 42
          type: integer
      type: object
      title: StrippedCustomServices
      description: StrippedCustomServices
    ItemsRequiredEnum:
      type: string
      enum:
        - MANDATORY
        - NONE
      title: ItemsRequiredEnum
      description: ItemsRequiredEnum
    CustomServiceStatus:
      type: string
      description: 'Deprecated values: ENABLED and DISABLED, use INACTIVE and ACTIVE instead'
      enum:
        - ENABLED
        - DISABLED
        - INACTIVE
        - ACTIVE
      title: CustomServiceStatus
    ServiceJobStatus:
      type: string
      enum:
        - OPEN
        - IN_PROGRESS
        - FINISHED
        - CANCELLED
        - WAITING_FOR_INPUT
        - OBSOLETE
        - NOT_READY
      title: ServiceJobStatus
      description: ServiceJobStatus
    AdditionalInformationValueType:
      type: string
      enum:
        - STRING
        - BOOLEAN
        - NUMBER
        - NOVALUE
        - INPUT_MULTILINE_STRING
      title: AdditionalInformationValueType
      description: AdditionalInformationValueType
    AdditionalInformationForCreation:
      additionalProperties: false
      type: object
      properties:
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        descriptionLocalized:
          $ref: '#/components/schemas/LocaleString'
        valueType:
          $ref: '#/components/schemas/AdditionalInformationValueType'
        isMandatory:
          type: boolean
        tenantAdditionalInformationId:
          type: string
          minLength: 1
          example: AddInfoABC123
          description: >-
            Id to identifiy the additional information on an external system.
            Must be unique per CustomService.
      required:
        - nameLocalized
        - valueType
      title: AdditionalInformationForCreation
      description: AdditionalInformationForCreation
    AdditionalInformation:
      allOf:
        - $ref: '#/components/schemas/AdditionalInformationForCreation'
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
      required:
        - id
      title: AdditionalInformation
      description: AdditionalInformation
    ServiceJobAdditionalInformation:
      allOf:
        - $ref: '#/components/schemas/AdditionalInformation'
      type: object
      properties:
        value:
          anyOf:
            - type: string
            - type: number
            - type: boolean
          description: Value of the additional information
          example: some value
      title: ServiceJobAdditionalInformation
      description: ServiceJobAdditionalInformation
    CustomServicePatchActions:
      properties:
        actions:
          items:
            anyOf:
              - $ref: '#/components/schemas/ModifyCustomServiceAction'
          minItems: 1
          type: array
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
        - actions
      type: object
      xml:
        name: CustomServicePatchActions
      title: CustomServicePatchActions
      description: CustomServicePatchActions
    ModifyCustomServiceAction:
      title: ModifyCustomServiceAction
      description: Action to modify a custom service.
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: >-
                Use value 'ModifyCustomService', because you want to modify a
                custom service
              enum:
                - ModifyCustomService
              type: string
            tenantCustomServiceId:
              type: string
            status:
              $ref: '#/components/schemas/CustomServiceStatus'
            nameLocalized:
              $ref: '#/components/schemas/LocaleString'
            descriptionLocalized:
              $ref: '#/components/schemas/LocaleString'
            executionTimeInMin:
              type: integer
              description: Time in minutes the custom service takes to be executed
              example: 100
            itemsReturnable:
              type: boolean
              description: >-
                Indicates if the items of the custom service are returnable
                after the custom service has been executed
            itemsRequired:
              $ref: '#/components/schemas/ItemsRequiredEnum'
          required:
            - action
          type: object
      xml:
        name: ModifyCustomServiceAction
    ServiceJobLineItemForCreation:
      type: object
      properties:
        quantity:
          type: integer
          description: Quantity of the items
          example: 12
          minimum: 1
        scannableCodes:
          items:
            type: string
            description: Codes, that identify the article
            example: '4012345678901'
          type: array
        article:
          $ref: '#/components/schemas/ServiceJobLineItemArticle'
        customAttributes:
          description: >-
            Attributes that can be added to the service job line item. These
            attributes cannot be used within fulfillment processes, but it could
            be useful to have the information carried here.
          type: object
        recordableAttributes:
          items:
            $ref: '#/components/schemas/RecordableAttributeForCreation'
          nullable: true
          type: array
      required:
        - quantity
        - article
      title: ServiceJobLineItemForCreation
      description: ServiceJobLineItemForCreation
    ServiceJobAdditionalInformationForCreation:
      type: object
      properties:
        additionalInformationRef:
          type: string
          description: >-
            ID of the additional information. Either
            tenantAdditionalInformationId or additionalInformationRef must be
            set.
          example: 41d43211-g5a1-gg22-a716-ba095e30ds1d
        tenantAdditionalInformationRef:
          type: string
          description: >-
            external ID of the additional information. Either
            tenantAdditionalInformationId or additionalInformationRef must be
            set.
          example: 41d43211-g5a1-gg22-a716-ba095e30ds1d
        value:
          anyOf:
            - type: string
            - type: number
            - type: boolean
          description: Value of the additional information
          example: some value
      title: ServiceJobAdditionalInformationForCreation
      description: ServiceJobAdditionalInformationForCreation
    ServiceJobAdditionalInformationForUpdate:
      type: object
      properties:
        additionalInformationRef:
          type: string
          description: ID of the additional information
          example: 41d43211-g5a1-gg22-a716-ba095e30ds1d
        tenantAdditionalInformationRef:
          type: string
          description: external ID of the additional information
          example: 41d43211-g5a1-gg22-a716-ba095e30ds1d
        value:
          anyOf:
            - type: string
            - type: number
            - type: boolean
          description: Value of the additional information
          example: some value
      title: ServiceJobAdditionalInformationForUpdate
      description: ServiceJobAdditionalInformationForUpdate
    ServiceJobLineItem:
      allOf:
        - $ref: '#/components/schemas/ServiceJobLineItemForCreation'
      additionalProperties: false
      type: object
      properties:
        id:
          type: string
        recordableAttributes:
          items:
            $ref: '#/components/schemas/RecordableAttribute'
          nullable: true
          type: array
        originId:
          nullable: true
          type: string
          description: >-
            The id of the line item this line item was originated from, before
            any split has happened. This can be used to restore the ‘pre-split’
            status.
          example: df671041-10dd-4600-a2ff-e9ffe2556bba
      required:
        - id
      title: ServiceJobLineItem
      description: ServiceJobLineItem
    ServiceJobLineItemArticle:
      allOf:
        - $ref: '#/components/schemas/AbstractArticle'
        - properties:
            attributes:
              items:
                $ref: '#/components/schemas/ArticleAttributeItem'
              type: array
          type: object
          required:
            - title
            - tenantArticleId
      xml:
        name: ServiceLineItemArticle
      title: ServiceJobLineItemArticle
      description: ServiceJobLineItemArticle
    ServiceJob:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      additionalProperties: false
      properties:
        editor:
          $ref: '#/components/schemas/Editor'
        operativeProcessRef:
          type: string
        id:
          type: string
        name:
          type: string
        description:
          type: string
        lineItems:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/ServiceJobLineItem'
        processRef:
          type: string
        facilityRef:
          type: string
        status:
          $ref: '#/components/schemas/ServiceJobStatus'
        statusInformation:
          $ref: '#/components/schemas/ServiceJobStatusInformation'
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        descriptionLocalized:
          $ref: '#/components/schemas/LocaleString'
        executionTimeInMin:
          type: integer
        itemsReturnable:
          type: boolean
        itemsRequired:
          $ref: '#/components/schemas/ItemsRequiredEnum'
        shortId:
          type: string
          example: KD-12-1
        additionalInformation:
          type: array
          items:
            $ref: '#/components/schemas/ServiceJobAdditionalInformation'
        customAttributes:
          description: >-
            Attributes that can be added to the service job. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the information carried here.
          type: object
        targetTime:
          description: At which time the service job is expected to be finished.
          example: '2020-02-03T09:45:51.525Z'
          format: date-time
          type: string
        customServiceRef:
          type: string
          description: Id of the customService this ServiceJob was created from.
          example: 41d43211-g5a1-gg22-a716-ba095e30ds1d
        tenantCustomServiceId:
          type: string
          description: Tenant Id of the customService this ServiceJob was created from.
          example: 41d43211-g5a1-gg22-a716-ba095e30ds1d
        linkedServiceJobsRef:
          type: string
          description: ID of the Linked Service Job, the Service Job should reference.
          example: 41d43211-g5a1-gg22-a716-ba095e30ds1d
        tenantOrderId:
          description: ID of the tenant order, the linked service jobs are part of
          type: string
          example: ocff-order-100
        inheritedLineItems:
          type: array
          items:
            $ref: '#/components/schemas/InheritedServiceJobLineItem'
          description: >-
            Line items that are inherited from a preceding service job in a
            linked service job
        assignedUsers:
          type: array
          items:
            $ref: '#/components/schemas/AssignedUser'
          description: Assigned users for this entity
      required:
        - id
        - lineItems
        - processRef
        - status
        - nameLocalized
        - itemsRequired
        - facilityRef
        - targetTime
        - customServiceRef
      title: ServiceJob
      description: ServiceJob
    ServiceJobForCreation:
      properties:
        operativeProcessRef:
          type: string
        customServiceRef:
          type: string
          description: >-
            ID of the Custom Service, the Service Job should reference. Either
            this and/or the tenantCustomServiceId must passed.
          example: 41d43211-g5a1-gg22-a716-ba095e30ds1d
        tenantCustomServiceId:
          type: string
          description: >-
            Tenant ID of the Custom Service, the Service Job should reference.
            Either this and/or the customServiceRef must passed.
          example: 41d43211-g5a1-gg22-a716-ba095e30ds1d
        processRef:
          type: string
          description: ID of the Process, the Service Job belongs to.
          example: 550e8400-e29b-41d4-a716-446655440000
        facilityRef:
          type: string
          description: ID of the Facility, the Service Job is executed in.
          example: ba095e30-879f-11ee-b9d1-0242ac120002
        shortId:
          type: string
          example: KD-12-1
        lineItems:
          type: array
          items:
            $ref: '#/components/schemas/ServiceJobLineItemForCreation'
        additionalInformation:
          type: array
          items:
            $ref: '#/components/schemas/ServiceJobAdditionalInformationForCreation'
        customAttributes:
          description: >-
            Attributes that can be added to the service job. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the information carried here.
          type: object
        targetTime:
          description: At which time the service job is expected to be finished.
          example: '2020-02-03T09:45:51.525Z'
          format: date-time
          type: string
        tenantOrderId:
          description: ID of the tenant order, the linked service jobs are part of
          type: string
          example: ocff-order-100
        serviceJobLinkRef:
          type: string
          description: ID of the Service Job Link, the Service Job should reference.
          example: 41d43211-g5a1-gg22-a716-ba095e30ds1d
        assignedUsers:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/AssignedUserForCreationByName'
              - $ref: '#/components/schemas/AssignedUserForCreationById'
          description: Assigned users for this entity
      required:
        - facilityRef
        - targetTime
      title: ServiceJobForCreation
      description: ServiceJobForCreation
    ServiceJobWithSearchPaths:
      allOf:
        - $ref: '#/components/schemas/ServiceJob'
      additionalProperties: false
      properties:
        searchPaths:
          type: array
          items:
            type: string
      required:
        - searchPaths
      title: ServiceJobWithSearchPaths
      description: ServiceJobWithSearchPaths
    ServiceJobs:
      properties:
        serviceJobs:
          items:
            $ref: '#/components/schemas/ServiceJobWithSearchPaths'
          type: array
        total:
          description: Total number of found entities for this query
          example: 42
          type: integer
      type: object
      title: ServiceJobs
      description: ServiceJobs
    ServiceJobOrderBy:
      description: Attribute to order service job by
      enum:
        - TARGET_TIME_ASC
        - TARGET_TIME_DESC
        - LAST_MODIFIED_ASC
        - LAST_MODIFIED_DESC
      type: string
      xml:
        name: ServiceJobOrderBy
      title: ServiceJobOrderBy
    ServiceJobFilterChannel:
      enum:
        - COLLECT
        - SHIPPING
      type: string
      xml:
        name: ServiceJobFilterChannel
      title: ServiceJobFilterChannel
      description: ServiceJobFilterChannel
    ServiceJobInProgressActionParameter:
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/ServiceJobInProgressActionEnum'
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
        additionalInformation:
          type: array
          items:
            $ref: '#/components/schemas/ServiceJobAdditionalInformationForUpdate'
      required:
        - name
        - version
      title: ServiceJobInProgressActionParameter
      description: ServiceJobInProgressActionParameter
    ServiceJobObsoleteActionParameter:
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/ServiceJobObsoleteActionEnum'
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
      required:
        - name
        - version
      title: ServiceJobObsoleteActionParameter
      description: ServiceJobObsoleteActionParameter
    ServiceJobOpenActionParameter:
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/ServiceJobOpenActionEnum'
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
        additionalInformation:
          type: array
          items:
            $ref: '#/components/schemas/ServiceJobAdditionalInformationForUpdate'
      required:
        - name
        - version
      title: ServiceJobOpenActionParameter
      description: ServiceJobOpenActionParameter
    ServiceJobFinishedActionParameter:
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/ServiceJobFinishedActionEnum'
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
        additionalInformation:
          type: array
          items:
            $ref: '#/components/schemas/ServiceJobAdditionalInformationForUpdate'
      required:
        - name
        - version
      title: ServiceJobFinishedActionParameter
      description: ServiceJobFinishedActionParameter
    ServiceJobCancelledActionParameter:
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/ServiceJobCancelledActionEnum'
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
        additionalInformation:
          type: array
          items:
            $ref: '#/components/schemas/ServiceJobAdditionalInformationForUpdate'
        cancelReason:
          $ref: '#/components/schemas/LocaleString'
      required:
        - name
        - version
      title: ServiceJobCancelledActionParameter
      description: ServiceJobCancelledActionParameter
    ServiceJobWaitingForInputActionParameter:
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/ServiceJobWaitingForInputActionEnum'
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
        additionalInformation:
          type: array
          items:
            $ref: '#/components/schemas/ServiceJobAdditionalInformationForUpdate'
      required:
        - name
        - version
      title: ServiceJobWaitingForInputActionParameter
      description: ServiceJobWaitingForInputActionParameter
    ServiceJobReplaceAssignedUsersActionParameter:
      title: ServiceJobReplaceAssignedUsersActionParameter
      description: Action to replace the assigned users.
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/ServiceJobReplaceAssignedUsersActionEnum'
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
        assignedUsers:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/AssignedUserForCreationByName'
              - $ref: '#/components/schemas/AssignedUserForCreationById'
          description: Assigned users for this entity
      required:
        - name
        - version
        - assignedUsers
    ServiceJobSplitLineItemsActionParameter:
      title: ServiceJobSplitLineItemsActionParameter
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/ServiceJobSplitLineItemsActionEnum'
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          type: integer
        splitLineItemsInfo:
          items:
            $ref: '#/components/schemas/ServiceJobSplitLineItemsInfo'
          type: array
      required:
        - name
        - version
        - splitLineItemsInfo
      type: object
      description: ServiceJobSplitLineItemsActionParameter
    ServiceJobSplitLineItemsActionEnum:
      enum:
        - SPLIT_LINES_SERVICE_JOB
      type: string
      title: ServiceJobSplitLineItemsActionEnum
      description: ServiceJobSplitLineItemsActionEnum
    ServiceJobSplitLineItemsInfo:
      additionalProperties: false
      properties:
        lineItemId:
          type: string
          description: references the id of the lineItem of a serviceJob
        quantity:
          description: quantity of the specific item that has been ordered
          example: 21
          minimum: 1
          type: integer
      required:
        - lineItemId
        - quantity
      type: object
      title: ServiceJobSplitLineItemsInfo
      description: ServiceJobSplitLineItemsInfo
    ServiceJobUpdateRecordableAttributesActionParameter:
      title: ServiceJobUpdateRecordableAttributesActionParameter
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/ServiceJobUpdateRecordableAttributesActionEnum'
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          type: integer
        recordableAttributeUpdates:
          items:
            $ref: '#/components/schemas/RecordableAttributeForUpdate'
          type: array
      required:
        - name
        - version
        - recordableAttributeUpdates
      type: object
      description: ServiceJobUpdateRecordableAttributesActionParameter
    ServiceJobUpdateRecordableAttributesActionEnum:
      enum:
        - UPDATE_RECORDABLE_ATTRIBUTES_SERVICE_JOB
      type: string
      title: ServiceJobUpdateRecordableAttributesActionEnum
      description: ServiceJobUpdateRecordableAttributesActionEnum
    ServiceJobFinishedActionEnum:
      enum:
        - FinishServiceJob
      type: string
      title: ServiceJobFinishedActionEnum
      description: ServiceJobFinishedActionEnum
    ServiceJobReplaceAssignedUsersActionEnum:
      enum:
        - REPLACE_ASSIGNED_USERS
      type: string
      title: ServiceJobReplaceAssignedUsersActionEnum
      description: ServiceJobReplaceAssignedUsersActionEnum
    ServiceJobOpenActionEnum:
      enum:
        - OpenServiceJob
      type: string
      title: ServiceJobOpenActionEnum
      description: ServiceJobOpenActionEnum
    ServiceJobObsoleteActionEnum:
      enum:
        - ObsoleteServiceJob
      type: string
      title: ServiceJobObsoleteActionEnum
      description: ServiceJobObsoleteActionEnum
    ServiceJobInProgressActionEnum:
      enum:
        - StartServiceJob
      type: string
      title: ServiceJobInProgressActionEnum
      description: ServiceJobInProgressActionEnum
    ServiceJobCancelledActionEnum:
      enum:
        - CancelServiceJob
      type: string
      title: ServiceJobCancelledActionEnum
      description: ServiceJobCancelledActionEnum
    ServiceJobWaitingForInputActionEnum:
      enum:
        - HoldServiceJob
      type: string
      title: ServiceJobWaitingForInputActionEnum
      description: ServiceJobWaitingForInputActionEnum
    ServiceJobActionsParameter:
      anyOf:
        - $ref: '#/components/schemas/ServiceJobInProgressActionParameter'
        - $ref: '#/components/schemas/ServiceJobFinishedActionParameter'
        - $ref: '#/components/schemas/ServiceJobCancelledActionParameter'
        - $ref: '#/components/schemas/ServiceJobWaitingForInputActionParameter'
        - $ref: '#/components/schemas/ServiceJobObsoleteActionParameter'
        - $ref: '#/components/schemas/ServiceJobOpenActionParameter'
        - $ref: '#/components/schemas/ServiceJobReplaceAssignedUsersActionParameter'
        - $ref: '#/components/schemas/ServiceJobSplitLineItemsActionParameter'
        - $ref: >-
            #/components/schemas/ServiceJobUpdateRecordableAttributesActionParameter
      title: ServiceJobActionsParameter
      description: ServiceJobActionsParameter
    FacilityCustomServiceConnectionStatus:
      type: string
      enum:
        - ACTIVE
        - INACTIVE
      title: FacilityCustomServiceConnectionStatus
      description: FacilityCustomServiceConnectionStatus
    FacilityCustomServiceConnection:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      additionalProperties: false
      properties:
        id:
          type: string
        status:
          $ref: '#/components/schemas/FacilityCustomServiceConnectionStatus'
        facilityRef:
          type: string
        customServiceRef:
          type: string
        executionTimeInMin:
          type: integer
      required:
        - id
        - status
        - facilityRef
        - customServiceRef
      title: FacilityCustomServiceConnection
      description: FacilityCustomServiceConnection
    FacilityCustomServiceConnectionForUpdate:
      additionalProperties: false
      properties:
        status:
          $ref: '#/components/schemas/FacilityCustomServiceConnectionStatus'
        executionTimeInMin:
          type: integer
          description: Time in minutes the custom service takes to be executed
          example: 100
        version:
          description: Version of the documentSet you want to update a document of
          example: 42
          format: int64
          type: integer
      required:
        - version
      title: FacilityCustomServiceConnectionForUpdate
      description: FacilityCustomServiceConnectionForUpdate
    FacilityCustomServiceConnectionForCreation:
      additionalProperties: false
      properties:
        executionTimeInMin:
          type: integer
          description: Time in minutes the custom service takes to be executed
          example: 100
        status:
          $ref: '#/components/schemas/FacilityCustomServiceConnectionStatus'
      required:
        - status
      title: FacilityCustomServiceConnectionForCreation
      description: FacilityCustomServiceConnectionForCreation
    StrippedFacilityCustomServiceConnections:
      additionalProperties: false
      properties:
        facilityCustomServiceConnections:
          items:
            $ref: '#/components/schemas/FacilityCustomServiceConnection'
          type: array
        total:
          description: Total number of found entities for this query
          example: 42
          type: integer
      type: object
      title: StrippedFacilityCustomServiceConnections
      description: StrippedFacilityCustomServiceConnections
    LinkedServiceJobs:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        id:
          example: 9a14e183-ff86-4b6e-a2dc-eb4c7e312ab1
          type: string
        processRef:
          description: >-
            ProcessRef of the added ServiceJobs. All Service Jobs need to be
            part of the same process
          example: 9a14e183-ff86-4b6e-a2dc-eb4c7e312ab1
          type: string
        facilityRef:
          description: Id linked Facility from the includes service jobs
          type: string
          example: cdb1dfc4-8361-4ba9-b3c2-33a6f2fc8d05
        targetTime:
          type: string
          format: date-time
        includedServiceJobLinkIds:
          description: searchable field of all included service job link ids
          items:
            type: string
            example: cdb1dfc4-8361-4ba9-b3c2-33a6f2fc8d05
          type: array
          minItems: 1
        includedServiceJobRefs:
          description: searchable field of all included service job ids
          items:
            type: string
            example: cdb1dfc4-8361-4ba9-b3c2-33a6f2fc8d05
          type: array
          minItems: 1
        status:
          $ref: '#/components/schemas/LinkedServiceJobsStatus'
        serviceJobLinks:
          items:
            $ref: '#/components/schemas/ServiceJobLink'
          type: array
          minItems: 1
        operativeProcessRef:
          type: string
        fullIdentifier:
          type: string
          description: >-
            Full identifier of the service job. Using the full name of the
            customer when created from an order.
          example: 240429_lorem-42
        usersModificationHistory:
          type: array
          items:
            $ref: '#/components/schemas/UserModificationHistory'
      required:
        - id
        - serviceJobLinks
        - processRef
        - facilityRef
        - includedServiceJobLinkIds
        - includedServiceJobRefs
        - status
        - targetTime
      title: LinkedServiceJobs
      description: LinkedServiceJobs
    LinkedServiceJobsStatus:
      type: string
      enum:
        - OPEN
        - IN_PROGRESS
        - FINISHED
        - CANCELLED
        - OBSOLETE
        - NOT_READY
      title: LinkedServiceJobsStatus
      description: LinkedServiceJobsStatus
    LinkedServiceJobsForCreation:
      additionalProperties: false
      properties:
        serviceJobLinks:
          items:
            $ref: '#/components/schemas/ServiceJobLinkForCreation'
          type: array
          minItems: 1
        operativeProcessRef:
          type: string
        fullIdentifier:
          type: string
          description: >-
            Full identifier of the service job. Using the full name of the
            customer when created from an order.
          example: 240429_lorem-42
        status:
          $ref: '#/components/schemas/LinkedServiceJobsStatus'
      required:
        - serviceJobLinks
      title: LinkedServiceJobsForCreation
      description: LinkedServiceJobsForCreation
    ServiceJobLinkForCreation:
      additionalProperties: false
      properties:
        serviceJobRef:
          type: string
          example: 0ed803c2-fa20-48d9-9c1b-0d243937a9ad
        previousServiceJobRefs:
          items:
            type: string
            example: 9f197dbf-c724-469b-90f1-dc94f20b2825
          type: array
          maxItems: 1
          minItems: 0
        nextServiceJobLinks:
          items:
            $ref: '#/components/schemas/ServiceJobLinkForCreation'
          type: array
          minItems: 0
      required:
        - serviceJobRef
        - previousServiceJobRefs
        - nextServiceJobLinks
      title: ServiceJobLinkForCreation
      description: ServiceJobLinkForCreation
    ServiceJobLinkForAdding:
      additionalProperties: false
      properties:
        serviceJobRef:
          type: string
          example: 0ed803c2-fa20-48d9-9c1b-0d243937a9ad
      required:
        - serviceJobRef
      title: ServiceJobLinkForAdding
      description: ServiceJobLinkForAdding
    ServiceJobLink:
      additionalProperties: false
      properties:
        id:
          type: string
          example: 0ed803c2-fa20-48d9-9c1b-0d243937a9ad
        serviceJobRef:
          type: string
          example: 0ed803c2-fa20-48d9-9c1b-0d243937a9ad
        previousServiceJobRefs:
          items:
            type: string
            example: 9f197dbf-c724-469b-90f1-dc94f20b2825
          type: array
          maxItems: 1
          minItems: 0
        previousServiceJobLinkRefs:
          description: id of the created previous service job links
          items:
            type: string
            example: 9f197dbf-c724-469b-90f1-dc94f20b2825
          type: array
          maxItems: 1
          minItems: 0
        nextServiceJobLinks:
          items:
            $ref: '#/components/schemas/ServiceJobLink'
          type: array
          minItems: 0
      required:
        - id
        - serviceJobRef
        - previousServiceJobRefs
        - previousServiceJobLinkRefs
        - nextServiceJobLinks
      title: ServiceJobLink
      description: ServiceJobLink
    InheritedServiceJobLineItem:
      additionalProperties: false
      properties:
        id:
          type: string
        quantity:
          type: integer
          description: Quantity of the items
          example: 12
          minimum: 1
        scannableCodes:
          items:
            type: string
            description: Codes, that identify the article
            example: '4012345678901'
          type: array
        article:
          $ref: '#/components/schemas/ServiceJobLineItemArticle'
        serviceJobRef:
          type: string
        customAttributes:
          type: object
          description: >-
            Attributes that can be added to custom service. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the information carried here.
        recordableAttributes:
          items:
            $ref: '#/components/schemas/RecordableAttribute'
          nullable: true
          type: array
      required:
        - id
        - quantity
        - article
        - serviceJobRef
      title: InheritedServiceJobLineItem
      description: InheritedServiceJobLineItem
    LinkedServiceJobsWithSearchPaths:
      allOf:
        - $ref: '#/components/schemas/LinkedServiceJobs'
      additionalProperties: false
      properties:
        searchPaths:
          type: array
          items:
            type: string
      required:
        - searchPaths
      title: LinkedServiceJobsWithSearchPaths
      description: LinkedServiceJobsWithSearchPaths
    LinkedServiceJobsPaginatedResult:
      additionalProperties: false
      type: object
      properties:
        total:
          type: object
          minimum: 0
        linkedServiceJobs:
          type: array
          items:
            $ref: '#/components/schemas/LinkedServiceJobsWithSearchPaths'
      required:
        - total
        - linkedServiceJobs
      title: LinkedServiceJobsPaginatedResult
      description: LinkedServiceJobsPaginatedResult
    LinkedServiceJobsOrderBy:
      description: Attribute to order linked service jobs by
      enum:
        - LAST_MODIFIED_ASC
        - LAST_MODIFIED_DESC
        - TARGET_TIME_ASC
        - TARGET_TIME_DESC
      type: string
      xml:
        name: LinkedServiceJobsOrderBy
      title: LinkedServiceJobsOrderBy
    LinkedServiceJobsFilterChannel:
      enum:
        - COLLECT
        - SHIPPING
      type: string
      xml:
        name: LinkedServiceJobsFilterChannel
      title: LinkedServiceJobsFilterChannel
      description: LinkedServiceJobsFilterChannel
    OperativeServiceConfiguration:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      additionalProperties: false
      type: object
      properties:
        id:
          type: string
          description: ID of the Operative Service Configuration is always operativeservice
        cancelReasons:
          items:
            $ref: '#/components/schemas/ServiceJobCancelReason'
          type: array
      required:
        - id
      title: OperativeServiceConfiguration
      description: OperativeServiceConfiguration
    OperativeServiceConfigurationForUpsert:
      additionalProperties: false
      type: object
      properties:
        version:
          type: number
          minimum: 1
        cancelReasons:
          items:
            $ref: '#/components/schemas/ServiceJobCancelReason'
          type: array
      required:
        - version
      title: OperativeServiceConfigurationForUpsert
      description: OperativeServiceConfigurationForUpsert
    ServiceJobCancelReason:
      additionalProperties: false
      properties:
        active:
          type: boolean
        cancelReasonLocalized:
          $ref: '#/components/schemas/LocaleString'
        cancelReason:
          description: translated cancelReason selected from cancelReasonLocalized
          example: Broken Item
          type: string
      required:
        - cancelReasonLocalized
        - active
      title: ServiceJobCancelReason
      description: ServiceJobCancelReason
    ServiceJobStatusInformation:
      additionalProperties: false
      properties:
        cancelReason:
          $ref: '#/components/schemas/StatusReason'
      title: ServiceJobStatusInformation
      description: ServiceJobStatusInformation
    StatusReason:
      additionalProperties: false
      type: object
      properties:
        reasonLocalized:
          $ref: '#/components/schemas/LocaleString'
        reason:
          description: translated reason selected from reasonLocalized
          example: Broken Item
          type: string
      required:
        - reasonLocalized
      title: StatusReason
      description: StatusReason
    StatusReasonInternal:
      additionalProperties: false
      type: object
      properties:
        cancelReasonLocalized:
          $ref: '#/components/schemas/LocaleString'
      required:
        - cancelReasonLocalized
      title: StatusReasonInternal
      description: StatusReasonInternal
    HandoverContainer:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/HandoverContainerForCreation'
      properties:
        id:
          type: string
        version:
          type: integer
          format: int64
          example: 42
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
        created:
          type: string
          format: date-time
          example: '2020-02-03T08:45:51.525Z'
          description: >-
            The date this entity was created at the platform. This value is
            generated by the service.
        lastModified:
          type: string
          format: date-time
          example: '2020-02-03T09:45:51.525Z'
          description: >-
            The date this entity was modified last. This value is generated by
            the service.
        description:
          type: string
          description: Translated Description from descriptionLocalized
        name:
          type: string
          description: Translated name from nameLocalized
        facilityRef:
          description: Linked Facility through reference
          type: string
        processRef:
          description: Linked Process through reference
          type: string
        stackRef:
          description: Linked stack through reference
          type: string
        lineItems:
          type: array
          items:
            $ref: '#/components/schemas/HandoverContainerLineItem'
      type: object
      required:
        - id
        - version
        - created
        - lastModified
        - lineItems
        - facilityRef
        - processRef
        - stackRef
      title: HandoverContainer
      description: HandoverContainer
    HandoverContainerForCreation:
      additionalProperties: false
      properties:
        operativeContainerTypeRef:
          description: Linked Operative Container Type through reference
          type: string
        codes:
          type: array
          items:
            type: string
        handoverJobRef:
          description: Linked HandoverJob through reference
          type: string
        lineItems:
          type: array
          items:
            $ref: '#/components/schemas/HandoverContainerLineItemForCreation'
        customAttributes:
          type: array
          items:
            type: object
        dimensions:
          $ref: '#/components/schemas/ContainerDimensions'
        weightLimitInG:
          type: integer
          description: Weight limit in gram for this Container
        descriptionLocalized:
          $ref: '#/components/schemas/LocaleString'
        iconUrl:
          description: URL to icon
          type: string
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        storageLocationRef:
          description: Linked StorageLocation through reference
          type: string
        stackRef:
          description: Linked Stack through reference
          type: string
      type: object
      required:
        - lineItems
        - handoverJobRef
        - nameLocalized
      title: HandoverContainerForCreation
      description: HandoverContainerForCreation
    HandoverContainerLineItem:
      additionalProperties: false
      properties:
        id:
          type: string
        article:
          $ref: '#/components/schemas/HandoverContainerLineItemArticle'
        customAttributes:
          description: >-
            Attributes that can be added to the service job. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the information carried here.
          type: object
        quantity:
          description: ''
          type: number
        measurementUnitKey:
          description: Identifier for items unit of measurement.
          type: string
        scannableCodes:
          description: Codes, that identify the line item
          type: array
          items:
            type: string
      required:
        - id
        - quantity
        - article
      title: HandoverContainerLineItem
      description: HandoverContainerLineItem
    HandoverContainerLineItemForCreation:
      additionalProperties: false
      properties:
        article:
          $ref: '#/components/schemas/HandoverContainerLineItemArticle'
        customAttributes:
          description: >-
            Attributes that can be added to the service job. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the information carried here.
          type: object
        quantity:
          description: Amount per line item
          type: number
        measurementUnitKey:
          description: Identifier for items unit of measurement.
          type: string
        scannableCodes:
          description: Codes, that identify the line item
          type: array
          items:
            type: string
      required:
        - quantity
        - article
      title: HandoverContainerLineItemForCreation
      description: HandoverContainerLineItemForCreation
    StrippedHandoverContainer:
      additionalProperties: false
      properties:
        total:
          description: total number for the given filter
          type: integer
        handoverContainer:
          type: array
          items:
            $ref: '#/components/schemas/HandoverContainer'
      required:
        - handoverContainer
        - total
      title: StrippedHandoverContainer
      description: StrippedHandoverContainer
    HandoverContainerLineItemArticle:
      allOf:
        - $ref: '#/components/schemas/AbstractArticle'
        - properties:
            attributes:
              items:
                $ref: '#/components/schemas/ArticleAttributeItem'
              type: array
          type: object
          required:
            - title
            - tenantArticleId
      title: HandoverContainerLineItemArticle
      description: HandoverContainerLineItemArticle
    StacksResponse:
      additionalProperties: false
      properties:
        total:
          description: total number for the given filter
          type: integer
        stacks:
          type: array
          items:
            $ref: '#/components/schemas/Stack'
      required:
        - stacks
        - total
      title: StacksResponse
      description: StacksResponse
    HealthResult:
      properties:
        status:
          $ref: '#/components/schemas/HealthStatus'
        dependencies:
          items:
            $ref: '#/components/schemas/HealthDependencyStatus'
          type: array
          minItems: 1
      type: object
      required:
        - status
        - dependencies
      title: HealthResult
      description: HealthResult
    HealthDependencyStatus:
      properties:
        name:
          example: database
          description: Name of the component that is checked to be healthy
          type: string
        status:
          $ref: '#/components/schemas/HealthStatus'
      type: object
      required:
        - name
        - status
      title: HealthDependencyStatus
      description: HealthDependencyStatus
    HealthStatus:
      enum:
        - UP
        - DOWN
      type: string
      title: HealthStatus
      description: HealthStatus
    CurrencyCode:
      type: string
      description: >-
        The currency code is a three-letter code that represents a currency in
        the ISO 4217 standard.
      enum:
        - AED
        - AFN
        - ALL
        - AMD
        - ANG
        - AOA
        - ARS
        - AUD
        - AWG
        - AZN
        - BAM
        - BBD
        - BDT
        - BGN
        - BHD
        - BIF
        - BMD
        - BND
        - BOB
        - BOV
        - BRL
        - BSD
        - BTN
        - BWP
        - BYN
        - BZD
        - CAD
        - CDF
        - CHE
        - CHF
        - CHW
        - CLF
        - CLP
        - CNY
        - COP
        - COU
        - CRC
        - CUC
        - CUP
        - CVE
        - CZK
        - DJF
        - DKK
        - DOP
        - DZD
        - EGP
        - ERN
        - ETB
        - EUR
        - FJD
        - FKP
        - GBP
        - GEL
        - GHS
        - GIP
        - GMD
        - GNF
        - GTQ
        - GYD
        - HKD
        - HNL
        - HTG
        - HUF
        - IDR
        - ILS
        - INR
        - IQD
        - IRR
        - ISK
        - JMD
        - JOD
        - JPY
        - KES
        - KGS
        - KHR
        - KMF
        - KPW
        - KRW
        - KWD
        - KYD
        - KZT
        - LAK
        - LBP
        - LKR
        - LRD
        - LSL
        - LYD
        - MAD
        - MDL
        - MGA
        - MKD
        - MMK
        - MNT
        - MOP
        - MRU
        - MUR
        - MVR
        - MWK
        - MXN
        - MXV
        - MYR
        - MZN
        - NAD
        - NGN
        - NIO
        - NOK
        - NPR
        - NZD
        - OMR
        - PAB
        - PEN
        - PGK
        - PHP
        - PKR
        - PLN
        - PYG
        - QAR
        - RON
        - RSD
        - RUB
        - RWF
        - SAR
        - SBD
        - SCR
        - SDG
        - SEK
        - SGD
        - SHP
        - SLE
        - SOS
        - SRD
        - SSP
        - STN
        - SVC
        - SYP
        - SZL
        - THB
        - TJS
        - TMT
        - TND
        - TOP
        - TRY
        - TTD
        - TWD
        - TZS
        - UAH
        - UGX
        - USD
        - USN
        - UYI
        - UYU
        - UYW
        - UZS
        - VED
        - VES
        - VND
        - VUV
        - WST
        - XAF
        - XAG
        - XAU
        - XBA
        - XBB
        - XBC
        - XBD
        - XCD
        - XDR
        - XOF
        - XPD
        - XPF
        - XPT
        - XSU
        - XTS
        - XUA
        - XXX
        - YER
        - ZAR
        - ZMW
        - ZWL
      title: CurrencyCode
    LocaleString:
      additionalProperties:
        type: string
      description: >-
        Provides Localized values. The key is the locale, the value is the
        translation. See
        https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/localization#fallback-language-mechanism
      example:
        de_DE: Wert
        en_US: Value
        ru_RU: значение
      title: LocaleString
      type: object
    ArticleAttributeItem:
      properties:
        category:
          description: |-
            This category is used by OCFF to customize implemented processes.
            Categorized attributes are used by various processes and tools
            throughout our platform. For a complete list of possible categories
            and the correct use of those please refer to the documentation.
            Default value: miscellaneous
          enum:
            - descriptive
            - miscellaneous
            - pickingSequence
            - customs
            - insurance
            - shop
            - dimensions
            - carrierService
          type: string
        key:
          description: |-
            Providing the key %%subtitle%% (see example) here will cause the
            value to appear for example in the App directly under the title.
            With all other attributes also the key will be displayed in the
             clients.
          example: '%%subtitle%%'
          minLength: 1
          type: string
        keyLocalized:
          allOf:
            - $ref: '#/components/schemas/LocaleString'
          description: >-
            The translations for the key of the attribute. This can be only
            filled with a descriptive category. Excluding for %%subtitle%%
        priority:
          description: |-
            This value gives the priority in the respective attribute category.
            The lower the value the higher is the priority, e.g. priority 1 is
            higher than priority 10. Attributes that have the highest priority
            might be selected for display in different articles of OCFF. Default
            Value is 1001. For details please contact the product owners.
          example: 100
          format: int64
          maximum: 1000
          minimum: 1
          type: integer
        type:
          default: STRING
          description: The type of the attribute.
          enum:
            - STRING
            - NUMBER
            - CURRENCY
            - BOOLEAN
          type: string
        value:
          example: 585er Gold
          minLength: 1
          type: string
        valueLocalized:
          allOf:
            - $ref: '#/components/schemas/LocaleString'
          description: >-
            The translations for the key of the attribute. This can be only
            filled with a descriptive category
      required:
        - key
        - value
      title: ArticleAttributeItem
      type: object
      description: ArticleAttributeItem
    AbstractArticle:
      properties:
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        imageUrl:
          description: >-
            A web link to a picture of this article. Please make sure that no
            authentication is required to fetch the image!
          type: string
        tenantArticleId:
          description: This is a reference to an article number
          example: '4711'
          type: string
        title:
          description: The title of the product
          example: Cologne Water
          type: string
        titleLocalized:
          allOf:
            - $ref: '#/components/schemas/LocaleString'
          description: The translations for the title of the product
        weight:
          description: weight value is in gram
          minimum: 0
          type: number
      required:
        - tenantArticleId
        - title
      title: AbstractArticle
      type: object
      description: AbstractArticle
    OperativeTransfer:
      additionalProperties: false
      properties:
        id:
          description: The id of the transfer
          example: 018fe899-80ec-70f8-9bda-f7cc904bc0bf
          type: string
        type:
          description: The type of the transfer
          enum:
            - SUPPLIER
            - RECEIVER
          example: RECEIVER
          type: string
      required:
        - id
        - type
      title: OperativeTransfer
      type: object
      description: OperativeTransfer
    CustomAttributableVersionedResource:
      properties:
        created:
          description: >-
            The date this entity was created at the platform. This value is
            generated by the service.
          example: 2020-02-03T08:45:51.525Z
          format: date-time
          type: string
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        lastModified:
          description: >-
            The date this entity was modified last. This value is generated by
            the service.
          example: 2020-02-03T09:45:51.525Z
          format: date-time
          type: string
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
      title: CustomAttributableVersionedResource
      type: object
      description: CustomAttributableVersionedResource
    CustomAttributesResource:
      properties:
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
      title: CustomAttributesResource
      type: object
      description: CustomAttributesResource
    RecordableAttribute:
      additionalProperties: false
      properties:
        group:
          description: The group of the attribute
          example: general
          minLength: 1
          nullable: true
          type: string
        id:
          description: id of the recordable attribute
          example: 17ebfdfb-e1b4-4913-9962-3aef2b49f16f
          type: string
        key:
          description: >-
            The translated key of the attribute. This field gets filled
            automatically on request
          example: country of origin
          type: string
        keyLocalized:
          allOf:
            - $ref: '#/components/schemas/LocaleString'
          description: The translations of the key
        originId:
          description: The id of the original lineItem the attribute was split from.
          example: 17ebfdfb-e1b4-4913-9962-3aef2b49f16f
          nullable: true
          type: string
        recordingRule:
          description: Indicates whether the value has to be recorded or not
          enum:
            - OPTIONAL
            - MANDATORY
          example: MANDATORY
          type: string
        value:
          description: The value of the attribute
          example: Germany
          minLength: 1
          nullable: true
          type: string
      required:
        - id
        - keyLocalized
        - recordingRule
      title: RecordableAttribute
      type: object
      description: RecordableAttribute
    RecordableAttributeForCreation:
      additionalProperties: false
      properties:
        group:
          description: The group of the attribute
          example: general
          minLength: 1
          nullable: true
          type: string
        keyLocalized:
          allOf:
            - $ref: '#/components/schemas/LocaleString'
          description: The translations of the key
        recordingRule:
          description: Indicates whether the value has to be recorded or not
          enum:
            - OPTIONAL
            - MANDATORY
          example: MANDATORY
          type: string
        value:
          description: The value of the attribute
          example: Germany
          nullable: true
          type: string
      required:
        - keyLocalized
        - recordingRule
      title: RecordableAttributeForCreation
      type: object
      description: RecordableAttributeForCreation
    RecordableAttributeForUpdate:
      additionalProperties: false
      properties:
        group:
          description: The group of the attribute to set
          example: general
          minLength: 1
          nullable: true
          type: string
        id:
          description: id of the recordable attribute to update
          example: 17ebfdfb-e1b4-4913-9962-3aef2b49f16f
          type: string
        keyLocalized:
          allOf:
            - $ref: '#/components/schemas/LocaleString'
          description: The translations of the key
        recordingRule:
          description: Indicates whether the value has to be recorded or not
          enum:
            - OPTIONAL
            - MANDATORY
          example: MANDATORY
          type: string
        value:
          description: The value of the attribute to set
          example: Germany
          nullable: true
          type: string
      required:
        - id
      title: RecordableAttributeForUpdate
      type: object
      description: RecordableAttributeForUpdate
    BaseDecisionDetail:
      properties:
        decisionType:
          $ref: '#/components/schemas/DecisionType'
      required:
        - decisionType
      title: BaseDecisionDetail
      description: BaseDecisionDetail
    DecisionType:
      enum:
        - FENCE
        - TOOLKIT
        - TOOLKITCOMPARISON
        - RATING
      title: DecisionType
      description: DecisionType
    CustomServiceReference:
      allOf:
        - $ref: '#/components/schemas/CustomServiceReferenceForCreation'
      properties:
        id:
          type: string
        customServiceItems:
          items:
            $ref: '#/components/schemas/CustomServiceItem'
          type: array
      type: object
      required:
        - customServiceDefinition
        - articleItems
        - customServiceItems
        - id
      title: CustomServiceReference
      description: CustomServiceReference
    CustomServiceReferenceForCreation:
      additionalProperties: false
      properties:
        customServiceDefinition:
          $ref: '#/components/schemas/CustomServiceDefinition'
        articleItems:
          items:
            $ref: '#/components/schemas/ArticleItem'
          type: array
        customServiceItems:
          items:
            $ref: '#/components/schemas/CustomServiceItemForCreation'
          type: array
      type: object
      required:
        - customServiceDefinition
        - articleItems
        - customServiceItems
      title: CustomServiceReferenceForCreation
      description: CustomServiceReferenceForCreation
    CustomServiceItem:
      allOf:
        - $ref: '#/components/schemas/CustomServiceItemForCreation'
      properties:
        id:
          type: string
        customServiceItems:
          items:
            $ref: '#/components/schemas/CustomServiceItem'
          type: array
      type: object
      required:
        - id
        - customServiceItems
        - articleItems
        - customServiceDefinition
      title: CustomServiceItem
      description: CustomServiceItem
    CustomServiceItemForCreation:
      additionalProperties: false
      properties:
        customServiceDefinition:
          $ref: '#/components/schemas/CustomServiceDefinition'
        articleItems:
          items:
            $ref: '#/components/schemas/ArticleItem'
          type: array
        customServiceItems:
          items:
            $ref: '#/components/schemas/CustomServiceItemForCreation'
          type: array
      type: object
      required:
        - customServiceItems
        - articleItems
        - customServiceDefinition
      title: CustomServiceItemForCreation
      description: CustomServiceItemForCreation
    CustomServiceDefinition:
      properties:
        tenantCustomServiceId:
          description: The id of the tenant specific custom service
          type: string
        customServiceRef:
          description: >-
            A reference to the custom service to be applied to the orderline
            items
          type: string
        isBundled:
          description: if true all articles below this service are intrpreted as a bundle
          type: boolean
        customAttributes:
          description: >-
            Attributes that can be added to the consumer. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the informations carried here.
          type: object
        additionalInformation:
          items:
            properties:
              tenantAdditionalInformationId:
                description: The id of the tenant specific additional information
                type: string
              additionalInformationRef:
                description: >-
                  A reference to the specific additional information of the
                  custom service
                type: string
              value:
                description: The value of the additional information
                anyOf:
                  - type: string
                  - type: integer
                  - type: number
                  - type: boolean
            type: object
            required:
              - additionalInformationRef
          description: Additional information necessary to fulfil the custom service
          type: array
      type: object
      title: CustomServiceDefinition
      description: CustomServiceDefinition
    Order:
      allOf:
        - $ref: '#/components/schemas/OrderForCreation'
        - $ref: '#/components/schemas/VersionedResource'
        - properties:
            cancelationReason:
              $ref: '#/components/schemas/CancelationReason'
            anonymized:
              description: Indicates if gdpr related data was anonymized
              example: false
              type: boolean
            id:
              description: >-
                The id of this order. It is generated during creation
                automatically and suits as the primary identifier of the
                described entity.
              example: LGMl2DuvPnfPoSHhYFOm
              type: string
            orderLineItems:
              items:
                $ref: '#/components/schemas/OrderLineItem'
              type: array
            processId:
              description: >-
                Id of the global process related to this entity. For example
                used for starting the GDPR process and others.
              type: string
            paymentInfo:
              $ref: '#/components/schemas/OrderPaymentInfo'
            customServices:
              type: array
              minItems: 1
              items:
                $ref: '#/components/schemas/CustomServiceReference'
            schemaVersion:
              type: number
            status:
              $ref: '#/components/schemas/OrderStatus'
          required:
            - id
            - status
            - orderLineItems
            - processId
          type: object
      xml:
        name: Order
      title: Order
      description: Order
    OrderArticleAttributeItem:
      allOf:
        - $ref: '#/components/schemas/ArticleAttributeItem'
      title: OrderArticleAttributeItem
      description: OrderArticleAttributeItem
    OrderPaymentInfo:
      additionalProperties: false
      properties:
        currency:
          description: The currency in which the consumer paid with
          example: EUR
          type: string
        methodLocalized:
          $ref: '#/components/schemas/LocaleString'
        method:
          description: Localized value from methodLocalized
          example: Credit Card
          type: string
      type: object
      title: OrderPaymentInfo
      description: OrderPaymentInfo
    OrderPaymentInfoForCreation:
      additionalProperties: false
      properties:
        currency:
          description: The currency in which the consumer paid with
          example: EUR
          type: string
        methodLocalized:
          $ref: '#/components/schemas/LocaleString'
      type: object
      title: OrderPaymentInfoForCreation
      description: OrderPaymentInfoForCreation
    OrderForCreation:
      additionalProperties: false
      properties:
        consumer:
          properties:
            consumerId:
              description: The id of the consumer.
              example: e4213a07-f563-46a3-b1ba-4dfeb6abe82a
              type: string
            addresses:
              items:
                $ref: '#/components/schemas/ConsumerAddress'
              type: array
            customAttributes:
              description: >-
                Attributes that can be added to the consumer. These attributes
                cannot be used within fulfillment processes, but it could be
                useful to have the informations carried here.
              type: object
            email:
              deprecated: true
              description: >
                @deprecated The email address of the consumer. Use email in
                addresses array
              example: max@speedyboxales.com
              format: email
              type: string
          required:
            - addresses
          type: object
        customAttributes:
          description: >-
            Attributes that can be added to the order. These attributes cannot
            be used within fulfillment processes, but it could be useful to have
            the informations carried here.
          type: object
        deliveryPreferences:
          $ref: '#/components/schemas/DeliveryPreferences'
        orderDate:
          description: The date this order was created at the supplying system.
          example: '2020-02-03T08:45:50.525Z'
          format: date-time
          type: string
        orderLineItems:
          items:
            $ref: '#/components/schemas/OrderLineItemForCreation'
          type: array
        status:
          $ref: '#/components/schemas/OrderStatus'
        stickers:
          type: array
          minItems: 1
          maxItems: 100
          items:
            $ref: '#/components/schemas/Sticker'
        tenantOrderId:
          description: >-
            Field can be used as a reference number in foreign systems, for
            example as a reference to the source system's identifier for this
            order.
          example: R456728546
          type: string
        tags:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/TagReference'
        customServices:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/CustomServiceReferenceForCreation'
        paymentInfo:
          $ref: '#/components/schemas/OrderPaymentInfoForCreation'
        statusReasons:
          type: array
          items:
            $ref: '#/components/schemas/OrderStatusReason'
        promisesOptions:
          $ref: '#/components/schemas/OrderPromisesOptions'
      required:
        - orderDate
        - orderLineItems
        - consumer
      type: object
      xml:
        name: Order
      title: OrderForCreation
      description: OrderForCreation
    OrderForUpdate:
      additionalProperties: false
      properties:
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
        customAttributes:
          description: >-
            Attributes that can be added to the order. These attributes cannot
            be used within fulfillment processes, but it could be useful to have
            the informations carried here.
          type: object
          nullable: true
      type: object
      required:
        - version
      xml:
        name: OrderForUpdate
      title: OrderForUpdate
      description: OrderForUpdate
    OrderPromisesOptions:
      additionalProperties: false
      required:
        - validUntil
      properties:
        validUntil:
          description: >-
            The date the promised order will become invalid and is cancelled
            automatically, when not transformed into an actual order.
          example: '2020-02-03T08:45:50.525Z'
          format: date-time
          type: string
      type: object
      xml:
        name: OrderPromisesOptions
      title: OrderPromisesOptions
      description: OrderPromisesOptions
    CheckoutOptionsConsumerAddress:
      properties:
        city:
          example: Langenfeld
          pattern: ^.+$
          type: string
        country:
          description: A two-digit country code as per ISO 3166-1 alpha-2
          example: DE
          pattern: ^[A-Z]{2}$
          type: string
        province:
          example: NRW
          pattern: ^.+$
          type: string
        houseNumber:
          example: 42a
          pattern: ^.+$
          type: string
        postalCode:
          example: '40764'
          pattern: ^.+$
          type: string
        street:
          example: Hauptstr.
          pattern: ^.+$
          type: string
        addressType:
          $ref: '#/components/schemas/AddressType'
      type: object
      required:
        - country
      title: CheckoutOptionsConsumerAddress
      description: CheckoutOptionsConsumerAddress
    CheckoutOptionsDeliveryEarliestResponse:
      properties:
        checkoutOptions:
          type: array
          description: >-
            The results of the corresponding request containing information, if
            present, on when the items can supposingly be delivered earliest.
            Please note: When it was not possible to calculate the delivery
            information for a requested tenantArticleId there is no entry here.
          items:
            $ref: '#/components/schemas/CheckoutOptionsDeliveryEarliestResponseItem'
        calculationHints:
          type: array
          description: >-
            Hints generated during the calculation of the earliest delivery
            date. These are only returned if the includeCalculationHints flag
            was provided when performing the request.
          items:
            type: string
      required:
        - checkoutOptions
      title: CheckoutOptionsDeliveryEarliestResponse
      description: CheckoutOptionsDeliveryEarliestResponse
    CheckoutOptionsDeliveryEarliestResponseItem:
      properties:
        tenantArticleId:
          type: string
          example: DE-ZGT-4711
        earliestPredictedDeliveryDate:
          type: string
          example: '2020-02-03T08:45:50.525Z'
          format: date-time
        availableCarriers:
          description: List of available carriers.
          type: array
          items:
            $ref: >-
              #/components/schemas/CheckoutOptionsDeliveryEarliestResponseItemAvailableCarrier
      required:
        - tenantArticleId
      title: CheckoutOptionsDeliveryEarliestResponseItem
      description: CheckoutOptionsDeliveryEarliestResponseItem
    CheckoutOptionsDeliveryEarliestResponseItemAvailableCarrier:
      properties:
        name:
          type: string
          example: DHL
        carrierRef:
          type: string
        nonDeliveryDays:
          type: array
          items:
            description: ISO 3166-2 province code
            type: string
            example: DE-NW
        latestPickingStartDate:
          type: string
          example: '2020-02-03T08:45:50.525Z'
          format: date-time
      required:
        - name
        - carrierRef
      title: CheckoutOptionsDeliveryEarliestResponseItemAvailableCarrier
      description: CheckoutOptionsDeliveryEarliestResponseItemAvailableCarrier
    CheckoutOptionsDeliveryTimePeriodResponseItemAvailableCarrier:
      allOf:
        - $ref: >-
            #/components/schemas/CheckoutOptionsDeliveryEarliestResponseItemAvailableCarrier
      properties:
        latestPickingStartDate:
          type: string
          example: '2020-02-03T08:45:50.525Z'
          format: date-time
      title: CheckoutOptionsDeliveryTimePeriodResponseItemAvailableCarrier
      description: CheckoutOptionsDeliveryTimePeriodResponseItemAvailableCarrier
    CheckoutOptionsInput:
      additionalProperties: false
      properties:
        consumerAddress:
          $ref: '#/components/schemas/CheckoutOptionsConsumerAddress'
        deliveryPreferences:
          $ref: '#/components/schemas/DeliveryPreferences'
        orderLineItems:
          items:
            $ref: '#/components/schemas/OrderLineItemForCreation'
          type: array
        tags:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/TagReference'
        customServices:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/CustomServiceReference'
        geoFence:
          $ref: '#/components/schemas/GeoFence'
        filterDuplicates:
          type: boolean
          default: true
      required:
        - orderLineItems
        - deliveryPreferences
      type: object
      xml:
        name: CheckoutOptionsInput
      title: CheckoutOptionsInput
      description: CheckoutOptionsInput
    CheckoutOptionsAvailability:
      additionalProperties: false
      properties:
        tenantArticleId:
          type: string
        available:
          type: number
        preOrderReleaseDate:
          format: date-time
          type: string
        isBackOrderable:
          type: boolean
        latestPickingStart:
          format: date-time
          type: string
        carrier:
          $ref: '#/components/schemas/CheckoutOptionsAvailabilityCarrier'
      required:
        - tenantArticleId
        - available
        - isBackOrderable
      type: object
      xml:
        name: CheckoutOptionsAvailability
      title: CheckoutOptionsAvailability
      description: CheckoutOptionsAvailability
    CheckoutOptionsAvailabilityCarrier:
      additionalProperties: false
      properties:
        carrierRef:
          type: string
        carrierProductCategory:
          $ref: '#/components/schemas/CarrierProductCategory'
      required:
        - carrierRef
      type: object
      xml:
        name: CheckoutOptionsAvailabilityCarrier
      title: CheckoutOptionsAvailabilityCarrier
      description: CheckoutOptionsAvailabilityCarrier
    PromiseCarrier:
      additionalProperties: false
      properties:
        carrierRef:
          type: string
        carrierKey:
          type: string
        carrierName:
          type: string
        products:
          items:
            $ref: '#/components/schemas/PromiseDeliveryOptions'
          type: array
        deliveryPromiseValidUntil:
          type: string
          format: date-time
      required:
        - carrierRef
        - carrierKey
        - carrierName
        - products
      type: object
      xml:
        name: PromiseCarrier
      title: PromiseCarrier
      description: PromiseCarrier
    EstimatedDeliveryTime:
      type: object
      properties:
        minDeliveryDays:
          description: Minimum total delivery time in days
          example: 1
          type: integer
          minimum: 0
        maxDeliveryDays:
          description: Maximum total delivery time in days
          example: 3
          type: integer
          minimum: 0
      required:
        - maxDeliveryDays
        - minDeliveryDays
      title: EstimatedDeliveryTime
      description: EstimatedDeliveryTime
    PromiseDeliveryOptions:
      additionalProperties: false
      properties:
        carrierProductCategory:
          $ref: '#/components/schemas/CarrierProductCategory'
        transitTime:
          $ref: '#/components/schemas/CarrierTransitTime'
        estimatedDeliveryTime:
          $ref: '#/components/schemas/EstimatedDeliveryTime'
        deliveryCosts:
          items:
            $ref: '#/components/schemas/DeliveryCost'
          type: array
      required:
        - carrierProductCategory
        - deliveryCosts
      type: object
      xml:
        name: PromiseDeliveryOptions
      title: PromiseDeliveryOptions
      description: PromiseDeliveryOptions
    CheckoutOptionsDeliveryEarliestRequest:
      additionalProperties: false
      properties:
        earliestDeliveryDate:
          description: >-
            The date from which to search for the earliest potential delivery
            date. Defaults to "now" (timestamp of the request)
          example: '2024-06-01T00:00:00.000Z'
          format: date-time
          type: string
        tenantArticleIds:
          type: array
          items:
            type: string
            description: >-
              The tenant articleIds for which the check is performed. The
              provided items are considered individually.
            example: DE-ZGT-4711
            minItems: 1
            maxItems: 150
        consumerAddress:
          $ref: '#/components/schemas/CheckoutOptionsConsumerAddress'
        includeCalculationHints:
          description: >-
            Set this flag to true to get additional information about the
            availability of the requested articles
          type: boolean
      required:
        - tenantArticleIds
        - consumerAddress
      title: CheckoutOptionsDeliveryEarliestRequest
      description: CheckoutOptionsDeliveryEarliestRequest
    CheckoutOptionsDeliveryTimePeriodResponse:
      properties:
        checkoutOptions:
          type: array
          items:
            $ref: '#/components/schemas/CheckoutOptionsDeliveryTimePeriodResponseItem'
        calculationHints:
          type: array
          description: >-
            Hints generated during the calculation of the earliest delivery
            date. These are only returned if the includeCalculationHints flag
            was provided when performing the request.
          items:
            type: string
      required:
        - checkoutOptions
      title: CheckoutOptionsDeliveryTimePeriodResponse
      description: CheckoutOptionsDeliveryTimePeriodResponse
    CheckoutOptionsDeliveryTimePeriodResponseItem:
      properties:
        overallStatus:
          type: string
          enum:
            - ALL
            - PARTIAL
            - NONE
        date:
          type: string
          example: '2020-02-03T00:00:00.000Z'
          format: date-time
        availableCarriers:
          type: array
          items:
            $ref: >-
              #/components/schemas/CheckoutOptionsDeliveryTimePeriodResponseItemAvailableCarrier
      required:
        - date
        - overallStatus
      title: CheckoutOptionsDeliveryTimePeriodResponseItem
      description: CheckoutOptionsDeliveryTimePeriodResponseItem
    CheckoutOptionsCustomServices:
      additionalProperties: false
      properties:
        customServiceRef:
          type: string
        name:
          type: string
      required:
        - customServiceRef
        - name
      type: object
      xml:
        name: CheckoutOptionsCustomServices
      title: CheckoutOptionsCustomServices
      description: CheckoutOptionsCustomServices
    CheckoutOptionsFacilityForSFS:
      additionalProperties: false
      properties:
        facilityRef:
          type: string
        name:
          type: string
        availabilities:
          items:
            $ref: '#/components/schemas/CheckoutOptionsAvailability'
          type: array
        deliveryOptions:
          items:
            $ref: '#/components/schemas/PromiseCarrier'
          type: array
        customServices:
          items:
            $ref: '#/components/schemas/CheckoutOptionsCustomServices'
          type: array
      required:
        - facilityRef
        - name
        - availabilities
        - deliveryOptions
        - customServices
      type: object
      xml:
        name: CheckoutOptionsFacilityForSFS
      title: CheckoutOptionsFacilityForSFS
      description: CheckoutOptionsFacilityForSFS
    CheckoutOptionsFacilityForCNC:
      additionalProperties: false
      properties:
        facilityRef:
          type: string
        name:
          type: string
        address:
          $ref: '#/components/schemas/FacilityAddress'
        closingDays:
          items:
            $ref: '#/components/schemas/ClosingDay'
          type: array
        pickingTimes:
          $ref: '#/components/schemas/PickingTimes'
        availabilities:
          items:
            $ref: '#/components/schemas/CheckoutOptionsAvailability'
          type: array
        customServices:
          items:
            $ref: '#/components/schemas/CheckoutOptionsCustomServices'
          type: array
        targetTime:
          format: date-time
          type: string
      required:
        - facilityRef
        - name
        - address
        - closingDays
        - pickingTimes
        - availabilities
        - customServices
        - targetTime
      type: object
      xml:
        name: CheckoutOptionsFacilityForCNC
      title: CheckoutOptionsFacilityForCNC
      description: CheckoutOptionsFacilityForCNC
    ResponseForSFSCheckoutOptions:
      title: ResponseForSFSCheckoutOptions
      description: The Response body for Ship from Store Checkout Options.
      additionalProperties: false
      properties:
        facilities:
          items:
            $ref: '#/components/schemas/CheckoutOptionsFacilityForSFS'
          type: array
      required:
        - facilities
      type: object
      xml:
        name: ResponseForSFSCheckoutOptions
    ResponseForCNCCheckoutOptions:
      title: ResponseForCNCCheckoutOptions
      description: The Response body for Click&Collect Checkout Options.
      additionalProperties: false
      properties:
        facilities:
          items:
            $ref: '#/components/schemas/CheckoutOptionsFacilityForCNC'
          type: array
      required:
        - facilities
      type: object
      xml:
        name: ResponseForCNCCheckoutOptions
    DeliveryPromiseLineItem:
      type: object
      properties:
        tenantArticleId:
          type: string
        title:
          type: string
        quantity:
          type: number
        available:
          type: number
        outOfStockBehaviour:
          $ref: '#/components/schemas/OutOfStockBehaviour'
        availabilityTimeframe:
          $ref: '#/components/schemas/AvailabilityTimeframe'
      title: DeliveryPromiseLineItem
      description: DeliveryPromiseLineItem
    DeliveryPromiseShipment:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/BasicDeliveryPromiseShipment'
      properties:
        carriers:
          items:
            $ref: '#/components/schemas/PromiseCarrier'
          type: array
      required:
        - carriers
      type: object
      xml:
        name: DeliveryPromiseShipment
      title: DeliveryPromiseShipment
      description: DeliveryPromiseShipment
    BasicDeliveryPromiseShipmentFacility:
      additionalProperties: false
      properties:
        facilityRef:
          type: string
        facilityName:
          type: string
      required:
        - facilityName
        - facilityRef
      title: BasicDeliveryPromiseShipmentFacility
      description: BasicDeliveryPromiseShipmentFacility
    BasicDeliveryPromiseShipment:
      additionalProperties: false
      properties:
        lineItems:
          items:
            $ref: '#/components/schemas/DeliveryPromiseLineItem'
          type: array
        facility:
          $ref: '#/components/schemas/BasicDeliveryPromiseShipmentFacility'
      required:
        - lineItems
        - facility
      type: object
      xml:
        name: DeliveryPromiseShipment
      title: BasicDeliveryPromiseShipment
      description: BasicDeliveryPromiseShipment
    DeliveryPromiseCollect:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/BasicDeliveryPromiseShipment'
      properties:
        targetTime:
          format: date-time
          type: string
      required:
        - targetTime
      type: object
      xml:
        name: DeliveryPromiseCollect
      title: DeliveryPromiseCollect
      description: DeliveryPromiseCollect
    ResponseForDeliveryPromise:
      additionalProperties: false
      properties:
        orderRef:
          type: string
        orderVersion:
          type: number
        promisesOptions:
          $ref: '#/components/schemas/OrderPromisesOptions'
        collect:
          $ref: '#/components/schemas/DeliveryPromiseCollect'
        shipToCustomer:
          type: array
          items:
            $ref: '#/components/schemas/DeliveryPromiseShipment'
        shipToStore:
          type: array
          items:
            $ref: '#/components/schemas/DeliveryPromiseShipment'
        backOrdered:
          $ref: '#/components/schemas/Backordered'
      required:
        - orderRef
        - orderVersion
      type: object
      xml:
        name: ResponseForDeliveryPromise
      title: ResponseForDeliveryPromise
      description: ResponseForDeliveryPromise
    Backordered:
      type: object
      properties:
        lineItems:
          items:
            $ref: '#/components/schemas/DeliveryPromiseLineItem'
          type: array
      required:
        - lineItems
      title: Backordered
      description: Backordered
    OrderStatusReason:
      title: OrderStatusReason
      description: Order Status Reason.
      properties:
        reason:
          description: The reason for setting this order status
          type: string
        status:
          $ref: '#/components/schemas/OrderStatus'
      required:
        - reason
        - status
    OrderLineItem:
      allOf:
        - $ref: '#/components/schemas/OrderLineItemForCreation'
        - properties:
            id:
              description: >-
                The id of this orderline. It is generated during creation
                automatically by the API and suits as the primary identifier of
                the described line.
              example: LGMl2DuvPnfPoSHhYFOm
              type: string
          required:
            - id
          type: object
      title: OrderLineItem
      description: OrderLineItem
    OrderLineItemArticle:
      allOf:
        - $ref: '#/components/schemas/AbstractArticle'
        - properties:
            attributes:
              items:
                $ref: '#/components/schemas/OrderArticleAttributeItem'
              type: array
              description: >-
                Attributes are used in the fulfillmenttools platform in order to
                impose a certain degree of customization to a process, such as
                improving the appearance in the platform and clients.

                Details about usage can be found <a
                href="https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/customization-via-attributes">here</a>
          type: object
      xml:
        name: OrderLineItemArticle
      title: OrderLineItemArticle
      description: OrderLineItemArticle
    OrderLineItemForCreation:
      additionalProperties: false
      properties:
        article:
          $ref: '#/components/schemas/OrderLineItemArticle'
        customAttributes:
          description: >-
            Attributes that can be added to the orderline. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the informations carried here.
          type: object
        measurementUnitKey:
          description: Identifier for items unit of measurement.
          example: liter
          type: string
        quantity:
          description: quantity of the specific article that has been ordered
          example: 21
          format: int64
          minimum: 1
          type: integer
        secondaryMeasurementUnitKey:
          description: Secondary identifier for items unit of measurement.
          example: liter
          type: string
        secondaryQuantity:
          description: Secondary quantity of the specific article that has been ordered
          example: 21
          format: int64
          minimum: 0
          type: integer
        scannableCodes:
          items:
            description: Codes, that identify the article
            type: string
          type: array
        measurementValidation:
          $ref: '#/components/schemas/MeasurementValidation'
        shopPrice:
          description: >
            @deprecated price per piece of this line item Use attributes instead
            (see: <a
            href="https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/customization-via-attributes">customization
            by attributes</a>)
          example: 1200
          type: number
        tags:
          items:
            $ref: '#/components/schemas/TagReference'
          type: array
        allowedSubstitutes:
          items:
            $ref: '#/components/schemas/Substitute'
          type: array
          description: >-
            Array of allowed substitutes for given orderLineItem. If an empty
            array is provided, no substitute is allowed for this orderLineItem.
            If allowedSubstitutes is not provided, this configured substitutes
            on listing level will be available
      required:
        - article
        - quantity
      type: object
      title: OrderLineItemForCreation
      description: OrderLineItemForCreation
    OrderRoutingConfiguration:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        infiniteStockEnabled:
          description: Config to enable/disable infinite stock
          type: boolean
        id:
          type: string
      type: object
      title: OrderRoutingConfiguration
      description: OrderRoutingConfiguration
    FixedCountConfiguration:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Configuration of fixed count split.
      properties:
        maxSplitCount:
          description: >-
            This setting defines how often an order split might be performed to
            fulfill the order.
          minimum: 1
          type: number
      required:
        - maxSplitCount
      type: object
      title: FixedCountConfiguration
      x-badges:
        - color: orange
          label: BETA
    OrderSplit:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      additionalProperties: false
      properties:
        active:
          default: false
          type: boolean
        activeForSameDay:
          default: false
          type: boolean
        shouldUseWaitingRoomForPreBackOrderItems:
          default: false
          type: boolean
        fixedCountConfiguration:
          $ref: '#/components/schemas/FixedCountConfiguration'
        orderSplitType:
          $ref: '#/components/schemas/OrderSplitType'
      required:
        - active
        - orderSplitType
      type: object
      title: OrderSplit
      x-badges:
        - color: orange
          label: BETA
    OrderSplitType:
      description: The type of order split
      enum:
        - FIXED_COUNT
      type: string
      xml:
        name: OrderSplitType
      title: OrderSplitType
    RoutingPlanLineItem:
      allOf:
        - $ref: '#/components/schemas/OrderLineItem'
      properties:
        picked:
          type: number
        available:
          type: number
        pieces:
          type: array
          items:
            $ref: '#/components/schemas/RoutingPlanLineItemPiece'
          description: '@deprecated This property has been deprecated and has no meaning.'
        outOfStockBehaviour:
          $ref: '#/components/schemas/OutOfStockBehaviour'
        availabilityTimeframe:
          $ref: '#/components/schemas/AvailabilityTimeframe'
      title: RoutingPlanLineItem
      description: RoutingPlanLineItem
    RoutingPlanLineItemPiece:
      properties:
        partialStockRef:
          type: string
        quantity:
          type: number
        available:
          type: number
        mandatoryScore:
          type: number
        sequenceScore:
          type: number
        location:
          $ref: '#/components/schemas/Location'
        picked:
          type: number
      type: object
      title: RoutingPlanLineItemPiece
      description: RoutingPlanLineItemPiece
    RoutingPlanPatchActions:
      properties:
        actions:
          items:
            $ref: '#/components/schemas/ModifyRoutingPlanAction'
          minItems: 1
          type: array
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
        - actions
      type: object
      xml:
        name: RoutingPlanPatchActions
      title: RoutingPlanPatchActions
      description: RoutingPlanPatchActions
    RoutingPlanStatus:
      description: >-
        A routing plan line initially has the status INITIAL. Final state is
        ROUTED
      enum:
        - INITIAL
        - PRIORITIZED
        - ROUTING
        - PROPOSED
        - PLANNED
        - ROUTED
        - NOT_ROUTABLE
        - MANUAL_PLANNED
        - FAILED
        - REDUNDANT_REROUTE
        - FAILED_REROUTE
        - RETRYABLE
        - FALLBACK_ROUTING
        - WAITING
        - OBSOLETE
        - CANCELED
        - LOCKED
        - PROMISED
        - REROUTED
      type: string
      xml:
        name: RoutingPlanStatus
      title: RoutingPlanStatus
    ConsolidatedRoutingPlanStatus:
      description: |-
        This status consolidates many of the RoutingPlanStatus and offers
        a more detailes explanation of what happened to the routing plan.
      enum:
        - REROUTED
        - MANUALLY_REROUTED
        - ROUTED
        - ROUTED_THEN_REROUTED
        - PROCESS_MANUAL_REROUTED_THEN_ROUTED
        - PROCESS_MANUAL_REROUTED_THEN_NOT_ROUTABLE
        - PROCESS_MANUAL_REROUTED_THEN_REROUTED_AND_SPLIT
        - ROUTING_PLAN_REROUTED_THEN_ROUTED_TO_SAME_FACILITY
        - ROUTING_PLAN_SHORTPICKED_THEN_ROUTED_TO_SAME_FACILITY
        - ROUTING_PLAN_CREATED_THEN_ROUTING
        - ROUTING_PLAN_CREATED_THEN_PLANNED
        - ROUTING_PLAN_REROUTED_THEN_FAILED
        - FACILITY_MANUALLY_ASSIGNED_TO_PICKJOB_THEN_ROUTED
        - FACILITY_MANUALLY_ASSIGNED_TO_PROCESS_THEN_ROUTED
        - STOCK_UPDATE_RECEIVED_THEN_REACTIVATED
        - ROUTING_PLAN_REROUTE_TIMETRIGGERED_THEN_REROUTED
        - ROUTING_PLAN_REROUTE_TIMETRIGGERED_THEN_REROUTED_AND_SPLIT
        - ROUTING_PLAN_SHORTPICKED_THEN_REROUTED
        - ROUTING_PLAN_SHORTPICKED_THEN_SPLIT
        - ROUTING_PLAN_SHORTPICKED_THEN_REROUTED_AND_SPLIT
        - ROUTING_PLAN_REROUTE_STOCK_ZERO_THEN_REROUTED
        - ROUTING_PLAN_REROUTE_STOCK_ZERO_THEN_REROUTED_AND_SPLIT
        - ROUTING_PLAN_REROUTE_STOCK_ZERO_THEN_REROUTED_TO_SAME_FACILITY
        - PICKJOB_REJECTED_THEN_REROUTED
        - PICKJOB_REJECTED_THEN_NOT_ROUTABLE
        - PICKJOB_REJECTED_THEN_ROUTED_AND_SPLIT
        - ROUTED_AND_SPLIT
        - OBSOLETE
        - OBSOLETE_WAS_MANUALLY_REROUTED
        - OBSOLETE_WAS_MANUALLY_ASSIGNED
        - OBSOLETE_WAS_SHORTPICKED
        - OBSOLETE_WAS_ROUTED
        - UNKNOWN
        - RETRYABLE
        - FAILED_REROUTE
        - ROUTED_THEN_CANCELED
        - ROUTED_AND_SPLIT_THEN_CANCELED
        - ROUTING_PLAN_SHORTPICKED_THEN_SPLIT_THEN_CANCELED
        - ROUTING_PLAN_SHORTPICKED_THEN_REROUTED_THEN_CANCELED
        - ROUTING_PLAN_SHORTPICKED_THEN_REROUTED_AND_SPLIT_THEN_CANCELED
        - ROUTING_PLAN_REROUTE_TIMETRIGGERED_THEN_REROUTED_THEN_CANCELED
        - >-
          ROUTING_PLAN_REROUTE_TIMETRIGGERED_THEN_REROUTED_AND_SPLIT_THEN_CANCELED
        - FACILITY_MANUALLY_ASSIGNED_TO_PICKJOB_THEN_ROUTED_THEN_CANCELED
        - FACILITY_MANUALLY_ASSIGNED_TO_PROCESS_THEN_ROUTED_THEN_CANCELED
        - PROCESS_MANUAL_REROUTED_THEN_ROUTED_THEN_CANCELED
        - PROCESS_MANUAL_REROUTED_THEN_REROUTED_AND_SPLIT_THEN_CANCELED
        - CANCELED
        - NOT_ROUTABLE
        - NOT_ROUTABLE_WAS_MANUALLY_REROUTED
        - NOT_ROUTABLE_WAS_MANUALLY_ASSIGNED
        - WAITING
        - WAITING_WAS_MANUALLY_REROUTED
        - WAITING_WAS_MANUALLY_ASSIGNED
        - WAITING_AND_SPLIT
        - WAITING_THEN_ROUTED
        - WAITING_THEN_ROUTED_AND_SPLIT
        - WAITING_THEN_NOT_ROUTABLE
        - WAITING_THEN_WAITING_AND_SPLIT
        - LOCKED
        - INITIAL
      type: string
      xml:
        name: RealRoutingPlanStatus
      title: ConsolidatedRoutingPlanStatus
    RoutingPlans:
      properties:
        routingPlans:
          items:
            $ref: '#/components/schemas/RoutingPlan'
          type: array
        total:
          description: Total number of found entities for this query
          example: 42
          type: integer
      type: object
      title: RoutingPlans
      description: RoutingPlans
    RoutingRule:
      additionalProperties: false
      properties:
        fences:
          items:
            $ref: '#/components/schemas/Fence'
          type: array
        orderSplit:
          $ref: '#/components/schemas/OrderSplit'
        ratings:
          items:
            $ref: '#/components/schemas/Rating'
          type: array
      required:
        - ratings
        - fences
      type: object
      title: RoutingRule
      description: RoutingRule
    RoutingPlansGraph:
      additionalProperties: false
      description: >-
        A graph representation of the routing plans. The nodes are the routing
        plans and the edges are the rerouting reasons.
      properties:
        nodes:
          type: array
          items:
            $ref: '#/components/schemas/RoutingPlansGraphNode'
        edges:
          type: array
          items:
            $ref: '#/components/schemas/RoutingPlansGraphEdge'
      required:
        - nodes
        - edges
      title: RoutingPlansGraph
    RoutingPlansGraphNode:
      additionalProperties: false
      properties:
        routingPlanRef:
          type: string
      required:
        - routingPlanRef
      type: object
      title: RoutingPlansGraphNode
      description: RoutingPlansGraphNode
    RoutingPlansGraphEdge:
      additionalProperties: false
      properties:
        from:
          type: string
        to:
          type: string
        reason:
          $ref: '#/components/schemas/RoutingPlansGraphEdgeReason'
      required:
        - from
        - to
        - reason
      type: object
      title: RoutingPlansGraphEdge
      description: RoutingPlansGraphEdge
    RoutingPlansGraphEdgeReason:
      enum:
        - SPLIT
        - REROUTE
        - INTER_FACILITY_TRANSFER
      type: string
      title: RoutingPlansGraphEdgeReason
      description: RoutingPlansGraphEdgeReason
    AbstractRatingConfiguration:
      description: Base Configuration for Ratings. See documentation for Details.
      type: object
      xml:
        name: AbstractRatingConfiguration
      title: AbstractRatingConfiguration
    Rating:
      additionalProperties: false
      description: >-
        A rating is used to rate a set of possible facilities against each other
        during routing of orders.
      properties:
        active:
          type: boolean
        configuration:
          $ref: '#/components/schemas/AbstractRatingConfiguration'
        description:
          type: string
        id:
          description: >-
            This value identifies this very instance of the rating. It is set
            automatically by the server when the configuration is updated.
          example: 579ff115-8941-4221-8530-04f8b4adf59f
          type: string
        implementation:
          $ref: '#/components/schemas/RatingImplementation'
        maxPenalty:
          example: 100
          type: number
          minimum: 0
        name:
          type: string
      required:
        - name
        - active
        - implementation
        - maxPenalty
        - id
      type: object
      title: Rating
    RatingImplementation:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      enum:
        - STOCK-BALANCING
        - GEO-DISTANCE
        - TURNOVER
        - STOCK-AVAILABILITY
        - WORKLOAD-BALANCING
        - MATCHING-BUSINESSTYPE
        - PREFER-STORE
        - PREFER-WAREHOUSE
        - ZONE
        - EXPIRY-DATE
        - CAPACITY
        - DELIVERY-COSTS
        - DELIVERY-TIME
      type: string
      xml:
        name: RatingImplementation
      title: RatingImplementation
      x-badges:
        - color: orange
          label: BETA
    RerouteReason:
      enum:
        - PROCESSREROUTE
        - MANUAL
        - SHORTPICK
        - TIMETRIGGERED
        - STOCKZEROED
        - ABORTED
        - RECALCULATION
      type: string
      title: RerouteReason
      description: RerouteReason
    RerouteRoutingPlan:
      properties:
        allReroutable:
          description: >-
            if set to true every reroutable routing plan is rerouted. overrules
            every other identifier
          type: boolean
        orderRefs:
          items:
            type: string
          maxItems: 10
          type: array
        routingPlanIds:
          items:
            type: string
          maxItems: 10
          type: array
        tenantOrderIds:
          items:
            type: string
          maxItems: 10
          type: array
      type: object
      title: RerouteRoutingPlan
      description: RerouteRoutingPlan
    StrippedOrder:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
        - properties:
            id:
              description: >-
                The id of this order. It is generated during creation
                automatically and suits as the primary identifier of the
                described entity.
              example: LGMl2DuvPnfPoSHhYFOm
              type: string
            orderDate:
              description: The date this order was created at the supplying system.
              example: '2020-02-03T08:45:50.525Z'
              format: date-time
              type: string
            orderLineItems:
              items:
                properties:
                  quantity:
                    description: quantity of the specific article that has been ordered
                    example: 21
                    format: int64
                    minimum: 1
                    type: integer
                  title:
                    example: Cologne Water
                    type: string
                required:
                  - quantity
                  - title
                type: object
              type: array
            status:
              $ref: '#/components/schemas/OrderStatus'
            stickers:
              items:
                $ref: '#/components/schemas/Sticker'
              type: array
            processRef:
              type: string
          required:
            - id
            - status
            - orderDate
          type: object
      title: StrippedOrder
      description: StrippedOrder
    StrippedOrders:
      properties:
        orders:
          items:
            $ref: '#/components/schemas/StrippedOrder'
          type: array
        total:
          description: Total number of found entities for this query
          example: 42
          type: integer
      type: object
      title: StrippedOrders
      description: StrippedOrders
    RoutingPlanHistory:
      properties:
        status:
          $ref: '#/components/schemas/RoutingPlanStatus'
        created:
          description: Information about the time, when a routing plan status is set
          example: '2024-05-12T08:45:50.525Z'
          format: date-time
          type: string
      required:
        - status
        - created
      title: RoutingPlanHistory
      description: RoutingPlanHistory
    DecisionLog:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        id:
          type: string
        routingRun:
          type: number
        facilityDecisions:
          items:
            $ref: '#/components/schemas/FacilityDecision'
          type: array
        orderSplitDecision:
          $ref: '#/components/schemas/OrderSplitDecision'
        statistics:
          $ref: '#/components/schemas/RoutingStatistics'
        results:
          $ref: '#/components/schemas/RoutingResults'
        routingPlanRef:
          type: string
        latestPickingStartHints:
          description: >-
            This part of the API is in Alpha status. For details please check
            the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />In case no LPS could be calculated for this facility, the possible
            causes will be listed in this array. This property is an alpha
            property and still under development
          type: object
          x-badges:
            - color: red
              label: ALPHA
        routingStrategyEvaluationResult:
          $ref: '#/components/schemas/RoutingStrategyEvaluationResult'
      required:
        - id
        - routingPlanRef
        - facilityDecisions
        - routingRun
        - statistics
        - results
        - created
        - lastModified
        - version
      type: object
      xml:
        name: DecisionLog
      title: DecisionLog
      description: DecisionLog
    DecisionLogFacilityInfo:
      properties:
        name:
          type: string
        facilityRef:
          type: string
      required:
        - name
        - facilityRef
      title: DecisionLogFacilityInfo
      description: DecisionLogFacilityInfo
    RoutingResults:
      properties:
        assignedItems:
          type: array
          items:
            $ref: '#/components/schemas/AssignmentItem'
        bestRatedFacility:
          $ref: '#/components/schemas/DecisionLogFacilityInfo'
        bestAvailableFacility:
          $ref: '#/components/schemas/DecisionLogFacilityInfo'
        bestReassignmentFacility:
          $ref: '#/components/schemas/DecisionLogFacilityInfo'
        routingPlanStatus:
          $ref: '#/components/schemas/RoutingPlanStatus'
      required:
        - assignedItems
      title: RoutingResults
      description: RoutingResults
    RoutingStatistics:
      properties:
        fenceStatistics:
          type: array
          items:
            $ref: '#/components/schemas/FenceStatistic'
        ratingStatistics:
          type: array
          items:
            $ref: '#/components/schemas/RatingStatistic'
        durationMs:
          type: number
      required:
        - fenceStatistics
        - ratingStatistics
        - lineItemFenceStatistics
      title: RoutingStatistics
      description: RoutingStatistics
    FenceStatistic:
      properties:
        name:
          type: string
        rejectedAmount:
          type: number
        passedAmount:
          type: number
        passedPercentage:
          type: number
        durationMs:
          description: Duration in Milliseconds
          type: number
      required:
        - name
        - rejectedAmount
        - passedAmount
        - passedPercentage
        - durationMs
      title: FenceStatistic
      description: FenceStatistic
    RatingStatistic:
      properties:
        name:
          type: string
        maxScore:
          type: number
        minScore:
          type: number
        maxPenalty:
          type: number
        durationMs:
          description: Duration in Milliseconds
          type: number
      required:
        - name
        - maxPenalty
        - durationMs
      title: RatingStatistic
      description: RatingStatistic
    SplitResultType:
      enum:
        - SPLIT
        - DO_NOT_SPLIT
        - DO_NOT_SPLIT_USE_BEST_RATED
        - DO_NOT_SPLIT_BECAUSE_AVAILABILITY_USE_BEST_RATED
        - DO_NOT_SPLIT_USE_BEST_AVAILABLE
        - REASSIGN_TO_PARENT
        - REASSIGN_TO_PARENT_COMPLETELY
        - FAIL
        - INVALID_SPLIT
        - PARK_IN_WAITING_ROOM
      title: SplitResultType
      description: SplitResultType
    OrderSplitDecision:
      properties:
        split:
          $ref: '#/components/schemas/SplitInformation'
        reassignment:
          $ref: '#/components/schemas/ReassignmentInformation'
        splitType:
          $ref: '#/components/schemas/SplitResultType'
      required:
        - splitType
      title: OrderSplitDecision
      description: OrderSplitDecision
    ReassignmentInformation:
      properties:
        sourceFacility:
          $ref: '#/components/schemas/DecisionLogFacilityInfo'
        reassignedItems:
          type: array
          items:
            $ref: '#/components/schemas/AssignmentItem'
      required:
        - sourceFacility
        - reassignedItems
      title: ReassignmentInformation
      description: ReassignmentInformation
    AssignmentItem:
      properties:
        tenantArticleId:
          type: string
        articleTitle:
          type: string
        quantity:
          type: number
      required:
        - tenantArticleId
        - quantity
      title: AssignmentItem
      description: AssignmentItem
    SplitInformation:
      properties:
        targetFacility:
          $ref: '#/components/schemas/DecisionLogFacilityInfo'
        targetRoutingPlanRef:
          type: string
        splitCount:
          type: number
        splittedItems:
          type: array
          items:
            $ref: '#/components/schemas/AssignmentItem'
      required:
        - splitCount
        - targetRoutingPlanRef
        - splittedItems
      title: SplitInformation
      description: SplitInformation
    FacilityDecision:
      properties:
        facility:
          $ref: '#/components/schemas/DecisionLogFacilityInfo'
        orderFences:
          type: array
          items:
            $ref: '#/components/schemas/OrderFenceDecision'
        orderLineItemFences:
          type: array
          items:
            $ref: '#/components/schemas/OrderLineItemFenceDecisions'
        orderRatings:
          type: array
          items:
            $ref: '#/components/schemas/OrderRatingDecision'
        availabilities:
          type: array
          items:
            $ref: '#/components/schemas/AvailabilityDuringRouting'
        totalPenalty:
          type: number
        rank:
          type: number
        isBestRated:
          type: boolean
        isBestAvailable:
          type: boolean
        isBestReassignmentCandidate:
          type: boolean
        latestPickingStartInformation:
          $ref: '#/components/schemas/LatestPickingStartForDecisionLog'
      required:
        - facility
        - orderFences
        - orderLineItemFences
        - orderRatings
        - orderLineItemRatings
        - availabilities
      title: FacilityDecision
      description: FacilityDecision
    OrderRatingDecision:
      type: object
      properties:
        name:
          type: string
        score:
          type: number
        normalizedScore:
          type: number
        maxPenalty:
          type: number
        details:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/ToolkitDecisionDetail'
              - $ref: '#/components/schemas/ToolkitComparisonDecisionDetail'
      required:
        - name
        - normalizedScore
        - maxPenalty
      title: OrderRatingDecision
      description: OrderRatingDecision
    AvailabilityDuringRouting:
      properties:
        tenantArticleId:
          type: string
        articleTitle:
          type: string
        requestedQuantity:
          type: number
        available:
          type: number
        isBackOrderable:
          type: boolean
          default: false
        preOrderDate:
          format: date-time
          type: string
        rerouteInformation:
          $ref: '#/components/schemas/AvailabilityDuringRerouteStock'
        availablePostRerouteAdjustment:
          type: number
        bundleInformation:
          type: array
          items:
            $ref: '#/components/schemas/BundleInformation'
      required:
        - tenantArticleId
        - requestedQuantity
        - available
        - isBackOrderable
      title: AvailabilityDuringRouting
      description: AvailabilityDuringRouting
    BundleInformation:
      properties:
        customServiceNodeId:
          type: string
        requestedQuantity:
          type: number
      required:
        - customServiceNodeId
        - requestedQuantity
      title: BundleInformation
      description: BundleInformation
    AvailabilityDuringRerouteStock:
      properties:
        rerouteReason:
          $ref: '#/components/schemas/RerouteReason'
        pickedQuantity:
          type: number
      title: AvailabilityDuringRerouteStock
      description: AvailabilityDuringRerouteStock
    OrderFenceDecision:
      type: object
      properties:
        name:
          type: string
        decision:
          $ref: '#/components/schemas/FenceResultStatus'
        details:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/OrderFenceDecisionDetail'
              - $ref: '#/components/schemas/ToolkitDecisionDetail'
              - $ref: '#/components/schemas/ToolkitComparisonDecisionDetail'
      required:
        - name
        - decision
        - details
      title: OrderFenceDecision
      description: OrderFenceDecision
    ToolkitPredicateDecisionDetail:
      properties:
        originalValue:
          type: array
          items:
            type: string
        transformedValue:
          type: array
          items:
            type: string
        evaluationResult:
          type: boolean
        predicate:
          $ref: '#/components/schemas/ToolkitPredicate'
      required:
        - originalValue
        - transformedValue
        - evaluationResult
        - predicate
      title: ToolkitPredicateDecisionDetail
      description: ToolkitPredicateDecisionDetail
    ToolkitPredicatesDecisionDetail:
      properties:
        connector:
          $ref: '#/components/schemas/ToolkitPredicateConnector'
        predicates:
          type: array
          items:
            $ref: '#/components/schemas/ToolkitPredicateDecisionDetail'
      required:
        - connector
        - predicates
      title: ToolkitPredicatesDecisionDetail
      description: ToolkitPredicatesDecisionDetail
    ToolkitComparisonDecisionDetail:
      title: ToolkitComparisonDecisionDetail
      description: Toolkit Comparison Decision Detail.
      allOf:
        - $ref: '#/components/schemas/BaseDecisionDetail'
      properties:
        predicates:
          type: array
          items:
            $ref: '#/components/schemas/ToolKitComparisonDetails'
        predicateConnector:
          $ref: '#/components/schemas/ToolkitPredicateConnector'
        description:
          type: string
        explanation:
          $ref: >-
            #/components/schemas/ToolkitRuleComparePropertiesOperatorResultExplanation
      required:
        - predicates
        - result
        - predicateConnector
        - description
    ToolKitComparisonDetails:
      properties:
        leftPart:
          $ref: '#/components/schemas/ToolKitComparisonPart'
        rightPart:
          $ref: '#/components/schemas/ToolKitComparisonPart'
        evaluationResult:
          type: boolean
        predicate:
          $ref: '#/components/schemas/ToolkitComparisonPredicate'
      required:
        - leftPart
        - rightPart
        - evaluationResult
        - predicate
      title: ToolKitComparisonDetails
      description: ToolKitComparisonDetails
    ToolKitComparisonPart:
      properties:
        originalValue:
          type: array
          items:
            type: string
        transformedValue:
          type: array
          items:
            type: string
      required:
        - originalValue
        - transformedValue
      title: ToolKitComparisonPart
      description: ToolKitComparisonPart
    ToolkitDecisionDetail:
      title: ToolkitDecisionDetail
      description: Toolkit Decision Detail.
      allOf:
        - $ref: '#/components/schemas/BaseDecisionDetail'
      properties:
        leftSideEvaluation:
          type: boolean
        leftPredicatesDetail:
          $ref: '#/components/schemas/ToolkitPredicatesDecisionDetail'
        rightSideEvaluation:
          type: boolean
        rightPredicatesDetail:
          $ref: '#/components/schemas/ToolkitPredicatesDecisionDetail'
        comparisonOperator:
          $ref: '#/components/schemas/ToolkitRuleComparisonOperatorType'
        description:
          type: string
        explanation:
          $ref: '#/components/schemas/ToolkitRuleOperatorResultExplanation'
      required:
        - decisionType
        - result
        - leftSideEvaluation
        - description
    ToolkitRuleOperatorResultExplanation:
      enum:
        - SKIPPED
        - BOTH_CONDITIONS_MET
        - ONLY_FIRST_CONDITION_MET
        - ONLY_SECOND_CONDITION_MET
        - SKIPPED_BECAUSE_OF_ERROR
      title: ToolkitRuleOperatorResultExplanation
      description: ToolkitRuleOperatorResultExplanation
    ToolkitRuleComparePropertiesOperatorResultExplanation:
      enum:
        - ALL_PREDICATES_MET
        - NOT_ALL_PREDICATES_MET
        - SKIPPED_BECAUSE_OF_ERROR
      title: ToolkitRuleComparePropertiesOperatorResultExplanation
      description: ToolkitRuleComparePropertiesOperatorResultExplanation
    OrderFenceDecisionDetail:
      title: OrderFenceDecisionDetail
      description: Order Fence Decision Detail.
      allOf:
        - $ref: '#/components/schemas/BaseDecisionDetail'
      properties:
        contextReference:
          $ref: '#/components/schemas/ContextReference'
        expectedValue:
          type: string
        actualValue:
          type: string
        reactiveErrorReason:
          $ref: '#/components/schemas/ReactiveErrorReason'
      required:
        - expectedValue
        - facilityValue
        - decisionType
    ContextReference:
      properties:
        reference:
          type: string
        routingDecisionContext:
          $ref: '#/components/schemas/RoutingDecisionContext'
      required:
        - reference
        - routingDecisionContext
      title: ContextReference
      description: ContextReference
    RoutingDecisionContext:
      enum:
        - LISTING
        - CARRIER
      title: RoutingDecisionContext
      description: RoutingDecisionContext
    FenceResultStatus:
      enum:
        - FAILED
        - PASSED
        - REACTIVE_PASSING_POSSIBLE
      title: FenceResultStatus
      description: FenceResultStatus
    ReactiveErrorReason:
      enum:
        - BACKORDER_LISTING
        - PREORDER_LISTING
      title: ReactiveErrorReason
      description: ReactiveErrorReason
    OrderLineItemFenceDecisions:
      properties:
        name:
          type: string
        orderLineItems:
          type: array
          items:
            $ref: '#/components/schemas/OrderLineItemFenceDecision'
      required:
        - name
        - orderLineItems
      title: OrderLineItemFenceDecisions
      description: OrderLineItemFenceDecisions
    OrderLineItemFenceDecision:
      type: object
      properties:
        tenantArticleId:
          type: string
        articleTitle:
          type: string
        decision:
          $ref: '#/components/schemas/FenceResultStatus'
        details:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/OrderFenceDecisionDetail'
              - $ref: '#/components/schemas/ToolkitDecisionDetail'
              - $ref: '#/components/schemas/ToolkitComparisonDecisionDetail'
        reactiveErrorReason:
          $ref: '#/components/schemas/ReactiveErrorReason'
      required:
        - tenantArticleId
        - articleTitle
        - decision
        - details
      title: OrderLineItemFenceDecision
      description: OrderLineItemFenceDecision
    Fence:
      additionalProperties: false
      properties:
        active:
          type: boolean
        description:
          type: string
        id:
          description: >-
            This value identifies this very instance of the fence. It is set
            autmatically by the server when the configuration is updated.
          example: f937bc6b-d78b-46a3-913f-ecbba5f9f65d
          type: string
        implementation:
          $ref: '#/components/schemas/FenceImplementation'
        name:
          type: string
        supportedModes:
          type: array
          items:
            $ref: '#/components/schemas/FenceMode'
        activeMode:
          $ref: '#/components/schemas/FenceMode'
      required:
        - active
        - implementation
        - id
      type: object
      title: Fence
      description: Fence
    FenceMode:
      enum:
        - static
        - reactive
      type: string
      title: FenceMode
      description: FenceMode
    FenceImplementation:
      description: >-
        <i>This part of the API is currently under development. That means that
        this endpoint, model, etc. can contain breaking changes and / or might
        not be available at all times in your API instance. It could disappear
        also without warning. Thus it currently does not fall under our SLA
        regulations. For details on this topic please check our <a
        href="https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle">documentation</a></i>
      enum:
        - FACILITY-BUSINESSTYPE
        - STOCK-AVAILABILITY
        - FACILITY-CARRIERAVAILABILITY
        - FACILITY-COUNTRY
        - FACILITY-PICKING-TIME-CAPACITY
        - PRESELECTED-FACILITY
        - SAMEDAY-POSSIBLE
        - AVOID-ZERO-STOCK
      type: string
      xml:
        name: FenceImplementation
      title: FenceImplementation
    GeoFence:
      description: >-
        Center (described with lon and lat attributes) and a circular geofence
        (described as radius around the center)
      properties:
        lat:
          description: The latitude of the center, provided as decimal coordinate
          example: 50.968713
          type: number
        lon:
          description: The longitude of the center, provided as decimal coordinate
          example: 7.011375
          type: number
        radius:
          description: Radius around the center in kilometers (km, max. 100)
          minimum: 1
          type: number
      required:
        - lat
        - lon
        - radius
      type: object
      title: GeoFence
    ArticleAvailability:
      properties:
        tenantArticleId:
          type: string
        availableStock:
          type: number
        outOfStockBehaviour:
          $ref: '#/components/schemas/OutOfStockBehaviour'
        availabilityTimeframe:
          $ref: '#/components/schemas/AvailabilityTimeframe'
      required:
        - tenantArticleId
        - availableStock
      title: ArticleAvailability
      description: ArticleAvailability
    Fulfillability:
      description: The response to a fulfillability request.
      properties:
        collect:
          properties:
            facilities:
              items:
                $ref: '#/components/schemas/FulfillabilityFacility'
              type: array
          type: object
        shipping:
          description: >-
            Results for the fulfillment of a shipping order for the parameters
            provided in the query
          properties:
            DELIVERY:
              description: Depicts wether the servicelevel DELIVERY is available.
              properties:
                available:
                  description: Depicts wether the servicelevel DELIVERY is available
                  example: false
                  type: boolean
              required:
                - available
              type: object
            SAMEDAY:
              description: >-
                This service level means, that the consumer expects a package
                the same day.
              properties:
                available:
                  description: Depicts wether the servicelevel SAMEDAY is available
                  example: true
                  type: boolean
                validUntil:
                  description: >-
                    This information is most likely valid until this date (there
                    are circumstances when this information becomes stale
                    earlier).
                  example: '2020-02-03T08:45:50.525Z'
                  format: date-time
                  type: string
              required:
                - available
              type: object
          type: object
      type: object
      title: Fulfillability
    FulfillabilityResult:
      properties:
        fulfillability:
          type: array
          items:
            $ref: '#/components/schemas/FulfillabilityDetail'
      required:
        - details
      title: FulfillabilityResult
      description: FulfillabilityResult
    FulfillabilityDetail:
      properties:
        facilityRef:
          type: string
        tenantFacilityId:
          type: string
        facilityName:
          type: string
        closingDays:
          type: array
          items:
            $ref: '#/components/schemas/ClosingDay'
        pickingTimes:
          $ref: '#/components/schemas/PickingTimes'
        address:
          $ref: '#/components/schemas/FacilityAddress'
        targetTime:
          type: string
          format: date-time
        articleAvailabilities:
          type: array
          items:
            $ref: '#/components/schemas/ArticleAvailability'
      required:
        - facilityRef
        - facilityName
        - address
        - articleAvailabilities
      title: FulfillabilityDetail
      description: FulfillabilityDetail
    FulfillabilityFacility:
      allOf:
        - $ref: '#/components/schemas/StrippedManagedFacility'
      title: FulfillabilityFacility
      description: FulfillabilityFacility
    FulfillabilityItemsConstraintValue:
      properties:
        items:
          description: >-
            The shortened description of an article, that would be part of the
            order.
          items:
            properties:
              amount:
                description: The required amount
                example: 5
                type: integer
              tenantArticleId:
                description: The article ID, that is used in corresponding listings.
                example: RO-57665956-6-XL
                type: string
            type: object
          type: array
        mode:
          description: >-
            The mode this constraint is evaluated in. ITEMS_COMPLETE means, that
            all the items in the desired quantities have to be listed in a
            resulting facility.
          enum:
            - ITEMS_COMPLETE
          example: ITEMS_COMPLETE
          type: string
      required:
        - mode
        - items
      type: object
      title: FulfillabilityItemsConstraintValue
      description: FulfillabilityItemsConstraintValue
    FulfillabilityShipFromStoreQuery:
      description: >-
        Provides the paramters you are interested in. You must supply at least
        the articles you are interested in
      properties:
        geoFence:
          $ref: '#/components/schemas/GeoFence'
        facilityRefs:
          type: array
          items:
            type: string
        articles:
          type: array
          minItems: 1
          items:
            type: object
            properties:
              tenantArticleId:
                type: string
              quantity:
                type: number
            required:
              - tenantArticleId
        deliveryPreferences:
          $ref: '#/components/schemas/DeliveryPreferences'
        deliveryCountry:
          description: A two-digit country code as per ISO 3166-1 alpha-2
          example: DE
          pattern: ^[A-Z]{2}$
          type: string
        deliveryPostalCode:
          type: string
      required:
        - articles
      title: FulfillabilityShipFromStoreQuery
    FulfillabilityClickAndCollectQuery:
      description: >-
        Provides the paramters you are interested in. You must supply at least
        the articles you are interested in
      properties:
        geoFence:
          $ref: '#/components/schemas/GeoFence'
        facilityRefs:
          type: array
          items:
            type: string
        deliveryPreferences:
          $ref: '#/components/schemas/DeliveryPreferences'
        deliveryCountry:
          description: A two-digit country code as per ISO 3166-1 alpha-2
          example: DE
          pattern: ^[A-Z]{2}$
          type: string
        deliveryPostalCode:
          type: string
        articles:
          type: array
          minItems: 1
          items:
            type: object
            properties:
              tenantArticleId:
                type: string
              quantity:
                type: number
            required:
              - tenantArticleId
      required:
        - articles
      title: FulfillabilityClickAndCollectQuery
    AbstractFulfillabilityConstraintType:
      properties:
        type:
          description: >-
            Type of the constraint (must be supported by the fulfillmenttools
            platform).
          enum:
            - ITEMS
          example: ITEMS
          type: string
        value:
          description: Additional parameters needed for the referenced type of constraint.
          type: object
      type: object
      title: AbstractFulfillabilityConstraintType
      description: AbstractFulfillabilityConstraintType
    ItemsFulfillabilityConstraintType:
      allOf:
        - $ref: '#/components/schemas/AbstractFulfillabilityConstraintType'
      properties:
        type:
          enum:
            - ITEMS
          type: string
        value:
          $ref: '#/components/schemas/FulfillabilityItemsConstraintValue'
      type: object
      title: ItemsFulfillabilityConstraintType
      description: ItemsFulfillabilityConstraintType
    StrippedShippingTargetAddress:
      properties:
        country:
          description: A two-digit country code as per ISO 3166-1 alpha-2
          example: DE
          pattern: ^[A-Z]{2}$
          type: string
        postalCode:
          example: '40764'
          pattern: ^.+
          type: string
      type: object
      title: StrippedShippingTargetAddress
      description: StrippedShippingTargetAddress
    FulfillabilityQuery:
      description: >-
        Provides the paramters you are interested in. You must supply at least
        either the shipping or the collect attribute as the description of the
        last mile expectation.
      properties:
        collect:
          description: >-
            The geofence (a gps coordinate and a radius around that coordinate)
            for considered facilities to collect the goods.
          properties:
            geoFence:
              $ref: '#/components/schemas/GeoFence'
          required:
            - geoFence
          type: object
        constraints:
          description: >-
            Constraints can be used to further cut down the list of resulting
            facilities. Important: ALL of the given constraints will be matched
            against the resulting list of facilities!
          items:
            $ref: '#/components/schemas/AbstractFulfillabilityConstraintType'
          type: array
        estimatedOrderDate:
          description: >-
            The point in time when the order estimated to be supplied to
            fulfillmenttools platform, e.g. calling this endpoint during
            checkout, you would most likely put the timestamp for 'now' in here.
          example: '2020-02-03T08:45:50.525Z'
          format: date-time
          type: string
        shipping:
          description: >-
            You want information about the shipping possibility - more detailed
            parameters  can be described here.
          properties:
            serviceLevels:
              description: >-
                The kind of servicelevel you want to query as being part of the
                consumer expectation of delivery
              items:
                $ref: '#/components/schemas/CarrierDeliveryType'
              minItems: 1
              type: array
            targetAddress:
              $ref: '#/components/schemas/StrippedShippingTargetAddress'
          required:
            - serviceLevels
            - targetAddress
          type: object
      required:
        - estimatedOrderDate
      type: object
      title: FulfillabilityQuery
    FallbackFacilityConfigurationForPatch:
      properties:
        facilityRefs:
          type: array
          items:
            type: string
          maxItems: 1
          minItems: 1
        active:
          type: boolean
        fallbackAfterTime:
          description: >-
            Default amount of time in ISO 8601 duration format after which a not
            routable routingplan is routed to a configured fallback facility.
          type: string
          pattern: ^P(?:(\d+W)|(\d+Y)?(\d+M)?(\d+D)?(?:T(\d+H)?(\d+M)?(\d+S)?)?)$
      title: FallbackFacilityConfigurationForPatch
      description: FallbackFacilityConfigurationForPatch
    FallbackFacilityConfiguration:
      properties:
        facilityRefs:
          type: array
          items:
            type: string
          maxItems: 1
          minItems: 1
        active:
          type: boolean
          default: false
        fallbackAfterTime:
          default: PT0H
          description: >-
            Default amount of time in ISO 8601 duration format after which a not
            routable routingplan is routed to a configured fallback facility.
          type: string
          pattern: ^P(?:(\d+W)|(\d+Y)?(\d+M)?(\d+D)?(?:T(\d+H)?(\d+M)?(\d+S)?)?)$
      required:
        - facilityRefs
        - active
        - fallbackAfterTime
      title: FallbackFacilityConfiguration
      description: FallbackFacilityConfiguration
    GlobalManualRerouteConfiguration:
      description: Allows reroutes to be triggered manually via api.
      properties:
        active:
          type: boolean
      required:
        - active
      type: object
      title: GlobalManualRerouteConfiguration
    GlobalRoutingConfiguration:
      description: Global configuration for routing
      properties:
        manualReroute:
          $ref: '#/components/schemas/GlobalManualRerouteConfiguration'
        defaultPrice:
          default: 10
          description: Default price which is used if no price exists in order or listings
          type: number
        routingTimeout:
          deprecated: true
          default: 8
          description: >-
            This part of the API is deprecated. For details please check the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />@deprecated Default amount of hours after which a routing plan is
            marked not routable. This field is deprecated in favour of
            stopRoutingAttemptsAfterTime
          type: number
        stopRoutingAttemptsAfterTime:
          default: PT8H
          description: >-
            Default amount of time in ISO 8601 duration format after which a
            routing plan is marked not routable. The duration need to be a
            multiple of 60 seconds.
          type: string
          pattern: ^P(?:(\d+W)|(\d+Y)?(\d+M)?(\d+D)?(?:T(\d+H)?(\d+M)?(\d+S)?)?)$
        fallbackFacilityConfiguration:
          $ref: '#/components/schemas/FallbackFacilityConfiguration'
      required:
        - defaultPrice
      type: object
      title: GlobalRoutingConfiguration
    ModifyFenceAction:
      title: ModifyFenceAction
      description: Action to Modify a Fence.
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - properties:
            action:
              description: Use value 'ModifyFence', because you want to modify a fence.
              enum:
                - ModifyFence
              type: string
            active:
              type: boolean
            id:
              type: string
            activeMode:
              $ref: '#/components/schemas/FenceMode'
          required:
            - action
            - id
          type: object
      xml:
        name: ModifyFenceAction
    ModifyGlobalRoutingConfigurationAction:
      title: ModifyGlobalRoutingConfigurationAction
      description: Action to Modify the Global Routing Configuration.
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - properties:
            action:
              description: >-
                Use value 'ModifyGlobalRoutingConfiguration', because you want
                to modify global routing configuration.
              enum:
                - ModifyGlobalRoutingConfiguration
              type: string
            defaultPrice:
              default: 10
              description: >-
                Default price which is used if no price exists in order or
                listings
              type: number
            manualRerouteConfiguration:
              $ref: '#/components/schemas/GlobalManualRerouteConfiguration'
            routingTimeout:
              deprecated: true
              default: 8
              description: >-
                This part of the API is deprecated. For details please check the
                <a
                href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
                target="_blank">api-release-life-cycle documentation</a>.<br
                /><br />@deprecated Default amount of hours after which a
                routing plan is marked not routable. This field is deprecated in
                favour of stopRoutingAttemptsAfterTime
              type: number
            stopRoutingAttemptsAfterTime:
              default: PT8H
              description: >-
                Default amount of time in ISO 8601 duration format after which a
                routing plan is marked not routable. The duration need to be a
                multiple of 60 seconds.
              type: string
              pattern: ^P(?:(\d+W)|(\d+Y)?(\d+M)?(\d+D)?(?:T(\d+H)?(\d+M)?(\d+S)?)?)$
            fallbackFacilityConfiguration:
              $ref: '#/components/schemas/FallbackFacilityConfigurationForPatch'
          required:
            - action
          type: object
    ModifyOrderSplitAction:
      title: ModifyOrderSplitAction
      description: Action to Modify the Order Split Configuration.
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - properties:
            action:
              description: >-
                Use value 'ModifyOrderSplit', because you want to modify the
                configuration for the an order split.
              enum:
                - ModifyOrderSplit
              type: string
            active:
              default: false
              type: boolean
            shouldUseWaitingRoomForPreBackOrderItems:
              default: false
              type: boolean
            activeForSameDay:
              default: false
              type: boolean
            fixedCountConfiguration:
              $ref: '#/components/schemas/FixedCountConfiguration'
            orderSplitType:
              $ref: '#/components/schemas/OrderSplitType'
          required:
            - action
          type: object
      xml:
        name: ModifyOrderSplitAction
    ModifyRatingAction:
      title: ModifyRatingAction
      description: Action to Modify a Rating.
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - properties:
            action:
              description: Use value 'ModifyRating', because you want to modify a rating.
              enum:
                - ModifyRating
              type: string
            active:
              type: boolean
            description:
              type: string
            id:
              type: string
            maxPenalty:
              example: 100
              type: number
              minimum: 0
            name:
              type: string
          required:
            - action
            - id
          type: object
      xml:
        name: ModifyRatingAction
    ModifyRoutingPlanAction:
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: >-
                Use value 'ModifyRoutingPlan', because you want to modify a
                routing plan
              enum:
                - ModifyRoutingPlan
              type: string
            facilityRef:
              description: >-
                The id of the facility reference. The given ID has to be present
                in the system.
              example: Esb20gpHBL94X5NdMp3C
              type: string
            status:
              $ref: '#/components/schemas/RoutingPlanStatus'
          required:
            - action
          type: object
      xml:
        name: ModifyRoutingPlanAction
      title: ModifyRoutingPlanAction
      description: ModifyRoutingPlanAction
    ToolkitOperatorType:
      description: |-
        Type of operator used for a toolkit fence or rating:
          * `TAG_EQUALS`- the entity2 should have a tag with the same id as the entity1 and the value is dynamically matched
          * `VALUE_EQUALS`- compares the tag of entity1 with the tag of entity2 attending to the configured rule and returns true if it does match
          * `VALUE_NOT_EQUALS`- compares the tag of entity1 with the tag of entity2 attending to the configured rule and returns true if it does not match
      enum:
        - TAG_EQUALS
        - VALUE_EQUALS
        - VALUE_NOT_EQUALS
      type: string
      xml:
        name: ToolkitOperatorType
      title: ToolkitOperatorType
    ToolkitAllowedEntities:
      description: |-
        The entities that can be compared by the toolkit fence or rating
          * `ORDER`
          * `FACILITY`
          * `CARRIERCONNECTION`
          * `LISTING`
      enum:
        - ORDER
        - FACILITY
        - CARRIERCONNECTION
        - LISTING
      type: string
      xml:
        name: ToolkitAllowedEntities
      title: ToolkitAllowedEntities
    ToolkitFenceForCreation:
      properties:
        name:
          description: The name of the fence.
          example: CustomFence
          type: string
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        description:
          description: The description of this fence.
          example: Some text that describes what the fence does.
          type: string
        descriptionLocalized:
          $ref: '#/components/schemas/LocaleString'
        active:
          default: false
          description: Indicates whether this fence is active or not.
          type: boolean
        order:
          description: Order in which this fence is executed
          example: 1
          type: integer
        entity1:
          $ref: '#/components/schemas/ToolkitAllowedEntities'
        entity2:
          $ref: '#/components/schemas/ToolkitAllowedEntities'
        rule:
          $ref: '#/components/schemas/ToolkitRule'
        comparisonRule:
          $ref: '#/components/schemas/ToolkitComparisonRule'
      required:
        - name
        - nameLocalized
        - active
        - order
        - entity1
        - entity2
      type: object
      xml:
        name: ToolkitFenceForCreation
      title: ToolkitFenceForCreation
      description: ToolkitFenceForCreation
    ToolkitFenceForModification:
      allOf:
        - $ref: '#/components/schemas/ToolkitFenceForCreation'
      properties:
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
      type: object
      xml:
        name: ToolkitFenceForModification
      title: ToolkitFenceForModification
      description: ToolkitFenceForModification
    ToolkitFence:
      allOf:
        - $ref: '#/components/schemas/ToolkitFenceForModification'
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        id:
          description: The id of the toolkit fence
          example: LGMl2DuvPnfPoSHhYFOm
          type: string
      required:
        - id
      type: object
      xml:
        name: ToolkitFence
      title: ToolkitFence
      description: ToolkitFence
    ToolkitFencesTransporter:
      properties:
        fences:
          items:
            $ref: '#/components/schemas/ToolkitFence'
          type: array
        total:
          description: Total number of found entities for this query
          example: 42
          type: integer
      required:
        - fences
        - total
      type: object
      xml:
        name: ToolkitFenceTransporter
      title: ToolkitFencesTransporter
      description: ToolkitFencesTransporter
    ToolkitRatingForCreation:
      properties:
        name:
          description: The name of the rating
          example: CustomRating
          type: string
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        description:
          description: The description of this rating
          example: Some text that describes what the rating does.
          type: string
        descriptionLocalized:
          $ref: '#/components/schemas/LocaleString'
        active:
          default: false
          description: Indicates whether this fence is active or not
          type: boolean
        entity1:
          $ref: '#/components/schemas/ToolkitAllowedEntities'
        entity2:
          $ref: '#/components/schemas/ToolkitAllowedEntities'
        rule:
          $ref: '#/components/schemas/ToolkitRule'
        comparisonRule:
          $ref: '#/components/schemas/ToolkitComparisonRule'
        maxPenalty:
          type: integer
          example: 100
          description: The maximum penalty this rating can have
      required:
        - name
        - nameLocalized
        - active
        - entity1
        - entity2
        - maxPenalty
      type: object
      xml:
        name: ToolkitRatingForCreation
      title: ToolkitRatingForCreation
      description: ToolkitRatingForCreation
    ToolkitRatingForModification:
      allOf:
        - $ref: '#/components/schemas/ToolkitRatingForCreation'
      properties:
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
      type: object
      xml:
        name: ToolkitRatingForModification
      title: ToolkitRatingForModification
      description: ToolkitRatingForModification
    ToolkitRating:
      allOf:
        - $ref: '#/components/schemas/ToolkitRatingForModification'
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        id:
          description: The id of the toolkit rating
          example: LGMl2DuvPnfPoSHhYFOm
          type: string
      required:
        - id
      type: object
      xml:
        name: ToolkitRating
      title: ToolkitRating
      description: ToolkitRating
    ToolkitRatingTransporter:
      properties:
        ratings:
          items:
            $ref: '#/components/schemas/ToolkitRating'
          type: array
        total:
          description: Total number of entities found for this query
          example: 42
          type: integer
      required:
        - ratings
        - total
      type: object
      xml:
        name: ToolkitRatingTransporter
      title: ToolkitRatingTransporter
      description: ToolkitRatingTransporter
    RoutingStrategyTransporter:
      properties:
        routingStrategies:
          items:
            $ref: '#/components/schemas/RoutingStrategy'
          type: array
        total:
          description: Total number of entities found for this query
          example: 42
          type: integer
      required:
        - routingStrategies
        - total
      type: object
      xml:
        name: RoutingStrategyTransporter
      title: RoutingStrategyTransporter
      description: RoutingStrategyTransporter
    ToolkitEntityOperatorType:
      description: The possible operator types that can be used on given entities
      enum:
        - VALUE_EQUALS
        - VALUE_NOT_EQUALS
        - ANY_VALUE_EQUALS
        - ANY_VALUE_GREATER_EQUALS
        - ANY_VALUE_GREATER_THAN
        - ANY_VALUE_LESS_EQUALS
        - ANY_VALUE_LESS_THAN
        - ANY_VALUE_CONTAINS
        - ANY_VALUE_NOT_CONTAINS
        - EVERY_VALUE_EQUALS
        - EVERY_VALUE_GREATER_EQUALS
        - EVERY_VALUE_GREATER_THAN
        - EVERY_VALUE_LESS_EQUALS
        - EVERY_VALUE_LESS_THAN
        - EVERY_VALUE_CONTAINS
        - EVERY_VALUE_NOT_CONTAINS
        - NO_VALUE_EQUALS
        - NO_VALUE_GREATER_EQUALS
        - NO_VALUE_GREATER_THAN
        - NO_VALUE_LESS_EQUALS
        - NO_VALUE_LESS_THAN
        - NO_VALUE_CONTAINS
        - NO_VALUE_NOT_CONTAINS
        - VALUE_CONTAINS
        - VALUE_NOT_CONTAINS
        - GREATER_THAN
        - GREATER_EQUALS
        - LESS_THAN
        - LESS_EQUALS
      type: string
      xml:
        name: ToolkitEntityOperatorType
      title: ToolkitEntityOperatorType
    ToolkitTransformationType:
      description: >-
        The transformations available to apply on the entity property value
        before a predicate is evaluated
      enum:
        - SUBSTRING
        - COUNT
        - SUM
        - LAST
      type: string
      xml:
        name: ToolkitTransformationType
      title: ToolkitTransformationType
    ToolkitRuleOperatorType:
      description: >-
        The type of the rule operator applied to the results of evaluating the
        left predicates and the right predicates
      enum:
        - EQUALS
      type: string
      xml:
        name: ToolkitTransformationType
      title: ToolkitRuleOperatorType
    ToolkitRuleComparisonOperatorType:
      description: >-
        The type of the rule operator applied to the results of evaluating the
        left predicates and the right predicates
      enum:
        - ALL_MATCHES
        - LEFT_CONTAINS_RIGHT
        - RIGHT_CONTAINS_LEFT
      type: string
      xml:
        name: ToolkitTransformationType
      title: ToolkitRuleComparisonOperatorType
    ToolkitPredicate:
      description: >-
        The predicate for a Toolkit V2 Fence that defines how conditions are
        constructed
      properties:
        propertyPath:
          type: string
          minLength: 1
        entityOperator:
          $ref: '#/components/schemas/ToolkitEntityOperatorType'
        transformation:
          $ref: '#/components/schemas/ToolkitTransformationType'
        transformationArgs:
          type: array
          items:
            oneOf:
              - type: string
              - type: number
              - type: boolean
        expectedValue:
          oneOf:
            - type: string
            - type: number
            - type: boolean
      required:
        - propertyPath
        - entityOperator
      type: object
      xml:
        name: ToolkitPredicate
      title: ToolkitPredicate
    ToolkitComparisonPredicate:
      description: >-
        The predicate for a Toolkit V2 Fence that defines how conditions are
        constructed
      properties:
        rightPropertyPath:
          type: string
          minLength: 1
        leftPropertyPath:
          type: string
          minLength: 1
        entityOperator:
          $ref: '#/components/schemas/ToolkitRuleComparisonOperatorType'
        rightTransformation:
          $ref: '#/components/schemas/ToolkitTransformationType'
        rightTransformationArgs:
          type: array
          items:
            oneOf:
              - type: string
              - type: number
              - type: boolean
        leftTransformation:
          $ref: '#/components/schemas/ToolkitTransformationType'
        leftTransformationArgs:
          type: array
          items:
            oneOf:
              - type: string
              - type: number
              - type: boolean
      required:
        - rightPropertyPath
        - leftPropertyPath
        - entityOperator
      type: object
      xml:
        name: ToolkitComparisonPredicate
      title: ToolkitComparisonPredicate
    ToolkitRuleScope:
      enum:
        - WHOLE_ENTITY
        - LINE_ITEM
      type: string
      xml:
        name: ToolkitRuleScope
      title: ToolkitRuleScope
      description: ToolkitRuleScope
    ToolkitRule:
      description: >-
        The rule, containing the left predicates and the right predicates, that
        will be evaluated applying a RuleOperator
      properties:
        operator:
          $ref: '#/components/schemas/ToolkitRuleOperatorType'
        leftPart:
          $ref: '#/components/schemas/ToolkitRulePart'
        rightPart:
          $ref: '#/components/schemas/ToolkitRulePart'
        evaluationScope:
          $ref: '#/components/schemas/ToolkitRuleScope'
      required:
        - operator
        - leftPart
        - rightPart
      type: object
      xml:
        name: ToolkitRule
      title: ToolkitRule
    ToolkitComparisonRule:
      description: >-
        The rule, comparing the left and right path values, that will be
        evaluated applying a RuleOperator
      properties:
        predicateConnector:
          $ref: '#/components/schemas/ToolkitPredicateConnector'
        predicates:
          type: array
          items:
            $ref: '#/components/schemas/ToolkitComparisonPredicate'
          minItems: 1
        evaluationScope:
          $ref: '#/components/schemas/ToolkitRuleScope'
      required:
        - predicates
      type: object
      xml:
        name: ToolkitRule
      title: ToolkitComparisonRule
    ToolkitRulePart:
      additionalProperties: false
      description: >-
        One half of the rule, containing either the left or right predicates and
        booleanOperator.
      properties:
        predicateConnector:
          $ref: '#/components/schemas/ToolkitPredicateConnector'
        predicates:
          type: array
          items:
            $ref: '#/components/schemas/ToolkitPredicate'
          minItems: 1
      required:
        - predicates
      type: object
      xml:
        name: ToolkitRulePart
      title: ToolkitRulePart
    ToolkitPredicateConnector:
      description: The allowed operators for connecting multiple predicates
      enum:
        - OR
        - AND
      type: string
      xml:
        name: ToolkitPredicateConnector
      title: ToolkitPredicateConnector
    DecisionLogRef:
      properties:
        routingRun:
          type: number
        url:
          description: A reference to the finalizer decision log
          example: /api/routingplans/{routingPlanId}/decisionlogs/{routingRun}
          type: string
      required:
        - url
        - finalizeRun
      type: object
      xml:
        name: DecisionLogRef
      title: DecisionLogRef
      description: DecisionLogRef
    OrderCancelationConfiguration:
      additionalProperties: false
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />This configuration is to define specific rules for canceling orders
        such as the forced cancelation.
      properties:
        created:
          description: >-
            The date this order was created at the platform. This value is
            generated by the service.
          example: '2020-02-03T08:45:51.525Z'
          format: date-time
          type: string
        id:
          type: string
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
        allowForceCancelOrder:
          type: boolean
      required:
        - version
        - allowForceCancelOrder
      type: object
      title: OrderCancelationConfiguration
      x-badges:
        - color: orange
          label: BETA
    RoutingConfiguration:
      additionalProperties: false
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />This is the configuration for the distributing order management
        system. By changing the configuration you are able to change the
        behavior of the routing of orders henceforth.
      properties:
        created:
          description: >-
            The date this order was created at the platform. This value is
            generated by the service.
          example: '2020-02-03T08:45:51.525Z'
          format: date-time
          type: string
        globalRoutingConfiguration:
          $ref: '#/components/schemas/GlobalRoutingConfiguration'
        lastModified:
          description: >-
            The date this order was modified last. This value is generated by
            the service.
          example: '2020-02-03T09:45:51.525Z'
          format: date-time
          type: string
        prioritizationRules:
          deprecated: true
          description: >-
            This part of the API is deprecated. For details please check the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />@deprecated Contains the routing configuration for prioritization
            & routing for the whole tenant
          items:
            $ref: '#/components/schemas/PrioritizationRule'
          type: array
        routingRule:
          $ref: '#/components/schemas/RoutingRule'
        timingMode:
          $ref: '#/components/schemas/RoutingConfigurationTiming'
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
        id:
          type: string
      required:
        - version
        - prioritizationRules
        - routingRule
        - globalRoutingConfiguration
      type: object
      title: RoutingConfiguration
      x-badges:
        - color: orange
          label: BETA
    RoutingConfigurationTiming:
      description: Configuration for the timing of routing decisions
      properties:
        options:
          type: object
        type:
          $ref: '#/components/schemas/RoutingConfigurationTimingType'
      required:
        - type
      type: object
      title: RoutingConfigurationTiming
    RoutingConfigurationTimingType:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />The
        available types for routing timing.
      enum:
        - DIRECT
        - MANUAL
      type: string
      xml:
        name: RoutingConfigurationTimingType
      title: RoutingConfigurationTimingType
      x-badges:
        - color: orange
          label: BETA
    ModifyPrioritizationAction:
      title: ModifyPrioritizationAction
      description: Action to Modify the Prioritization Configuration.
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - properties:
            action:
              description: >-
                Use value 'ModifyPrioritization', because you want to modify
                prioritization.
              enum:
                - ModifyPrioritization
              type: string
            active:
              type: boolean
            id:
              type: string
            name:
              type: string
          required:
            - action
            - id
          type: object
      xml:
        name: ModifyPrioritizationAction
    ModifyTimingModeAction:
      title: ModifyTimingModeAction
      description: Action to Modify the Timing Mode.
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - properties:
            action:
              description: >-
                Use value 'ModifyTimingMode', because you want to modify a
                timing mode.
              enum:
                - ModifyTimingMode
              type: string
            timingMode:
              $ref: '#/components/schemas/RoutingConfigurationTiming'
          required:
            - action
          type: object
      xml:
        name: ModifyTimingModeAction
    RoutingConfigurationsPatchActions:
      properties:
        actions:
          items:
            anyOf:
              - $ref: '#/components/schemas/ModifyFenceAction'
              - $ref: '#/components/schemas/ModifyRatingAction'
              - $ref: '#/components/schemas/ModifyTimingModeAction'
              - $ref: '#/components/schemas/ModifyOrderSplitAction'
              - $ref: '#/components/schemas/ModifyPrioritizationAction'
              - $ref: '#/components/schemas/ModifyGlobalRoutingConfigurationAction'
          minItems: 1
          type: array
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
        - actions
      type: object
      xml:
        name: RoutingConfigurationsPatchActions
      title: RoutingConfigurationsPatchActions
      description: RoutingConfigurationsPatchActions
    SupplyingFacilityConfiguration:
      properties:
        facilityRef:
          type: string
        deliveryEvents:
          items:
            $ref: '#/components/schemas/DeliveryEvent'
          type: array
      required:
        - facilityRef
        - deliveryEvents
      title: SupplyingFacilityConfiguration
      description: SupplyingFacilityConfiguration
    DeliveryEvent:
      properties:
        deliveryTarget:
          $ref: '#/components/schemas/DeliveryTarget'
        deliveryTrigger:
          enum:
            - DEFAULT
          type: string
      required:
        - deliveryTarget
        - deliveryTrigger
      title: DeliveryEvent
      description: DeliveryEvent
    DeliveryEventTargetAddress:
      type: object
      properties:
        facilityRef:
          type: string
        targetAddress:
          $ref: '#/components/schemas/TargetAddress'
        deliveryEvent:
          $ref: '#/components/schemas/DeliveryEvent'
      required:
        - facilityRef
        - targetAddress
        - deliveryEvent
      title: DeliveryEventTargetAddress
      description: DeliveryEventTargetAddress
    RoutingPlan:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        activeConfig:
          $ref: '#/components/schemas/RoutingStrategyNodeConfig'
        transfers:
          items:
            $ref: '#/components/schemas/Transfer'
          type: array
        expectedLineItems:
          items:
            $ref: '#/components/schemas/ExpectedLineItem'
          type: array
        deliveryPreferences:
          $ref: '#/components/schemas/DeliveryPreferences'
        anonymized:
          description: Indicates if gdpr related data was anonymized
          example: false
          type: boolean
        decisionLogs:
          items:
            $ref: '#/components/schemas/DecisionLogRef'
          type: array
        facilityBlackList:
          items:
            description: Contains a list of facilities to ignore when rerouting happens.
            type: string
          type: array
        facilityRef:
          description: >-
            The id of the facility reference. The given ID has to be present in
            the system.
          example: Esb20gpHBL94X5NdMp3C
          type: string
        finalizeRun:
          description: The iteration through the finalizer process
          example: 5
          minimum: 0
          type: number
        firstRoutingAttempt:
          description: The date of the first routing attempt.
          example: '2020-02-03T08:45:50.525Z'
          format: date-time
          type: string
        id:
          type: string
        orderDate:
          description: The date this order was created at the supplying system.
          example: '2020-02-03T08:45:50.525Z'
          format: date-time
          type: string
        orderLineItems:
          items:
            $ref: '#/components/schemas/RoutingPlanLineItem'
          type: array
        orderRef:
          description: >-
            The id of the order that lead to the creation of this pickjob. Can
            be empty / not present when the pickjob was created without having
            an order.
          example: LGMl2DuvPnfPoSHhYFOm
          type: string
        parentRoutingPlanRef:
          type: string
        childRoutingPlanRef:
          type: string
        predecessorRerouteRoutingPlanRefs:
          description: Refs of the predecessor routing plans, in the case of a reroute.
          type: array
          items:
            type: string
        successorRerouteRoutingPlanRefs:
          description: Refs of the succeeding routing plans, in the case of a reroute.
          type: array
          items:
            type: string
        pickJobRef:
          description: The id of the pickjob that has been created from the routing plan.
          example: Esb20gpHBL94X5NdMp3C
          type: string
        priority:
          description: priority of return plan
          minimum: 0
          type: number
        reRouteReason:
          $ref: '#/components/schemas/RerouteReason'
        rerouteDescription:
          $ref: '#/components/schemas/RerouteDescription'
        reRoutedFacilityRef:
          description: The id of the facility the order was rerouted from.
          example: 1DEYZgmfAcXRVYv6KEka36
          type: string
        reRoutedPickJobRef:
          description: The id of the original pickjob that was rerouted.
          example: Eghhj20878dhbd989NdMp3C
          type: string
        reRoutedRoutingPlanRef:
          description: The id of the original routingplan that was rerouted.
          example: Eghhj20878dhbd989NdMp3C
          type: string
        routingRun:
          description: The iteration through the routing process
          type: number
        runType:
          description: The rule type of a decision log entry
          enum:
            - DEFAULT
            - REROUTE
            - ORDERSPLIT_ON_SHORTPICK
            - MANUAL_ASSIGNMENT
            - PROCESS_MANUALASSIGNMENT
            - REACTIVATION
          type: string
        splitCount:
          default: 0
          description: >-
            The number of order splits that happened before this routingplan was
            created
          example: 5
          minimum: 0
          type: number
        status:
          $ref: '#/components/schemas/RoutingPlanStatus'
        statusHistory:
          deprecated: true
          description: >-
            This part of the API is deprecated. For details please check the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />@deprecated
             For more detailed information, use the History field. Saves all status changes when creating or updating a routing plan
          type: array
          items:
            $ref: '#/components/schemas/RoutingPlanStatus'
        history:
          type: array
          items:
            $ref: '#/components/schemas/RoutingPlanHistory'
        statusReasons:
          type: array
          items:
            $ref: '#/components/schemas/RoutingPlanStatusReason'
        consolidatedStatus:
          $ref: '#/components/schemas/ConsolidatedRoutingPlanStatus'
        targetAddress:
          $ref: '#/components/schemas/TargetAddress'
        targetAddressesByDeliveryEvent:
          type: array
          items:
            $ref: '#/components/schemas/DeliveryEventTargetAddress'
        processId:
          description: >-
            Id of the global process related to this entity. For example used
            for starting the GDPR process and others.
          type: string
        targetTimeBaseDate:
          description: This date is used as base/start to calculate the target time date.
          example: '2020-02-03T08:45:50.525Z'
          format: date-time
          type: string
        customServices:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/CustomServiceReference'
        latestPickingStart:
          $ref: '#/components/schemas/LatestPickingStart'
        earliestPickingStart:
          $ref: '#/components/schemas/EarliestPickingStart'
        provisioningTime:
          description: The point in time by which the order is supposed to be provisioned.
          example: '2020-02-03T08:45:50.525Z'
          format: date-time
          type: string
      required:
        - id
        - orderDate
        - created
        - lastModified
        - version
        - orderRef
        - priority
        - status
        - consolidatedStatus
        - decisionLogs
        - routingRun
        - finalizeRun
        - processId
        - predecessorRerouteRoutingPlanRefs
        - successorRerouteRoutingPlanRefs
      type: object
      title: RoutingPlan
      description: RoutingPlan
    PickingStartBase:
      type: object
      properties:
        targetTime:
          example: '2020-02-03T08:45:50.525Z'
          format: date-time
          type: string
        carrierRef:
          type: string
      required:
        - carrierRef
        - targetTime
      title: PickingStartBase
      description: PickingStartBase
    LatestPickingStart:
      allOf:
        - $ref: '#/components/schemas/PickingStartBase'
      type: object
      properties:
        latestPickingStartDate:
          example: '2020-02-03T08:45:50.525Z'
          format: date-time
          type: string
      required:
        - latestPickingStartDate
      title: LatestPickingStart
      description: LatestPickingStart
    EarliestPickingStart:
      allOf:
        - $ref: '#/components/schemas/PickingStartBase'
      type: object
      properties:
        earliestPickingStartDate:
          example: '2020-02-03T08:45:50.525Z'
          format: date-time
          type: string
      required:
        - earliestPickingStartDate
      title: EarliestPickingStart
      description: EarliestPickingStart
    LatestPickingStartForDecisionLog:
      type: object
      properties:
        latestPickingStartDate:
          example: '2020-02-03T08:45:50.525Z'
          format: date-time
          type: string
        targetTime:
          example: '2020-02-03T08:45:50.525Z'
          format: date-time
          type: string
        carrierRef:
          type: string
        lpsCalculationHints:
          description: '@deprecated, use hints'
          type: array
          items:
            type: string
      title: LatestPickingStartForDecisionLog
      description: LatestPickingStartForDecisionLog
    Transfer:
      properties:
        transferId:
          type: string
        transferType:
          type: string
          enum:
            - SUPPLIER
            - RECEIVER
      required:
        - transferId
        - transferType
      title: Transfer
      description: Transfer
    ExpectedLineItem:
      allOf:
        - $ref: '#/components/schemas/OrderLineItem'
      properties:
        transferId:
          type: string
        facilityRef:
          type: string
      required:
        - facilityRef
        - transferId
      title: ExpectedLineItem
      description: ExpectedLineItem
    RoutingPlanStatusReason:
      title: RoutingPlanStatusReason
      description: Obsolete Status Reason
      properties:
        reason:
          $ref: '#/components/schemas/RoutingPlanStatusReasonReason'
        status:
          $ref: '#/components/schemas/RoutingPlanStatusReasonStatus'
      required:
        - reason
        - status
    RoutingPlanStatusReasonReason:
      type: string
      enum:
        - REROUTE_AFTER_SHORTPICK
        - MANUALLY_REROUTED
        - MANUALLY_ASSIGNED
      title: RoutingPlanStatusReasonReason
      description: RoutingPlanStatusReasonReason
    RoutingPlanStatusReasonStatus:
      type: string
      enum:
        - OBSOLETE
      title: RoutingPlanStatusReasonStatus
      description: RoutingPlanStatusReasonStatus
    CollectDelivery:
      properties:
        facilityRef:
          description: >-
            Reference to the facility where the consumer expects to collect the
            items
          type: string
        paid:
          default: false
          description: Indicates if the order is already paid.
          type: boolean
        supplyingFacilities:
          description: DEPRECATED
          items:
            description: Reference of a Facility
            example: 928f3730-bc48-4d85-b83f-3fd86b776178
            type: string
          type: array
        supplyingFacilitiesConfigurations:
          description: >-
            References of facility that could supply contents of the order to
            another facility with specific configuration of its usage
          items:
            $ref: '#/components/schemas/SupplyingFacilityConfiguration'
          type: array
        provisioningTime:
          description: The point in time by which the order is supposed to be provisioned.
          example: '2020-02-03T08:45:50.525Z'
          format: date-time
          type: string
      required:
        - facilityRef
      type: object
      title: CollectDelivery
      description: CollectDelivery
    PreferredCarrier:
      description: Keys of the preferred carriers to handle out the order
      type: string
      title: PreferredCarrier
    PreferredCarrierWithProduct:
      additionalProperties: false
      properties:
        carrierKey:
          type: string
          example: DPD
        carrierProduct:
          type: string
          example: WORLDWIDE
        carrierServices:
          type: array
          items:
            $ref: '#/components/schemas/CarrierServices'
      required:
        - carrierKey
      title: PreferredCarrierWithProduct
      description: PreferredCarrierWithProduct
    DeliveryReservationMode:
      enum:
        - SCHEDULED
        - ASAP
        - ALAP
      title: DeliveryReservationMode
      description: DeliveryReservationMode
    DeliveryReservationPreferences:
      properties:
        mode:
          $ref: '#/components/schemas/DeliveryReservationMode'
        reservationTime:
          example: '2020-02-03T09:45:51.525Z'
          format: date-time
          type: string
      type: object
      required:
        - mode
      title: DeliveryReservationPreferences
      description: DeliveryReservationPreferences
    DeliveryPreferences:
      properties:
        collect:
          items:
            $ref: '#/components/schemas/CollectDelivery'
          maxItems: 1
          type: array
        shipping:
          $ref: '#/components/schemas/DeliveryPreferencesShipping'
        supplyingFacilities:
          description: '@deprecated Use supplyingFacilities under collect'
          items:
            description: Reference of a Facility
            example: 928f3730-bc48-4d85-b83f-3fd86b776178
            type: string
          type: array
        targetTime:
          description: At which time the result is expected.
          example: '2020-02-03T09:45:51.525Z'
          format: date-time
          type: string
        reservationPreferences:
          $ref: '#/components/schemas/DeliveryReservationPreferences'
      type: object
      title: DeliveryPreferences
      description: DeliveryPreferences
    DeliveryPreferencesShipping:
      properties:
        preferredCarriers:
          items:
            $ref: '#/components/schemas/PreferredCarrier'
          type: array
        preferredCarriersWithProduct:
          items:
            $ref: '#/components/schemas/PreferredCarrierWithProduct'
          type: array
        preselectedFacilities:
          items:
            $ref: '#/components/schemas/PreselectedFacility'
          type: array
        serviceLevel:
          description: >-
            DELIVERY: The parcel will reach the recipient according to the cycle
            time of the carrier, typically 1-3 days when shipping nationaly.
            SAMEDAY: The parcel will reach the recipient the same day when
            ordering.
          enum:
            - DELIVERY
            - SAMEDAY
          type: string
        carrierProductCategory:
          $ref: '#/components/schemas/CarrierProductCategory'
        desiredDeliveryTime:
          example: '2020-02-03T09:45:51.525Z'
          format: date-time
          type: string
      type: object
      title: DeliveryPreferencesShipping
      description: DeliveryPreferencesShipping
    ArticleItem:
      additionalProperties: false
      properties:
        tenantArticleRef:
          type: string
        quantity:
          minimum: 1
          type: number
      type: object
      required:
        - quantity
        - tenantArticleRef
      title: ArticleItem
      description: ArticleItem
    RoutingStrategyActionsParameter:
      oneOf:
        - $ref: '#/components/schemas/RoutingStrategyActivateActionParameter'
        - $ref: '#/components/schemas/RoutingStrategyCreateCopyActionParameter'
      title: RoutingStrategyActionsParameter
      description: RoutingStrategyActionsParameter
    RoutingStrategyEvaluationResult:
      type: object
      properties:
        evaluatedPath:
          type: array
          items:
            $ref: '#/components/schemas/RoutingStrategyPathElement'
        evaluatedConfig:
          $ref: '#/components/schemas/RoutingStrategyNodeConfig'
      required:
        - evaluatedConfig
        - evaluatedPath
      title: RoutingStrategyEvaluationResult
      description: RoutingStrategyEvaluationResult
    RoutingStrategyPathElement:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/RoutingStrategyPathElementType'
        ref:
          type: string
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        evaluationResult:
          $ref: '#/components/schemas/RoutingStrategyEvaluationResultType'
      required:
        - type
        - ref
        - evaluationResult
        - nameLocalized
      title: RoutingStrategyPathElement
      description: RoutingStrategyPathElement
    RoutingStrategyPathElementType:
      type: string
      enum:
        - CONDITION
        - NODE
      title: RoutingStrategyPathElementType
      description: RoutingStrategyPathElementType
    RoutingStrategyEvaluationResultType:
      type: string
      enum:
        - NODE_INACTIVE
        - NODE_ACTIVE
        - CONDITION_INACTIVE
        - CONDITION_FALSE
        - CONDITION_TRUE
      title: RoutingStrategyEvaluationResultType
      description: RoutingStrategyEvaluationResultType
    AbstractRoutingStrategyActionsParameter:
      discriminator:
        propertyName: name
      properties:
        name:
          type: string
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
      required:
        - name
        - version
      title: AbstractRoutingStrategyActionsParameter
      description: AbstractRoutingStrategyActionsParameter
    RoutingStrategyActivateActionParameter:
      title: RoutingStrategyActivateActionParameter
      description: Action to activate a routing strategy.
      allOf:
        - $ref: '#/components/schemas/AbstractRoutingStrategyActionsParameter'
      properties:
        name:
          enum:
            - ACTIVATE
          type: string
      required:
        - name
        - version
    RoutingStrategyCreateCopyActionParameter:
      title: RoutingStrategyCreateCopyActionParameter
      description: Action to create a copy of a routing strategy.
      allOf:
        - $ref: '#/components/schemas/AbstractRoutingStrategyActionsParameter'
      properties:
        name:
          enum:
            - COPY
          type: string
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
      required:
        - name
        - nameLocalized
        - version
    OrderActionsParameter:
      oneOf:
        - $ref: '#/components/schemas/OrderUnlockActionParameter'
        - $ref: '#/components/schemas/OrderCancelActionParameter'
        - $ref: '#/components/schemas/OrderForceCancelActionParameter'
        - $ref: '#/components/schemas/PromiseConfirmActionParameter'
        - $ref: '#/components/schemas/PromiseExtendActionParameter'
        - $ref: '#/components/schemas/OrderConsumerAddressChangeActionParameter'
        - $ref: '#/components/schemas/OrderConsumerAddressesReplaceActionParameter'
      title: OrderActionsParameter
      description: OrderActionsParameter
    AbstractOrderActionsParameter:
      discriminator:
        propertyName: name
      properties:
        name:
          type: string
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
      required:
        - name
        - version
      title: AbstractOrderActionsParameter
      description: AbstractOrderActionsParameter
    OrderLineItemActionsParameter:
      type: object
      oneOf:
        - $ref: '#/components/schemas/OrderLineItemCustomAttributesUpdateParameter'
      title: OrderLineItemActionsParameter
      description: OrderLineItemActionsParameter
    AbstractOrderLineItemActionsParameter:
      discriminator:
        propertyName: name
      properties:
        name:
          type: string
        version:
          description: Version of the order to be changed
          minimum: 0
          type: integer
      required:
        - name
        - version
      title: AbstractOrderLineItemActionsParameter
      description: AbstractOrderLineItemActionsParameter
    OrderUnlockActionParameter:
      title: OrderUnlockActionParameter
      description: Action to unlock an order.
      allOf:
        - $ref: '#/components/schemas/AbstractOrderActionsParameter'
      properties:
        name:
          enum:
            - UNLOCK
          type: string
        targetTime:
          type: string
          example: '2025-01-15T00:00:00.000Z'
          format: date-time
          description: Time to be set as a targetTime for the devlivery preferences.
      required:
        - name
        - version
    OrderCancelActionParameter:
      title: OrderCancelActionParameter
      description: Action to cancel an order.
      allOf:
        - $ref: '#/components/schemas/AbstractOrderActionsParameter'
      properties:
        cancelationReasonId:
          description: ID of the cancelation reason
          type: string
        name:
          enum:
            - CANCEL
          type: string
      required:
        - name
        - version
    OrderForceCancelActionParameter:
      title: OrderForceCancelActionParameter
      description: Action to force cancel an order.
      allOf:
        - $ref: '#/components/schemas/AbstractOrderActionsParameter'
      properties:
        name:
          enum:
            - FORCE_CANCEL
          type: string
      required:
        - name
        - version
    OrderConsumerAddressChangeActionParameter:
      title: OrderConsumerAddressChangeActionParameter
      description: Action to change a consumer address of an order.
      allOf:
        - $ref: '#/components/schemas/AbstractOrderActionsParameter'
      properties:
        name:
          enum:
            - CHANGE_CONSUMER_ADDRESS
          type: string
        consumerAddress:
          $ref: '#/components/schemas/ConsumerAddress'
        addressType:
          $ref: '#/components/schemas/AddressType'
      required:
        - name
        - version
        - consumerAddress
        - addressType
    OrderConsumerAddressesReplaceActionParameter:
      title: OrderConsumerAddressesReplaceActionParameter
      description: Action to replace a consumer address of an order.
      allOf:
        - $ref: '#/components/schemas/AbstractOrderActionsParameter'
      properties:
        name:
          enum:
            - REPLACE_CONSUMER_ADDRESSES
          type: string
        consumerAddresses:
          type: array
          items:
            $ref: '#/components/schemas/ConsumerAddress'
      required:
        - name
        - version
        - consumerAddresses
    OrderLineItemCustomAttributesUpdateParameter:
      title: OrderLineItemCustomAttributesUpdateParameter
      description: Action to update custom attributes of an order.
      allOf:
        - $ref: '#/components/schemas/AbstractOrderLineItemActionsParameter'
      properties:
        name:
          enum:
            - UPDATE_CUSTOM_ATTRIBUTES
          type: string
        customAttributes:
          description: >-
            Attributes that can be added to the orderline. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the informations carried here. If no customAttributes exist
            yet, they will be created for this line item.
          type: object
      required:
        - name
        - version
        - customAttributes
    PromiseConfirmActionParameter:
      title: PromiseConfirmActionParameter
      description: Action to confirm a promise.
      allOf:
        - $ref: '#/components/schemas/AbstractOrderActionsParameter'
      properties:
        name:
          enum:
            - CONFIRM_PROMISE
          type: string
      required:
        - name
        - version
    PromiseExtendActionParameter:
      title: PromiseExtendActionParameter
      description: Action to extend a promise.
      allOf:
        - $ref: '#/components/schemas/AbstractOrderActionsParameter'
      properties:
        name:
          enum:
            - EXTEND_PROMISE
          type: string
      required:
        - name
        - version
    ManualRerouteConfiguration:
      deprecated: true
      description: >-
        @deprecated This config property is deprecated since 26/02/24. Use
        GlobalManualRerouteConfiguration instead.
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        active:
          type: boolean
        id:
          type: string
      required:
        - active
      type: object
      title: ManualRerouteConfiguration
    RerouteTimeTriggeredConfiguration:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      required:
        - clickAndCollectReroute
        - shipFromStoreDeliveryReroute
        - shipFromStoreSamedayReroute
      properties:
        clickAndCollectReroute:
          $ref: '#/components/schemas/RerouteConfiguration'
        shipFromStoreDeliveryReroute:
          $ref: '#/components/schemas/RerouteConfiguration'
        shipFromStoreSamedayReroute:
          $ref: '#/components/schemas/RerouteConfiguration'
        id:
          type: string
      title: RerouteTimeTriggeredConfiguration
      description: RerouteTimeTriggeredConfiguration
    PromisesConfiguration:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      required:
        - invalidAfterTime
      properties:
        invalidAfterTime:
          default: PT8H
          description: >-
            Default amount of time in ISO 8601 duration format after which an
            promised order becomes invalid and is cancelled. The duration need
            to be a multiple of 60 seconds.
          type: string
          pattern: ^P(?:(\d+W)|(\d+Y)?(\d+M)?(\d+D)?(?:T(\d+H)?(\d+M)?(\d+S)?)?)$
        id:
          type: string
      title: PromisesConfiguration
      description: PromisesConfiguration
    CapacityPlanningTimeframeConfiguration:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        days:
          default: 100
          description: >-
            The range in days per facility which defines how many days in the
            future the capacity of the facility can be planned
          example: '240'
          minimum: 1
          type: integer
        id:
          type: string
      required:
        - days
      type: object
      title: CapacityPlanningTimeframeConfiguration
      description: CapacityPlanningTimeframeConfiguration
    RerouteConfiguration:
      required:
        - active
        - rerouteTargetTimeHours
        - rerouteAfterMinutes
      properties:
        active:
          type: boolean
        rerouteTargetTimeHours:
          type: number
          example: '48'
          default: 48
          minimum: 1
          description: >-
            Only pickjobs within the target time window are considered for
            reroute.
        rerouteAfterMinutes:
          type: number
          example: '60'
          default: 1440
          minimum: 5
          description: The amount of minutes after which an automated reroute is executed
        leadTimeBeforeTimeTriggeredReroute:
          type: number
          example: '480'
          description: >-
            How many minutes before a time triggered reroute a notification
            should be sent. Should be smaller than rerouteAfterMinutes
          minimum: 1
        rerouteStartedJobs:
          $ref: '#/components/schemas/RerouteStartedJobsConfiguration'
      title: RerouteConfiguration
      description: RerouteConfiguration
    RerouteStartedJobsConfiguration:
      properties:
        active:
          type: boolean
          description: >-
            If true, the reroute will be executed for jobs that are already
            started.
          example: true
          default: false
        minimumStartedTimeInMinutes:
          type: number
          example: '60'
          description: >-
            The minimum time in minutes that a job must be in a started status
            (eg. PAUSED, IN_PROGRESS) before it should be rerouted. This is to
            ensure that jobs are not rerouted too quickly after they have last
            been modified. Minimum value is 60 minutes.
          minimum: 60
      required:
        - active
      title: RerouteStartedJobsConfiguration
      description: RerouteStartedJobsConfiguration
    CancelationReasonForCreation:
      allOf:
        - $ref: '#/components/schemas/AbstractReasonForCreation'
      type: object
      xml:
        name: CancelationReasonForCreation
      title: CancelationReasonForCreation
      description: CancelationReasonForCreation
    CancelationReason:
      allOf:
        - $ref: '#/components/schemas/AbstractReason'
      properties:
        action:
          enum:
            - CANCELATION
          type: string
      required:
        - action
      type: object
      xml:
        name: CancelationReason
      title: CancelationReason
      description: CancelationReason
    CancelationReasons:
      allOf:
        - $ref: '#/components/schemas/AbstractReasons'
      properties:
        reasons:
          items:
            $ref: '#/components/schemas/CancelationReason'
          type: array
      required:
        - reasons
      type: object
      xml:
        name: CancelationReasons
      title: CancelationReasons
      description: CancelationReasons
    CancelationReasonForModification:
      allOf:
        - $ref: '#/components/schemas/AbstractReasonForModification'
      type: object
      xml:
        name: CancelationReasonForModification
      title: CancelationReasonForModification
      description: CancelationReasonForModification
    RerouteDescriptionForCreation:
      allOf:
        - $ref: '#/components/schemas/AbstractReasonForCreation'
      type: object
      xml:
        name: RerouteDescriptionForCreation
      title: RerouteDescriptionForCreation
      description: RerouteDescriptionForCreation
    RerouteDescriptionForModification:
      allOf:
        - $ref: '#/components/schemas/AbstractReasonForModification'
      type: object
      xml:
        name: RerouteDescriptionForModification
      title: RerouteDescriptionForModification
      description: RerouteDescriptionForModification
    RerouteDescription:
      allOf:
        - $ref: '#/components/schemas/AbstractReason'
      properties:
        action:
          enum:
            - REROUTE
          type: string
      required:
        - action
      type: object
      xml:
        name: RerouteDescription
      title: RerouteDescription
      description: RerouteDescription
    RerouteDescriptions:
      allOf:
        - $ref: '#/components/schemas/AbstractReasons'
      properties:
        rerouteDescriptions:
          items:
            $ref: '#/components/schemas/RerouteDescription'
          type: array
        reasons:
          items:
            $ref: '#/components/schemas/RerouteDescription'
          type: array
      required:
        - reasons
        - rerouteDescriptions
      type: object
      title: RerouteDescriptions
      description: RerouteDescriptions
    CheckoutOptionsDeliveryTimePeriodRequest:
      additionalProperties: false
      type: object
      properties:
        startDate:
          type: string
          example: '2024-06-03T00:00:00.000Z'
          format: date-time
          description: >-
            The start of the evaluated time period. Defaults to "now" (timestamp
            of the request)
          default: now
        endDate:
          type: string
          example: '2024-07-13T00:00:00.000Z'
          format: date-time
          description: >-
            The end of the evaluated time period. Default is the start date + 30
            days. Please note that the maximum time period can not exceed 45
            days.
        basket:
          description: Items, that are considered to be delivered together.
          type: array
          minItems: 1
          maxItems: 50
          items:
            $ref: '#/components/schemas/BasketItem'
        consumerAddress:
          $ref: '#/components/schemas/CheckoutOptionsConsumerAddress'
        deliveryPreferences:
          $ref: '#/components/schemas/DeliveryPreferencesShipping'
        includeCalculationHints:
          description: >-
            Set this flag to true to get additional information about the
            availability of the requested articles
          type: boolean
      required:
        - basket
        - consumerAddress
      title: CheckoutOptionsDeliveryTimePeriodRequest
      description: CheckoutOptionsDeliveryTimePeriodRequest
    CheckoutOptionsDeliveryTimePointRequest:
      additionalProperties: false
      properties:
        desiredDeliveryDate:
          type: string
          example: '2024-06-03T00:00:00.000Z'
          format: date-time
          description: The desired delivery date. (timestamp of the request)
        tenantArticleIds:
          type: array
          items:
            type: string
            description: >-
              The tenant articleIds for which the check is performed. The
              provided items are considered individually.
            example: DE-ZGT-4711
          minItems: 1
          maxItems: 50
        facilities:
          description: Pair of facilityRef and latestPickingStart values
          type: array
          minItems: 1
          maxItems: 5
          items:
            $ref: '#/components/schemas/FacilityRefLatestPickingStartPair'
      required:
        - facilities
        - tenantArticleIds
        - desiredDeliveryDate
      title: CheckoutOptionsDeliveryTimePointRequest
      description: CheckoutOptionsDeliveryTimePointRequest
    CheckoutOptionsDeliveryTimePointResponse:
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/CheckoutOptionsDeliveryTimePointResponseItem'
      required:
        - items
      title: CheckoutOptionsDeliveryTimePointResponse
      description: CheckoutOptionsDeliveryTimePointResponse
    CheckoutOptionsDeliveryTimePointResponseItem:
      properties:
        tenantArticleId:
          type: string
          example: DE-ZGT-4711
        available:
          type: number
          example: 4
        facilityRef:
          type: string
        latestPickingStart:
          example: '2020-02-03T09:45:51.525Z'
          format: date-time
          type: string
      required:
        - tenantArticleId
        - available
        - facilityRef
      title: CheckoutOptionsDeliveryTimePointResponseItem
      description: CheckoutOptionsDeliveryTimePointResponseItem
    BasketItem:
      properties:
        tenantArticleId:
          type: string
          example: DE-ZGT-4711
        quantity:
          type: number
          example: 4
      required:
        - tenantArticleId
        - quantity
      title: BasketItem
      description: BasketItem
    FacilityRefLatestPickingStartPair:
      properties:
        facilityRef:
          type: string
        latestPickingStart:
          example: '2020-02-03T09:45:51.525Z'
          format: date-time
          type: string
      required:
        - facilityRef
        - latestPickingStart
      title: FacilityRefLatestPickingStartPair
      description: FacilityRefLatestPickingStartPair
    RoutingStrategy:
      additionalProperties: true
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
        - properties:
            id:
              type: string
            revision:
              type: integer
              example: 1
              description: The revision of the routing strategy
            inUse:
              type: boolean
              description: Only one strategy can be inUse
            name:
              type: string
            nameLocalized:
              $ref: '#/components/schemas/LocaleString'
            rootNode:
              $ref: '#/components/schemas/RoutingStrategyNode'
            globalConfiguration:
              $ref: '#/components/schemas/RoutingStrategyGlobalConfiguration'
          required:
            - inUse
            - revision
            - id
            - nameLocalized
            - rootNode
            - globalConfiguration
      type: object
      title: RoutingStrategy
      description: RoutingStrategy
    RoutingStrategyForCreation:
      additionalProperties: false
      properties:
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
      required:
        - nameLocalized
      type: object
      xml:
        name: RoutingStrategy
      title: RoutingStrategyForCreation
      description: RoutingStrategyForCreation
    RoutingStrategyGlobalConfiguration:
      additionalProperties: false
      required:
        - defaultPrice
      properties:
        stopRoutingAttemptsAfterTime:
          default: PT8H
          description: >-
            The amount of time, specified in ISO 8601 duration format, after
            which a routing plan is considered not routable. Note: The duration
            must be a multiple of 60 seconds.
          type: string
          pattern: ^P(?:(\d+W)|(\d+Y)?(\d+M)?(\d+D)?(?:T(\d+H)?(\d+M)?(\d+S)?)?)$
        defaultPrice:
          default: 10
          description: >-
            The price applied when no specific price is defined in the order or
            listing
          type: number
        timeTriggered:
          $ref: '#/components/schemas/RoutingStrategyRerouteTimeTriggeredConfig'
      type: object
      xml:
        name: RoutingStrategyGlobalConfiguration
      title: RoutingStrategyGlobalConfiguration
      description: RoutingStrategyGlobalConfiguration
    RoutingStrategyForModification:
      additionalProperties: false
      properties:
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        rootNode:
          $ref: '#/components/schemas/RoutingStrategyNodeForModification'
        version:
          type: integer
        globalConfiguration:
          $ref: '#/components/schemas/RoutingStrategyGlobalConfiguration'
      required:
        - rootNode
        - nameLocalized
        - version
      xml:
        name: RoutingStrategyForModification
      title: RoutingStrategyForModification
      description: RoutingStrategyForModification
    RoutingStrategyCondition:
      additionalProperties: false
      properties:
        activationTimeFrames:
          maxItems: 1
          type: array
          items:
            $ref: '#/components/schemas/ActivationTimeFrame'
        id:
          type: string
        name:
          type: string
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        description:
          type: string
        descriptionLocalized:
          $ref: '#/components/schemas/LocaleString'
        active:
          type: boolean
        rule:
          $ref: '#/components/schemas/ToolkitRulePart'
        nextNode:
          $ref: '#/components/schemas/RoutingStrategyNode'
        nextCondition:
          $ref: '#/components/schemas/RoutingStrategyCondition'
      required:
        - nextNode
        - active
        - rule
        - id
        - nameLocalized
      title: RoutingStrategyCondition
      description: RoutingStrategyCondition
    RoutingStrategyConditionForModification:
      additionalProperties: false
      properties:
        activationTimeFrames:
          maxItems: 1
          type: array
          items:
            $ref: '#/components/schemas/ActivationTimeFrame'
        name:
          type: string
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        description:
          type: string
        descriptionLocalized:
          $ref: '#/components/schemas/LocaleString'
        active:
          type: boolean
        rule:
          $ref: '#/components/schemas/ToolkitRulePart'
        nextNode:
          $ref: '#/components/schemas/RoutingStrategyNodeForModification'
        nextCondition:
          $ref: '#/components/schemas/RoutingStrategyConditionForModification'
      required:
        - nextNode
        - active
        - rule
        - nameLocalized
      title: RoutingStrategyConditionForModification
      description: RoutingStrategyConditionForModification
    RoutingStrategyConditionForCreation:
      additionalProperties: false
      properties:
        activationTimeFrames:
          maxItems: 1
          type: array
          items:
            $ref: '#/components/schemas/ActivationTimeFrame'
        name:
          type: string
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        description:
          type: string
        descriptionLocalized:
          $ref: '#/components/schemas/LocaleString'
        active:
          type: boolean
        rule:
          $ref: '#/components/schemas/ToolkitRulePart'
        nextNode:
          $ref: '#/components/schemas/RoutingStrategyNodeForCreation'
        nextCondition:
          $ref: '#/components/schemas/RoutingStrategyConditionForCreation'
      required:
        - nextNode
        - active
        - rule
        - nameLocalized
      title: RoutingStrategyConditionForCreation
      description: RoutingStrategyConditionForCreation
    RoutingStrategyNodeConfig:
      additionalProperties: false
      type: object
      required:
        - fences
        - ratings
      properties:
        reroute:
          $ref: '#/components/schemas/RoutingStrategyRerouteConfig'
        orderSplit:
          $ref: '#/components/schemas/RoutingStrategyOrderSplitConfig'
        fallbackFacility:
          $ref: '#/components/schemas/RoutingStrategyFallbackFacilityConfig'
        fences:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/RoutingStrategyStandardFence'
              - $ref: '#/components/schemas/RoutingStrategyToolkitFence'
            discriminator:
              propertyName: type
              mapping:
                StandardFence: '#/components/schemas/RoutingStrategyStandardFence'
                ToolkitFence: '#/components/schemas/RoutingStrategyToolkitFence'
        ratings:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/RoutingStrategyStandardRating'
              - $ref: '#/components/schemas/RoutingStrategyToolkitRating'
            discriminator:
              propertyName: type
              mapping:
                StandardRating: '#/components/schemas/RoutingStrategyRating'
                ToolkitRating: '#/components/schemas/RoutingStrategyToolkitRating'
      title: RoutingStrategyNodeConfig
      description: RoutingStrategyNodeConfig
    RoutingStrategyNodeConfigForUpsert:
      additionalProperties: false
      type: object
      required:
        - fences
        - ratings
      properties:
        reroute:
          $ref: '#/components/schemas/RoutingStrategyRerouteConfig'
        orderSplit:
          $ref: '#/components/schemas/RoutingStrategyOrderSplitConfig'
        fallbackFacility:
          $ref: '#/components/schemas/RoutingStrategyFallbackFacilityConfig'
        fences:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/RoutingStrategyStandardFenceForUpsert'
              - $ref: '#/components/schemas/RoutingStrategyToolkitFence'
            discriminator:
              propertyName: type
              mapping:
                StandardFence: '#/components/schemas/RoutingStrategyStandardFenceForUpsert'
                ToolkitFence: '#/components/schemas/RoutingStrategyToolkitFence'
        ratings:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/RoutingStrategyRatingForUpsert'
              - $ref: '#/components/schemas/RoutingStrategyToolkitRating'
            discriminator:
              propertyName: type
              mapping:
                StandardRating: '#/components/schemas/RoutingStrategyRatingForUpsert'
                ToolkitRating: '#/components/schemas/RoutingStrategyToolkitRating'
      title: RoutingStrategyNodeConfigForUpsert
      description: RoutingStrategyNodeConfigForUpsert
    RoutingStrategyNodeForCreation:
      additionalProperties: false
      type: object
      properties:
        activationTimeFrames:
          maxItems: 1
          type: array
          items:
            $ref: '#/components/schemas/ActivationTimeFrame'
        active:
          type: boolean
        name:
          type: string
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        description:
          type: string
        descriptionLocalized:
          $ref: '#/components/schemas/LocaleString'
        config:
          $ref: '#/components/schemas/RoutingStrategyNodeConfigForUpsert'
        nextCondition:
          $ref: '#/components/schemas/RoutingStrategyConditionForCreation'
        categoryRef:
          type: string
      required:
        - active
        - config
        - nameLocalized
      title: RoutingStrategyNodeForCreation
      description: RoutingStrategyNodeForCreation
    RoutingStrategyNodeForModification:
      additionalProperties: false
      type: object
      properties:
        activationTimeFrames:
          maxItems: 1
          type: array
          items:
            $ref: '#/components/schemas/ActivationTimeFrame'
        active:
          type: boolean
        name:
          type: string
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        description:
          type: string
        descriptionLocalized:
          $ref: '#/components/schemas/LocaleString'
        config:
          $ref: '#/components/schemas/RoutingStrategyNodeConfigForUpsert'
        nextCondition:
          $ref: '#/components/schemas/RoutingStrategyConditionForModification'
        categoryRef:
          type: string
      required:
        - active
        - config
        - nameLocalized
      title: RoutingStrategyNodeForModification
      description: RoutingStrategyNodeForModification
    ActivationTimeFrame:
      additionalProperties: false
      type: object
      properties:
        activeFrom:
          type: string
          format: date-time
          description: >-
            Sets a date before which the associated entity does not become
            active
        activeUntil:
          type: string
          format: date-time
          description: Sets a date after which the associated entity becomes active
        recurrence:
          $ref: '#/components/schemas/ActivationTimeFrameRecurrenceType'
      required:
        - recurrence
      title: ActivationTimeFrame
      description: ActivationTimeFrame
    ActivationTimeFrameRecurrenceType:
      type: string
      enum:
        - YEARLY
        - NONRECURRING
      title: ActivationTimeFrameRecurrenceType
      description: ActivationTimeFrameRecurrenceType
    RoutingStrategyNode:
      additionalProperties: false
      type: object
      properties:
        activationTimeFrames:
          type: array
          maxItems: 1
          items:
            $ref: '#/components/schemas/ActivationTimeFrame'
        id:
          type: string
        active:
          type: boolean
        name:
          type: string
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        description:
          type: string
        descriptionLocalized:
          $ref: '#/components/schemas/LocaleString'
        config:
          $ref: '#/components/schemas/RoutingStrategyNodeConfig'
        nextCondition:
          $ref: '#/components/schemas/RoutingStrategyCondition'
        categoryRef:
          type: string
      required:
        - active
        - config
        - id
        - nameLocalized
      title: RoutingStrategyNode
      description: RoutingStrategyNode
    RoutingStrategyOrderSplitConfig:
      additionalProperties: false
      type: object
      properties:
        maxSplitCount:
          type: integer
        active:
          type: boolean
        activeForSameday:
          type: boolean
        shouldUseWaitingRoomForPreBackOrderItems:
          type: boolean
      required:
        - active
        - maxSplitCount
        - activeForSameday
        - shouldUseWaitingRoomForPreBackOrderItems
      title: RoutingStrategyOrderSplitConfig
      description: RoutingStrategyOrderSplitConfig
    RoutingStrategyFallbackFacilityConfig:
      properties:
        facilityRefs:
          type: array
          items:
            type: string
          maxItems: 1
          minItems: 1
        active:
          type: boolean
          default: false
        fallbackAfterTime:
          default: PT0H
          description: >-
            Default amount of time in ISO 8601 duration format after which a not
            routable routingplan is routed to a configured fallback facility.
          type: string
          pattern: ^P(?:(\d+W)|(\d+Y)?(\d+M)?(\d+D)?(?:T(\d+H)?(\d+M)?(\d+S)?)?)$
      required:
        - facilityRefs
        - active
        - fallbackAfterTime
      title: RoutingStrategyFallbackFacilityConfig
      description: RoutingStrategyFallbackFacilityConfig
    RoutingStrategyRerouteTimeTriggeredConfig:
      additionalProperties: false
      type: object
      required:
        - clickAndCollectReroute
        - shipFromStoreDeliveryReroute
        - shipFromStoreSamedayReroute
      properties:
        clickAndCollectReroute:
          $ref: '#/components/schemas/RerouteConfiguration'
        shipFromStoreDeliveryReroute:
          $ref: '#/components/schemas/RerouteConfiguration'
        shipFromStoreSamedayReroute:
          $ref: '#/components/schemas/RerouteConfiguration'
      title: RoutingStrategyRerouteTimeTriggeredConfig
      description: RoutingStrategyRerouteTimeTriggeredConfig
    RoutingStrategyRerouteConfig:
      additionalProperties: false
      type: object
      properties:
        manualReroute:
          type: boolean
        rerouteZeroPicksOnly:
          default: false
          description: >-
            Specifies whether only pick jobs with zero items picked are eligible
            for rerouting.
          type: boolean
        shipFromStore:
          $ref: '#/components/schemas/RoutingStrategyFacilityRerouteConfig'
        clickAndCollect:
          $ref: '#/components/schemas/RoutingStrategyFacilityRerouteConfig'
      title: RoutingStrategyRerouteConfig
      description: RoutingStrategyRerouteConfig
    RoutingStrategyFacilityRerouteConfig:
      additionalProperties: false
      type: object
      properties:
        active:
          type: boolean
        rerouteType:
          $ref: '#/components/schemas/RoutingStrategyRerouteType'
      required:
        - rerouteType
      title: RoutingStrategyFacilityRerouteConfig
      description: RoutingStrategyFacilityRerouteConfig
    RoutingStrategyRerouteType:
      description: |-
        The type of reroute to apply to the order
          * `REROUTE`- the complete routing plan is rerouted.
          * `ORDERSPLIT`- the order is splitted. The split line items will be moved to a new routing plan and rerouted.
      enum:
        - REROUTE
        - ORDERSPLIT
      type: string
      title: RoutingStrategyRerouteType
    RoutingStrategyStandardFenceType:
      type: string
      enum:
        - StandardFence
      title: RoutingStrategyStandardFenceType
      description: RoutingStrategyStandardFenceType
    RoutingStrategyStandardFenceForUpsert:
      title: RoutingStrategyFence
      description: Routing Strategy Fence.
      additionalProperties: false
      properties:
        type:
          $ref: '#/components/schemas/RoutingStrategyStandardFenceType'
        active:
          type: boolean
        activeMode:
          $ref: '#/components/schemas/FenceMode'
        implementation:
          $ref: '#/components/schemas/FenceImplementation'
      required:
        - active
        - implementation
        - type
      type: object
    RoutingStrategyStandardFence:
      title: RoutingStrategyFence
      description: Routing Strategy Fence.
      additionalProperties: false
      properties:
        type:
          $ref: '#/components/schemas/RoutingStrategyStandardFenceType'
        active:
          type: boolean
        description:
          type: string
        implementation:
          $ref: '#/components/schemas/FenceImplementation'
        name:
          type: string
        supportedModes:
          type: array
          items:
            $ref: '#/components/schemas/FenceMode'
        activeMode:
          $ref: '#/components/schemas/FenceMode'
      required:
        - active
        - implementation
        - type
      type: object
    RoutingStrategyToolkitFenceType:
      type: string
      enum:
        - ToolkitFence
      title: RoutingStrategyToolkitFenceType
      description: RoutingStrategyToolkitFenceType
    RoutingStrategyToolkitFence:
      title: RoutingStrategyToolkitFence
      description: Routing Strategy Toolkit Fence.
      additionalProperties: false
      properties:
        referenceId:
          type: string
        type:
          $ref: '#/components/schemas/RoutingStrategyToolkitFenceType'
        name:
          description: The name of the fence.
          example: CustomFence
          type: string
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        description:
          description: The description of this fence.
          example: Some text that describes what the fence does.
          type: string
        descriptionLocalized:
          $ref: '#/components/schemas/LocaleString'
        active:
          default: false
          description: Indicates whether this fence is active or not.
          type: boolean
        order:
          description: Order in which this fence is executed
          example: 1
          type: integer
        entity1:
          $ref: '#/components/schemas/ToolkitAllowedEntities'
        entity2:
          $ref: '#/components/schemas/ToolkitAllowedEntities'
        rule:
          $ref: '#/components/schemas/ToolkitRule'
        comparisonRule:
          $ref: '#/components/schemas/ToolkitComparisonRule'
      required:
        - nameLocalized
        - active
        - order
        - entity1
        - entity2
        - type
        - referenceId
    RoutingStrategyStandardRatingType:
      type: string
      enum:
        - StandardRating
      title: RoutingStrategyStandardRatingType
      description: RoutingStrategyStandardRatingType
    RoutingStrategyStandardRating:
      title: RoutingStrategyStandardRating
      description: >-
        A rating is used to rate a set of possible facilities against each other
        during routing of orders.
      additionalProperties: false
      properties:
        type:
          $ref: '#/components/schemas/RoutingStrategyStandardRatingType'
        active:
          type: boolean
        configuration:
          $ref: '#/components/schemas/AbstractRatingConfiguration'
        description:
          type: string
        implementation:
          $ref: '#/components/schemas/RatingImplementation'
        maxPenalty:
          example: 100
          type: number
          minimum: 0
        name:
          type: string
      required:
        - active
        - implementation
        - maxPenalty
        - type
      type: object
    RoutingStrategyRatingForUpsert:
      title: RoutingStrategyRating
      description: >-
        A rating is used to rate a set of possible facilities against each other
        during routing of orders.
      additionalProperties: false
      properties:
        type:
          $ref: '#/components/schemas/RoutingStrategyStandardRatingType'
        active:
          type: boolean
        configuration:
          $ref: '#/components/schemas/AbstractRatingConfiguration'
        implementation:
          $ref: '#/components/schemas/RatingImplementation'
        maxPenalty:
          example: 100
          type: number
          minimum: 0
      required:
        - active
        - implementation
        - maxPenalty
        - type
      type: object
    RoutingStrategyToolkitRatingType:
      type: string
      enum:
        - ToolkitRating
      title: RoutingStrategyToolkitRatingType
      description: RoutingStrategyToolkitRatingType
    RoutingStrategyToolkitRating:
      title: RoutingStrategyToolkitRating
      description: Routing Strategy Toolkit Rating.
      additionalProperties: false
      properties:
        referenceId:
          type: string
        name:
          description: The name of the rating
          example: CustomRating
          type: string
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        description:
          description: The description of this rating
          example: Some text that describes what the rating does.
          type: string
        descriptionLocalized:
          $ref: '#/components/schemas/LocaleString'
        active:
          default: false
          description: Indicates whether this fence is active or not
          type: boolean
        entity1:
          $ref: '#/components/schemas/ToolkitAllowedEntities'
        entity2:
          $ref: '#/components/schemas/ToolkitAllowedEntities'
        rule:
          $ref: '#/components/schemas/ToolkitRule'
        comparisonRule:
          $ref: '#/components/schemas/ToolkitComparisonRule'
        maxPenalty:
          type: integer
          example: 100
          description: The maximum penalty this rating can have
        type:
          $ref: '#/components/schemas/RoutingStrategyToolkitRatingType'
      required:
        - type
        - nameLocalized
        - active
        - entity1
        - entity2
        - maxPenalty
        - referenceId
    RoutingStrategyNodeConfigCategoryForCreation:
      type: object
      additionalProperties: false
      properties:
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        color:
          type: string
      required:
        - nameLocalized
        - color
      title: RoutingStrategyNodeConfigCategoryForCreation
      description: RoutingStrategyNodeConfigCategoryForCreation
    RoutingStrategyNodeConfigCategoryForModification:
      type: object
      additionalProperties: false
      properties:
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        color:
          type: string
        version:
          type: number
      required:
        - nameLocalized
        - color
        - version
      title: RoutingStrategyNodeConfigCategoryForModification
      description: RoutingStrategyNodeConfigCategoryForModification
    RoutingStrategyNodeConfigCategory:
      allOf:
        - $ref: '#/components/schemas/RoutingStrategyNodeConfigCategoryForCreation'
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        id:
          type: string
      required:
        - id
      title: RoutingStrategyNodeConfigCategory
      description: RoutingStrategyNodeConfigCategory
    RoutingStrategyNodeConfigCategoryForResponse:
      allOf:
        - $ref: '#/components/schemas/RoutingStrategyNodeConfigCategory'
      properties:
        name:
          type: string
      title: RoutingStrategyNodeConfigCategoryForResponse
      description: RoutingStrategyNodeConfigCategoryForResponse
    RoutingStrategyNodeConfigCategoryTransporter:
      properties:
        routingStrategyNodeConfigCategories:
          items:
            $ref: '#/components/schemas/RoutingStrategyNodeConfigCategoryForResponse'
          type: array
        total:
          description: Total number of entities found for this query
          example: 42
          type: integer
      required:
        - routingStrategyNodeConfigCategories
        - total
      type: object
      xml:
        name: RoutingStrategyNodeConfigCategoryTransporter
      title: RoutingStrategyNodeConfigCategoryTransporter
      description: RoutingStrategyNodeConfigCategoryTransporter
    SourcingOptionsRequest:
      type: object
      properties:
        resourceInvestment:
          $ref: '#/components/schemas/ResourceInvestment'
        order:
          $ref: '#/components/schemas/OrderForSourcingOptionsRequest'
        optimizationHints:
          $ref: '#/components/schemas/OptimzationHints'
      required:
        - order
      title: SourcingOptionsRequest
      description: SourcingOptionsRequest
    OptimzationHints:
      type: object
      properties:
        requestedResultCount:
          type: integer
          example: 3
          default: 1
          description: Number of different results we calculated
        includeCalculationHints:
          description: >-
            Should only be used for debugging. Includes more information on how
            we calculated the response.
          type: boolean
          default: false
      title: OptimzationHints
      description: OptimzationHints
    SourcingOptionsResponse:
      type: object
      properties:
        id:
          type: string
          example: 284f32cc-b106-487d-b633-f90d93d8c251
        result:
          $ref: '#/components/schemas/SourcingOptionsResult'
      required:
        - id
        - result
      title: SourcingOptionsResponse
      description: SourcingOptionsResponse
    SourcingOptionsResult:
      type: object
      properties:
        options:
          type: array
          items:
            $ref: '#/components/schemas/SourcingOption'
      required:
        - options
      title: SourcingOptionsResult
      description: SourcingOptionsResult
    SourcingOption:
      type: object
      properties:
        id:
          type: string
        totalCosts:
          $ref: '#/components/schemas/DeliveryCost'
        totalPenalty:
          type: number
          description: The total calculated penalty we calculated for this option
          example: 187
        totalDeliveryTime:
          description: >-
            Duration of the total delivery time. Defined in ISO-8601 duration
            notation in working days.
          type: string
          example: PT4D
          pattern: ^-?P(?:(\d+W)|(\d+Y)?(\d+M)?(\d+D)?(?:T(\d+H)?(\d+M)?(\d+S)?)?)$
        nodes:
          type: array
          items:
            $ref: '#/components/schemas/SourcingOptionNode'
        transfers:
          type: array
          items:
            $ref: '#/components/schemas/SourcingOptionTransfer'
      required:
        - id
        - totalPenalty,
        - nodes
        - transfers
      title: SourcingOption
      description: SourcingOption
    NodeType:
      type: string
      enum:
        - SUPPLIER
        - MANAGED_FACILITY
        - CUSTOMER
      title: NodeType
      description: NodeType
    SourcingOptionNode:
      type: object
      properties:
        id:
          type: string
        facilityRef:
          type: string
          example: f439e7b6-119e-47cc-a263-05a31baea0de
          description: id of this node, unique for this Sourcing Option Responses
        type:
          $ref: '#/components/schemas/NodeType'
        lineItems:
          type: array
          items:
            $ref: '#/components/schemas/HandledItem'
      required:
        - id
        - type
        - lineItems
      title: SourcingOptionNode
      description: SourcingOptionNode
    SourcingOptionTransfer:
      type: object
      properties:
        sourceNodeRef:
          type: string
          example: f439e7b6-119e-47cc-a263-05a31baea0de
        targetNodeRef:
          type: string
          example: ad6c5038-15ee-41b8-a180-4c86290d04c3
        carrier:
          type: object
          properties:
            carrierRef:
              type: string
        lineItems:
          type: array
          items:
            $ref: '#/components/schemas/HandledItem'
      required:
        - sourceNodeRef
        - targetNodeRef
        - lineItems
      title: SourcingOptionTransfer
      description: SourcingOptionTransfer
    HandledItem:
      type: object
      properties:
        tenantArticleId:
          type: string
        quantity:
          type: number
          minimum: 1
      title: HandledItem
      description: HandledItem
    ResourceInvestment:
      type: object
      description: How much resources should be invested during the optimization?
      properties:
        level:
          description: >-
            [abstract values]: how many resources should we invest in
            optimization. With a higher level the results will be better,
            nevertheless we need to invest more time for the optimization.
          type: number
          minimum: 0
          maximum: 1
          example: 0.2
      required:
        - level
      title: ResourceInvestment
    ConsumerAddressForSourcingOptions:
      properties:
        facilityRef:
          type: string
        consumerId:
          description: The id of the consumer.
          example: e4213a07-f563-46a3-b1ba-4dfeb6abe82a
          type: string
        addresses:
          items:
            $ref: '#/components/schemas/ConsumerAddress'
          type: array
        customAttributes:
          description: >-
            Attributes that can be added to the consumer. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the informations carried here.
          type: object
      type: object
      title: ConsumerAddressForSourcingOptions
      description: ConsumerAddressForSourcingOptions
    OrderForSourcingOptionsRequest:
      additionalProperties: false
      properties:
        consumer:
          $ref: '#/components/schemas/ConsumerAddressForSourcingOptions'
        customAttributes:
          description: >-
            Attributes that can be added to the order. These attributes cannot
            be used within fulfillment processes, but it could be useful to have
            the informations carried here.
          type: object
        deliveryPreferences:
          $ref: '#/components/schemas/DeliveryPreferences'
        orderDate:
          description: The date this order was created at the supplying system.
          example: '2020-02-03T08:45:50.525Z'
          format: date-time
          type: string
        orderLineItems:
          items:
            $ref: '#/components/schemas/OrderLineItemForCreation'
          type: array
        status:
          $ref: '#/components/schemas/OrderStatus'
        stickers:
          type: array
          minItems: 1
          maxItems: 100
          items:
            $ref: '#/components/schemas/Sticker'
        tenantOrderId:
          description: >-
            Field can be used as a reference number in foreign systems, for
            example as a reference to the source system's identifier for this
            order.
          example: R456728546
          type: string
        tags:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/TagReference'
        customServices:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/CustomServiceReferenceForCreation'
        paymentInfo:
          $ref: '#/components/schemas/OrderPaymentInfoForCreation'
        statusReasons:
          type: array
          items:
            $ref: '#/components/schemas/OrderStatusReason'
        promisesOptions:
          $ref: '#/components/schemas/OrderPromisesOptions'
      type: object
      xml:
        name: OrderForSourcingOptionsRequest
      title: OrderForSourcingOptionsRequest
      description: OrderForSourcingOptionsRequest
    ArticleStockForecast:
      properties:
        created:
          format: date-time
          type: string
        cumulated:
          type: number
        cumulatedLowerBounds:
          items:
            type: number
          type: array
        cumulatedUpperBounds:
          items:
            type: number
          type: array
        id:
          type: string
        lastModified:
          format: date-time
          type: string
        loadTime:
          format: date-time
          type: string
        lowerBounds:
          items:
            type: number
          type: array
        period:
          enum:
            - DAILY
          type: string
        point:
          type: number
        sourceDate:
          format: date-time
          type: string
        targetDate:
          format: date-time
          type: string
        tenantArticleId:
          type: string
        upperBounds:
          items:
            type: number
          type: array
      required:
        - id
        - tenantArticleId
        - created
        - lastModified
        - sourceDate
        - targetDate
        - loadTime
        - cumulated
        - cumulatedLowerBounds
        - cumulatedUpperBounds
        - lowerBounds
        - upperBounds
        - period
        - point
      title: ArticleStockForecast
      type: object
      description: ArticleStockForecast
    AssignedRoles:
      properties:
        contextLimitations:
          description: The context limitations of the assigned role
          items:
            $ref: '#/components/schemas/ContextLimitation'
          type: array
        ref:
          description: The id of the assigned role
          type: string
      required:
        - ref
      title: AssignedRoles
      type: object
      description: AssignedRoles
    AuthenticationProvider:
      properties:
        id:
          description: The id of the authentication provider
          type: string
        type:
          $ref: '#/components/schemas/AuthenticationProviderTypeEnum'
      required:
        - type
      title: AuthenticationProvider
      type: object
      description: AuthenticationProvider
    AuthenticationProviderTypeEnum:
      description: The type of the authentication provider
      enum:
        - EMAIL_PASSWORD
        - OIDC
      title: AuthenticationProviderTypeEnum
      type: string
    AvailableForPickingDetails:
      properties:
        total:
          type: number
      required:
        - total
      title: AvailableForPickingDetails
      type: object
      description: AvailableForPickingDetails
    BooleanFilter:
      properties:
        eq:
          type: boolean
        notEq:
          type: boolean
      title: BooleanFilter
      type: object
      description: BooleanFilter
    BulkOperationError:
      properties:
        message:
          type: string
        type:
          enum:
            - VALIDATION
            - UNKNOWN
          type: string
      required:
        - type
        - message
      title: BulkOperationError
      type: object
      description: BulkOperationError
    ByTrait:
      properties:
        ACCESSIBLE:
          type: number
        PICKABLE:
          type: number
      required:
        - PICKABLE
        - ACCESSIBLE
      title: ByTrait
      type: object
      description: ByTrait
    CancelStowJobAction:
      description: Sets the status of the stowjob to CANCELED
      properties:
        name:
          description: The name of the action that should be performed
          enum:
            - CANCEL_STOW_JOB
          type: string
        version:
          description: The current version of the stow job that should be modified
          type: number
      required:
        - version
        - name
      title: CancelStowJobAction
      type: object
    Category:
      properties:
        created:
          format: date-time
          type: string
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        id:
          type: string
        lastModified:
          format: date-time
          type: string
        nameLocalized:
          $ref: '#/components/schemas/LocaleStringConstrained'
        tenantCategoryId:
          description: unique identifier for categories used in the customer systems
          maxLength: 256
          minLength: 2
          pattern: ^[A-Za-z0-9_-]+$
          type: string
        version:
          type: number
      required:
        - nameLocalized
        - created
        - lastModified
        - version
      title: Category
      type: object
      description: Category
    ChannelStockAvailability:
      properties:
        availableForPicking:
          type: number
        availableOnStock:
          type: number
        channelRef:
          type: string
      required:
        - channelRef
        - availableForPicking
        - availableOnStock
      title: ChannelStockAvailability
      type: object
      description: ChannelStockAvailability
    CloseStowJobAction:
      description: Sets the status of the stowjob to CLOSED
      properties:
        name:
          description: The name of the action that should be performed
          enum:
            - CLOSE_STOW_JOB
          type: string
        version:
          description: The current version of the stow job that should be modified
          type: number
      required:
        - version
        - name
      title: CloseStowJobAction
      type: object
    ContextLimitation:
      properties:
        type:
          description: The type of the context limitation
          enum:
            - FACILITY
            - ZONE
          type: string
        values:
          description: The values of the context limitation
          items:
            type: string
          type: array
      required:
        - type
        - values
      title: ContextLimitation
      type: object
      description: ContextLimitation
    CustomClaims:
      properties:
        roles:
          description: The roles of the user
          items:
            $ref: '#/components/schemas/UserRole'
          type: array
      required:
        - roles
      title: CustomClaims
      type: object
      description: CustomClaims
    DateEqFilter:
      properties:
        eq:
          format: date-time
          type: string
        notEq:
          format: date-time
          type: string
      title: DateEqFilter
      type: object
      description: DateEqFilter
    DateFilter:
      properties:
        eq:
          format: date-time
          type: string
        gt:
          format: date-time
          type: string
        gte:
          format: date-time
          type: string
        lt:
          format: date-time
          type: string
        lte:
          format: date-time
          type: string
        notEq:
          format: date-time
          type: string
      title: DateFilter
      type: object
      description: DateFilter
    DateListFilter:
      properties:
        contains:
          $ref: '#/components/schemas/DateEqFilter'
      title: DateListFilter
      type: object
      description: DateListFilter
    ExternalStockChangeReason:
      properties:
        active:
          description: Whether the reason is active
          example: true
          type: boolean
        created:
          description: Date of creation
          format: date-time
          type: string
        customAttributes:
          description: The custom attributes of this external stock change reason
          type: object
        id:
          description: Id of the external stock change reason
          example: 5aa18b4d-45de-4e9e-92db-936288040272
          type: string
        lastModified:
          description: Date of last modification
          format: date-time
          type: string
        reasonLocalized:
          additionalProperties:
            maxLength: 255
            type: string
          description: >-
            Localizations, i.e. names which are to be displayed. Each localized
            string must not exceed 255 characters
          example:
            de_DE: FUND
            en_EN: FOUND
          type: object
        tenantReasonId:
          description: Identifier of the stock change reason
          example: F12
          type: string
        version:
          description: Version of the external stock change reason
          example: 1
          type: number
      required:
        - active
        - reasonLocalized
        - id
        - version
      title: ExternalStockChangeReason
      type: object
      description: ExternalStockChangeReason
    ExternalStockChangeReasonForCreation:
      properties:
        active:
          description: Whether the reason is active
          example: true
          type: boolean
        customAttributes:
          description: The custom attributes of this external stock change reason
          type: object
        reasonLocalized:
          additionalProperties:
            maxLength: 255
            type: string
          description: >-
            Localizations, i.e. names which are to be displayed. Each localized
            string must not exceed 255 characters
          example:
            de_DE: FUND
            en_EN: FOUND
          type: object
        tenantReasonId:
          description: Identifier of the stock change reason
          example: F12
          type: string
      required:
        - active
        - reasonLocalized
      title: ExternalStockChangeReasonForCreation
      type: object
      description: ExternalStockChangeReasonForCreation
    ExternalStockChangeReasonForUpdate:
      properties:
        active:
          description: Whether the reason is active
          example: true
          type: boolean
        customAttributes:
          description: The custom attributes of this external stock change reason
          type: object
        id:
          description: Id of the external stock change reason
          example: 5aa18b4d-45de-4e9e-92db-936288040272
          type: string
        reasonLocalized:
          additionalProperties:
            maxLength: 255
            type: string
          description: >-
            Localizations, i.e. names which are to be displayed. Each localized
            string must not exceed 255 characters
          example:
            de_DE: FUND
            en_EN: FOUND
          type: object
        version:
          description: Version of the external stock change reason
          example: 1
          type: number
      required:
        - version
      title: ExternalStockChangeReasonForUpdate
      type: object
      description: ExternalStockChangeReasonForUpdate
    ExternalStockChangeReasonInput:
      properties:
        id:
          description: ID of reason. Use to enrich with preconfigured reason
          type: string
        reasonLocalized:
          description: >-
            List of localized reason strings. If provided, no preconfiguration
            is necessary. Cannot be provided in combination with id or existing
            tenantReasonId.
          type: object
        tenantReasonId:
          description: >-
            tenantReasonId of reason. If no reasonLocalized provided, a
            preconfigured reason with the tenantReasonId must be present
          type: string
      title: ExternalStockChangeReasonInput
      type: object
      description: ExternalStockChangeReasonInput
    ExternalStockChangeReasonOutput:
      properties:
        reasonLocalized:
          description: Localized reason strings
          type: object
        tenantReasonId:
          description: tenantReasonId of reason
          type: string
      required:
        - reasonLocalized
      title: ExternalStockChangeReasonOutput
      type: object
      description: ExternalStockChangeReasonOutput
    FacilityAddressEmailAddressesFilter:
      properties:
        recipient:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by recipient
        value:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by value
      title: FacilityAddressEmailAddressesFilter
      type: object
      description: FacilityAddressEmailAddressesFilter
    FacilityAddressEmailAddressesListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/FacilityAddressEmailAddressesFilter'
          description: Contains returns if at least one entry matches
      title: FacilityAddressEmailAddressesListFilter
      type: object
      description: FacilityAddressEmailAddressesListFilter
    FacilityAddressFilter:
      properties:
        city:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by city
        companyName:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by companyName
        country:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by country
        customAttributes:
          additionalProperties:
            anyOf:
              - $ref: '#/components/schemas/BooleanFilter'
              - $ref: '#/components/schemas/StringEqFilter'
              - $ref: '#/components/schemas/NumberEqFilter'
              - $ref: '#/components/schemas/DateFilter'
          description: Search by custom attributes
          type: object
        emailAddresses:
          allOf:
            - $ref: '#/components/schemas/FacilityAddressEmailAddressesListFilter'
          description: Nested list search by emailAddresses
        houseNumber:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by houseNumber
        postalCode:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by postalCode
        province:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by province
        street:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by street
      title: FacilityAddressFilter
      type: object
      description: FacilityAddressFilter
    FacilityContactFilter:
      properties:
        firstName:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by firstName
        lastName:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by lastName
      title: FacilityContactFilter
      type: object
      description: FacilityContactFilter
    FacilityLocationTypeEnumFilter:
      properties:
        eq:
          description: Search by locationType
          enum:
            - STORE
            - WAREHOUSE
            - EXTERNAL
          type: string
        in:
          description: Search by locationType
          enum:
            - STORE
            - WAREHOUSE
            - EXTERNAL
          type: string
        notEq:
          description: Search by locationType
          enum:
            - STORE
            - WAREHOUSE
            - EXTERNAL
          type: string
      title: FacilityLocationTypeEnumFilter
      type: object
      description: FacilityLocationTypeEnumFilter
    FacilitySearchPayload:
      properties:
        options:
          $ref: '#/components/schemas/SearchOptions'
        query:
          $ref: '#/components/schemas/FacilitySearchQuery'
        size:
          default: 20
          description: Number of items to return.
          maximum: 250
          minimum: 1
          type: number
        sort:
          description: Use for sorting the result.
          items:
            $ref: '#/components/schemas/FacilitySort'
          maxItems: 1
          minItems: 1
          type: array
        startAfterId:
          description: The ID to start after.
          type: string
      required:
        - query
      title: FacilitySearchPayload
      type: object
      description: FacilitySearchPayload
    FacilitySearchQuery:
      properties:
        address:
          allOf:
            - $ref: '#/components/schemas/FacilityAddressFilter'
          description: Nested search by address
        and:
          items:
            $ref: '#/components/schemas/FacilitySearchQuery'
          type: array
        contact:
          allOf:
            - $ref: '#/components/schemas/FacilityContactFilter'
          description: Nested search by contact
        customAttributes:
          additionalProperties:
            anyOf:
              - $ref: '#/components/schemas/BooleanFilter'
              - $ref: '#/components/schemas/StringEqFilter'
              - $ref: '#/components/schemas/NumberEqFilter'
              - $ref: '#/components/schemas/DateFilter'
          description: Search by custom attributes
          type: object
        locationType:
          allOf:
            - $ref: '#/components/schemas/FacilityLocationTypeEnumFilter'
          description: Search by locationType
        name:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by name
        or:
          items:
            $ref: '#/components/schemas/FacilitySearchQuery'
          type: array
        services:
          allOf:
            - $ref: '#/components/schemas/FacilityServicesListFilter'
          description: Nested list search by services
        status:
          allOf:
            - $ref: '#/components/schemas/FacilityStatusEnumFilter'
          description: Search by status
        tags:
          allOf:
            - $ref: '#/components/schemas/FacilityTagsListFilter'
          description: Nested list search by tags
        tenantFacilityId:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by tenantFacilityId
      title: FacilitySearchQuery
      type: object
      description: FacilitySearchQuery
    FacilityServicesFacilityServiceTypeEnumFilter:
      properties:
        eq:
          description: Search by type
          enum:
            - SHIP_FROM_STORE
            - PICKUP
          type: string
        in:
          description: Search by type
          enum:
            - SHIP_FROM_STORE
            - PICKUP
          type: string
        notEq:
          description: Search by type
          enum:
            - SHIP_FROM_STORE
            - PICKUP
          type: string
      title: FacilityServicesFacilityServiceTypeEnumFilter
      type: object
      description: FacilityServicesFacilityServiceTypeEnumFilter
    FacilityServicesFilter:
      properties:
        type:
          allOf:
            - $ref: >-
                #/components/schemas/FacilityServicesFacilityServiceTypeEnumFilter
          description: Search by type
      title: FacilityServicesFilter
      type: object
      description: FacilityServicesFilter
    FacilityServicesListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/FacilityServicesFilter'
          description: Contains returns if at least one entry matches
      title: FacilityServicesListFilter
      type: object
      description: FacilityServicesListFilter
    FacilitySort:
      properties:
        customAttributes:
          additionalProperties: true
          maxProperties: 1
          minProperties: 1
          type: object
        name:
          enum:
            - ASC
            - DESC
          type: string
        status:
          enum:
            - ASC
            - DESC
          type: string
        tenantFacilityId:
          enum:
            - ASC
            - DESC
          type: string
      title: FacilitySort
      type: object
      description: FacilitySort
    FacilityStatusEnumFilter:
      properties:
        eq:
          description: Search by status
          enum:
            - ONLINE
            - SUSPENDED
            - OFFLINE
          type: string
        in:
          description: Search by status
          enum:
            - ONLINE
            - SUSPENDED
            - OFFLINE
          type: string
        notEq:
          description: Search by status
          enum:
            - ONLINE
            - SUSPENDED
            - OFFLINE
          type: string
      title: FacilityStatusEnumFilter
      type: object
      description: FacilityStatusEnumFilter
    FacilityStock:
      properties:
        available:
          type: number
        facilityRef:
          type: string
        id:
          type: string
        reserved:
          type: number
        tenantArticleId:
          type: string
        value:
          type: number
      required:
        - available
        - reserved
        - value
        - tenantArticleId
        - facilityRef
        - id
      title: FacilityStock
      type: object
      description: FacilityStock
    FacilityStockBulkOperation:
      properties:
        tenantArticleId:
          minLength: 1
          type: string
        value:
          minimum: 0
          type: number
      required:
        - tenantArticleId
        - value
      title: FacilityStockBulkOperation
      type: object
      description: FacilityStockBulkOperation
    FacilityStockBulkOperations:
      properties:
        operations:
          items:
            $ref: '#/components/schemas/FacilityStockBulkOperation'
          minItems: 1
          type: array
      required:
        - operations
      title: FacilityStockBulkOperations
      type: object
      description: FacilityStockBulkOperations
    FacilityStockBulkResult:
      properties:
        error:
          $ref: '#/components/schemas/BulkOperationError'
        facilityRef:
          type: string
        status:
          enum:
            - UPDATED
            - CREATED
            - FAILED
          type: string
        tenantArticleId:
          type: string
      required:
        - tenantArticleId
        - facilityRef
        - status
      title: FacilityStockBulkResult
      type: object
      description: FacilityStockBulkResult
    FacilityStockDistribution:
      properties:
        available:
          deprecated: true
          description: >-
            This field is deprecated and replaced by new availability concepts.
            Please see
            https://docs.fulfillmenttools.com/api-docs/use-cases/inventory-management/global-inventory/availability
            for more information.
          minimum: 0
          type: number
        availableForPicking:
          type: number
        availableOnStock:
          type: number
        availableToPromise:
          deprecated: true
          description: >-
            This field is deprecated and replaced by new availability concepts.
            Please see
            https://docs.fulfillmenttools.com/api-docs/use-cases/inventory-management/global-inventory/availability
            for more information.
          type: number
        byTrait:
          $ref: '#/components/schemas/ByTrait'
        channelAdjusted:
          items:
            $ref: '#/components/schemas/ChannelStockAvailability'
          type: array
        facilityId:
          type: string
        facilityName:
          type: string
        facilityServiceTypes:
          items:
            $ref: '#/components/schemas/FacilityServiceType'
            type: string
          type: array
        facilityStatus:
          $ref: '#/components/schemas/FacilityStatus'
        price:
          nullable: true
          type: number
        readyToPick:
          deprecated: true
          description: >-
            This field is deprecated and replaced by new availability concepts.
            Please see
            https://docs.fulfillmenttools.com/api-docs/use-cases/inventory-management/global-inventory/availability
            for more information.
          type: number
        reserved:
          minimum: 0
          type: number
        safetyStock:
          minimum: 0
          type: number
        stockOnHand:
          type: number
        totalAmount:
          minimum: 0
          type: number
      required:
        - reserved
        - totalAmount
        - available
        - safetyStock
        - byTrait
        - availableForPicking
        - availableToPromise
        - readyToPick
        - availableOnStock
        - stockOnHand
        - facilityId
        - facilityName
        - price
      title: FacilityStockDistribution
      type: object
      description: FacilityStockDistribution
    FacilityTagsFilter:
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by id
        value:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by value
      title: FacilityTagsFilter
      type: object
      description: FacilityTagsFilter
    FacilityTagsListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/FacilityTagsFilter'
          description: Contains returns if at least one entry matches
      title: FacilityTagsListFilter
      type: object
      description: FacilityTagsListFilter
    HandoverJobAssignedUsersFilter:
      properties:
        userId:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by userId
        username:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by username
      title: HandoverJobAssignedUsersFilter
      type: object
      description: HandoverJobAssignedUsersFilter
    HandoverJobAssignedUsersListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/HandoverJobAssignedUsersFilter'
          description: Contains returns if at least one entry matches
      title: HandoverJobAssignedUsersListFilter
      type: object
      description: HandoverJobAssignedUsersListFilter
    HandoverJobChannelEnumEnumFilter:
      properties:
        eq:
          description: Search by channel
          enum:
            - DELIVERY
            - COLLECT
          type: string
        in:
          description: Search by channel
          enum:
            - DELIVERY
            - COLLECT
          type: string
        notEq:
          description: Search by channel
          enum:
            - DELIVERY
            - COLLECT
          type: string
      title: HandoverJobChannelEnumEnumFilter
      type: object
      description: HandoverJobChannelEnumEnumFilter
    HandoverJobHandoverJobLineItemsArticleFilter:
      properties:
        tenantArticleId:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by tenantArticleId
        title:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by title
      title: HandoverJobHandoverJobLineItemsArticleFilter
      type: object
      description: HandoverJobHandoverJobLineItemsArticleFilter
    HandoverJobHandoverJobLineItemsFilter:
      properties:
        article:
          allOf:
            - $ref: >-
                #/components/schemas/HandoverJobHandoverJobLineItemsArticleFilter
          description: Nested search by article
        substituteLineItems:
          allOf:
            - $ref: >-
                #/components/schemas/HandoverJobHandoverJobLineItemsSubstituteLineItemsListFilter
          description: Nested list search by substituteLineItems
      title: HandoverJobHandoverJobLineItemsFilter
      type: object
      description: HandoverJobHandoverJobLineItemsFilter
    HandoverJobHandoverJobLineItemsListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/HandoverJobHandoverJobLineItemsFilter'
          description: Contains returns if at least one entry matches
      title: HandoverJobHandoverJobLineItemsListFilter
      type: object
      description: HandoverJobHandoverJobLineItemsListFilter
    HandoverJobHandoverJobLineItemsSubstituteLineItemsArticleFilter:
      properties:
        tenantArticleId:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by tenantArticleId
        title:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by title
      title: HandoverJobHandoverJobLineItemsSubstituteLineItemsArticleFilter
      type: object
      description: HandoverJobHandoverJobLineItemsSubstituteLineItemsArticleFilter
    HandoverJobHandoverJobLineItemsSubstituteLineItemsFilter:
      properties:
        article:
          allOf:
            - $ref: >-
                #/components/schemas/HandoverJobHandoverJobLineItemsSubstituteLineItemsArticleFilter
          description: Nested search by article
      title: HandoverJobHandoverJobLineItemsSubstituteLineItemsFilter
      type: object
      description: HandoverJobHandoverJobLineItemsSubstituteLineItemsFilter
    HandoverJobHandoverJobLineItemsSubstituteLineItemsListFilter:
      properties:
        contains:
          allOf:
            - $ref: >-
                #/components/schemas/HandoverJobHandoverJobLineItemsSubstituteLineItemsFilter
          description: Contains returns if at least one entry matches
      title: HandoverJobHandoverJobLineItemsSubstituteLineItemsListFilter
      type: object
      description: HandoverJobHandoverJobLineItemsSubstituteLineItemsListFilter
    HandoverJobHandoverJobParcelInfoFilter:
      properties:
        carrierKey:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by carrierKey
        carrierRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by carrierRef
        carrierTrackingNumber:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by carrierTrackingNumber
        shipmentRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by shipmentRef
      title: HandoverJobHandoverJobParcelInfoFilter
      type: object
      description: HandoverJobHandoverJobParcelInfoFilter
    HandoverJobHandoverjobStatusEnumFilter:
      properties:
        eq:
          description: Search by status
          enum:
            - OPEN
            - HANDED_OVER
            - OBSOLETE
            - CANCELED
          type: string
        in:
          description: Search by status
          enum:
            - OPEN
            - HANDED_OVER
            - OBSOLETE
            - CANCELED
          type: string
        notEq:
          description: Search by status
          enum:
            - OPEN
            - HANDED_OVER
            - OBSOLETE
            - CANCELED
          type: string
      title: HandoverJobHandoverjobStatusEnumFilter
      type: object
      description: HandoverJobHandoverjobStatusEnumFilter
    HandoverJobInvoiceAddressFilter:
      properties:
        companyName:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by companyName
        email:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by email
        firstName:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by firstName
        lastName:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by lastName
      title: HandoverJobInvoiceAddressFilter
      type: object
      description: HandoverJobInvoiceAddressFilter
    HandoverJobRecipientAddressFilter:
      properties:
        companyName:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by companyName
        email:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by email
        firstName:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by firstName
        lastName:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by lastName
      title: HandoverJobRecipientAddressFilter
      type: object
      description: HandoverJobRecipientAddressFilter
    HandoverJobSearchPayload:
      properties:
        options:
          $ref: '#/components/schemas/SearchOptions'
        query:
          $ref: '#/components/schemas/HandoverJobSearchQuery'
        size:
          default: 20
          description: Number of items to return.
          maximum: 250
          minimum: 1
          type: number
        sort:
          description: Use for sorting the result.
          items:
            $ref: '#/components/schemas/HandoverJobSort'
          maxItems: 1
          minItems: 1
          type: array
        startAfterId:
          description: The ID to start after.
          type: string
      required:
        - query
      title: HandoverJobSearchPayload
      type: object
      description: HandoverJobSearchPayload
    HandoverJobSearchQuery:
      properties:
        and:
          items:
            $ref: '#/components/schemas/HandoverJobSearchQuery'
          type: array
        anonymized:
          allOf:
            - $ref: '#/components/schemas/BooleanFilter'
          description: Search by anonymized
        assignedUsers:
          allOf:
            - $ref: '#/components/schemas/HandoverJobAssignedUsersListFilter'
          description: Nested list search by assignedUsers
        channel:
          allOf:
            - $ref: '#/components/schemas/HandoverJobChannelEnumEnumFilter'
          description: Search by channel
        facilityRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by facilityRef
        fullIdentifier:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by fullIdentifier
        handoverJobLineItems:
          allOf:
            - $ref: '#/components/schemas/HandoverJobHandoverJobLineItemsListFilter'
          description: Nested list search by handoverJobLineItems
        handoverJobParcelInfo:
          allOf:
            - $ref: '#/components/schemas/HandoverJobHandoverJobParcelInfoFilter'
          description: Nested search by handoverJobParcelInfo
        invoiceAddress:
          allOf:
            - $ref: '#/components/schemas/HandoverJobInvoiceAddressFilter'
          description: Nested search by invoiceAddress
        or:
          items:
            $ref: '#/components/schemas/HandoverJobSearchQuery'
          type: array
        pickJobRef:
          allOf:
            - $ref: '#/components/schemas/StringEqFilter'
          description: Search by pickJobRef
        recipientAddress:
          allOf:
            - $ref: '#/components/schemas/HandoverJobRecipientAddressFilter'
          description: Nested search by recipientAddress
        shortIdentifier:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by shortIdentifier
        status:
          allOf:
            - $ref: '#/components/schemas/HandoverJobHandoverjobStatusEnumFilter'
          description: Search by status
        targetTime:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by targetTime
        tenantOrderId:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by tenantOrderId
      title: HandoverJobSearchQuery
      type: object
      description: HandoverJobSearchQuery
    HandoverJobSort:
      properties:
        targetTime:
          enum:
            - ASC
            - DESC
          type: string
      title: HandoverJobSort
      type: object
      description: HandoverJobSort
    InboundAttachment:
      properties:
        created:
          format: date-time
          type: string
        id:
          type: string
        lastModified:
          format: date-time
          type: string
        version:
          type: number
      required:
        - id
        - version
      title: InboundAttachment
      type: object
      description: InboundAttachment
    InboundAttachmentForCreation:
      properties:
        content:
          description: Base64 encoded attachment file
          type: string
        fileName:
          description: File name of attachment
          type: string
      required:
        - fileName
        - content
      title: InboundAttachmentForCreation
      type: object
      description: InboundAttachmentForCreation
    InboundAttachmentLink:
      properties:
        inboundAttachmentRef:
          type: string
      required:
        - inboundAttachmentRef
      title: InboundAttachmentLink
      type: object
      description: InboundAttachmentLink
    InboundDeliveryFinishedPayload:
      properties:
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        facilityRef:
          type: string
        inboundProcessRef:
          type: string
        onHold:
          type: boolean
        purchaseOrder:
          $ref: '#/components/schemas/InboundProcessPurchaseOrder'
        receipts:
          items:
            $ref: '#/components/schemas/InboundReceipt'
          type: array
        status:
          enum:
            - OPEN
            - PARTIAL_DELIVERY
            - ON_HOLD
            - CLOSED
          type: string
        tenantInboundProcessRef:
          type: string
      required:
        - inboundProcessRef
        - facilityRef
        - status
        - onHold
        - receipts
      title: InboundDeliveryFinishedPayload
      type: object
      description: InboundDeliveryFinishedPayload
    InboundDeliveryOnHoldPayload:
      properties:
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        facilityRef:
          type: string
        inboundProcessRef:
          type: string
        onHold:
          type: boolean
        purchaseOrder:
          $ref: '#/components/schemas/InboundProcessPurchaseOrder'
        status:
          enum:
            - OPEN
            - PARTIAL_DELIVERY
            - ON_HOLD
            - CLOSED
          type: string
        tenantInboundProcessRef:
          type: string
      required:
        - inboundProcessRef
        - facilityRef
        - status
        - onHold
      title: InboundDeliveryOnHoldPayload
      type: object
      description: InboundDeliveryOnHoldPayload
    InboundDeliveryReceivedPayload:
      properties:
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        facilityRef:
          type: string
        inboundProcessRef:
          type: string
        onHold:
          type: boolean
        purchaseOrder:
          $ref: '#/components/schemas/InboundProcessPurchaseOrder'
        receipt:
          $ref: '#/components/schemas/InboundReceipt'
        status:
          enum:
            - OPEN
            - PARTIAL_DELIVERY
            - ON_HOLD
            - CLOSED
          type: string
        tenantInboundProcessRef:
          type: string
      required:
        - inboundProcessRef
        - facilityRef
        - status
        - onHold
        - receipt
      title: InboundDeliveryReceivedPayload
      type: object
      description: InboundDeliveryReceivedPayload
    InboundDeliveryReleasedPayload:
      properties:
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        facilityRef:
          type: string
        inboundProcessRef:
          type: string
        onHold:
          type: boolean
        purchaseOrder:
          $ref: '#/components/schemas/InboundProcessPurchaseOrder'
        status:
          enum:
            - OPEN
            - PARTIAL_DELIVERY
            - ON_HOLD
            - CLOSED
          type: string
        tenantInboundProcessRef:
          type: string
      required:
        - inboundProcessRef
        - facilityRef
        - status
        - onHold
      title: InboundDeliveryReleasedPayload
      type: object
      description: InboundDeliveryReleasedPayload
    InboundDeliverySingleReceiptPayload:
      properties:
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        facilityRef:
          type: string
        inboundProcessRef:
          type: string
        onHold:
          type: boolean
        purchaseOrder:
          $ref: '#/components/schemas/InboundProcessPurchaseOrder'
        receipt:
          $ref: '#/components/schemas/InboundReceipt'
        status:
          enum:
            - OPEN
            - PARTIAL_DELIVERY
            - ON_HOLD
            - CLOSED
          type: string
        tenantInboundProcessRef:
          type: string
      required:
        - inboundProcessRef
        - facilityRef
        - status
        - onHold
        - receipt
      title: InboundDeliverySingleReceiptPayload
      type: object
      description: InboundDeliverySingleReceiptPayload
    InboundLineItem:
      properties:
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        quantity:
          $ref: '#/components/schemas/Quantity'
        stockProperties:
          additionalProperties:
            type: string
          allOf:
            - $ref: '#/components/schemas/StockPropertyPreset'
        tenantArticleId:
          type: string
      required:
        - tenantArticleId
        - quantity
      title: InboundLineItem
      type: object
      description: InboundLineItem
    InboundProcess:
      properties:
        anonymized:
          description: >-
            Indicates the inbound process was anonymized acording to configured
            GDPR retention time.
          type: boolean
        created:
          format: date-time
          type: string
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        facilityRef:
          type: string
        id:
          type: string
        inboundDate:
          description: >-
            Aggregated dates from sources which advise incoming stock. Currently
            that is "purchaseOrder"
          items:
            format: date-time
            type: string
          type: array
        lastModified:
          format: date-time
          type: string
        onHold:
          description: >-
            Indicates if the inbound process is on hold and will not be
            processed further
          type: boolean
        origin:
          description: >-
            Aggregated origin data from sources which advise incoming stock.
            Currently that is just  "purchaseOrder"
          items:
            $ref: '#/components/schemas/InboundProcessOrigin'
          type: array
        purchaseOrder:
          $ref: '#/components/schemas/InboundProcessPurchaseOrder'
        receipts:
          items:
            $ref: '#/components/schemas/InboundReceipt'
          type: array
        scannableCodes:
          description: >-
            scannableCodes such as barcodes that are relevant in the
            inboundProcess, e.g. , barcode of the delivery note
          items:
            type: string
          type: array
        status:
          enum:
            - OPEN
            - PARTIAL_DELIVERY
            - ON_HOLD
            - CLOSED
          type: string
        tenantInboundProcessId:
          type: string
        version:
          type: number
      required:
        - facilityRef
        - id
        - version
        - created
        - lastModified
        - inboundDate
        - origin
        - anonymized
        - status
        - onHold
        - scannableCodes
        - receipts
      title: InboundProcess
      type: object
      description: InboundProcess
    InboundProcessForCreation:
      properties:
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        facilityRef:
          description: Facility in which the inbound process takes place
          type: string
        onHold:
          description: >-
            Indicates if the inbound process is on hold and will not be
            processed further
          type: boolean
        purchaseOrder:
          $ref: '#/components/schemas/InboundProcessPurchaseOrderForCreation'
        receipts:
          items:
            $ref: '#/components/schemas/InboundReceiptForCreation'
          maxItems: 200
          type: array
        scannableCodes:
          description: >-
            scannableCodes such as barcodes that are relevant in the
            inboundProcess, e.g. , barcode of the delivery note
          items:
            type: string
          type: array
        tenantInboundProcessId:
          description: >-
            Identifier of the process provided by the tenant system. It is
            recommended to be unique
          type: string
      required:
        - facilityRef
      title: InboundProcessForCreation
      type: object
      description: InboundProcessForCreation
    InboundProcessForPatch:
      properties:
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        onHold:
          description: >-
            Indicates if the inbound process is on hold and will not be
            processed further
          type: boolean
        scannableCodes:
          description: >-
            scannableCodes such as barcodes that are relevant in the
            inboundProcess, e.g. , barcode of the delivery note
          items:
            type: string
          type: array
        version:
          type: number
      required:
        - version
      title: InboundProcessForPatch
      type: object
      description: InboundProcessForPatch
    InboundProcessOrigin:
      properties:
        name:
          type: string
      title: InboundProcessOrigin
      type: object
      description: InboundProcessOrigin
    InboundProcessPaginatedResult:
      properties:
        inboundProcesses:
          items:
            $ref: '#/components/schemas/InboundProcess'
          type: array
        total:
          description: >-
            The total number of items matching the search criteria. Only filled,
            if withTotal is set to true in the search options.
          minimum: 0
          type: number
      required:
        - inboundProcesses
      title: InboundProcessPaginatedResult
      type: object
      description: InboundProcessPaginatedResult
    InboundProcessPurchaseOrder:
      properties:
        cancelled:
          deprecated: true
          description: >-
            This field is deprecated. Set the status to 'CANCELED' Set the
            purchaseOrder to 'cancelled'. No further deliveries will be
            expected. Already received goods are unaffected.
          type: boolean
        created:
          format: date-time
          type: string
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        id:
          type: string
        lastModified:
          format: date-time
          type: string
        orderDate:
          description: >-
            Time and date at which the order was placed. Note: This does not
            refer to the creation date of this entity in the system.
          format: date-time
          type: string
        requestedDate:
          allOf:
            - $ref: '#/components/schemas/InputRequestedDate'
          description: >-
            Time and date at which the order is expected to arrive. Use 'ASAP'
            for deliveries with unknown date, but be aware that some features
            will not include these orders.
        requestedItems:
          description: Line items which are expected to be delivered.
          items:
            $ref: '#/components/schemas/InboundLineItem'
          maxItems: 200
          type: array
        status:
          enum:
            - OPEN
            - CANCELED
          type: string
        supplier:
          $ref: '#/components/schemas/InboundProcessPurchaseOrderSupplier'
        transfer:
          allOf:
            - $ref: '#/components/schemas/InboundProcessPurchaseOrderTransfer'
          description: >-
            Includes data about transfer between different facilities in the
            tenant's network.
      required:
        - orderDate
        - requestedDate
        - requestedItems
        - status
        - cancelled
        - id
        - created
        - lastModified
      title: InboundProcessPurchaseOrder
      type: object
      description: InboundProcessPurchaseOrder
    InboundProcessPurchaseOrderFilter:
      properties:
        customAttributes:
          additionalProperties:
            anyOf:
              - $ref: '#/components/schemas/BooleanFilter'
              - $ref: '#/components/schemas/StringEqFilter'
              - $ref: '#/components/schemas/NumberEqFilter'
              - $ref: '#/components/schemas/DateFilter'
          description: Search by custom attributes
          type: object
        id:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by id
        orderDate:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by orderDate
        requestedDate:
          allOf:
            - $ref: >-
                #/components/schemas/InboundProcessPurchaseOrderRequestedDateFilter
          description: Nested search by requestedDate
        requestedItems:
          allOf:
            - $ref: >-
                #/components/schemas/InboundProcessPurchaseOrderRequestedItemsListFilter
          description: Nested list search by requestedItems
        status:
          allOf:
            - $ref: >-
                #/components/schemas/InboundProcessPurchaseOrderPurchaseOrderStatusEnumEnumFilter
          description: Search by status
        supplier:
          allOf:
            - $ref: '#/components/schemas/InboundProcessPurchaseOrderSupplierFilter'
          description: Nested search by supplier
        transfer:
          allOf:
            - $ref: '#/components/schemas/InboundProcessPurchaseOrderTransferFilter'
          description: Nested search by transfer
      title: InboundProcessPurchaseOrderFilter
      type: object
      description: InboundProcessPurchaseOrderFilter
    InboundProcessPurchaseOrderForCreation:
      properties:
        cancelled:
          deprecated: true
          description: >-
            This field is deprecated. Set the status to 'CANCELED' Set the
            purchaseOrder to 'cancelled'. No further deliveries will be
            expected. Already received goods are unaffected.
          type: boolean
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        orderDate:
          description: >-
            Time and date at which the order was placed. Note: This does not
            refer to the creation date of this entity in the system.
          format: date-time
          type: string
        requestedDate:
          allOf:
            - $ref: '#/components/schemas/InputRequestedDate'
          description: >-
            Time and date at which the order is expected to arrive. Use 'ASAP'
            for deliveries with unknown date, but be aware that some features
            will not include these orders.
        requestedItems:
          description: Line items which are expected to be delivered.
          items:
            $ref: '#/components/schemas/InboundLineItem'
          maxItems: 200
          type: array
        status:
          enum:
            - OPEN
            - CANCELED
          type: string
        supplier:
          $ref: '#/components/schemas/InboundProcessPurchaseOrderSupplier'
      required:
        - orderDate
        - requestedDate
        - requestedItems
      title: InboundProcessPurchaseOrderForCreation
      type: object
      description: InboundProcessPurchaseOrderForCreation
    InboundProcessPurchaseOrderForUpsert:
      properties:
        cancelled:
          deprecated: true
          description: >-
            This field is deprecated. Set the status to 'CANCELED' Set the
            purchaseOrder to 'cancelled'. No further deliveries will be
            expected. Already received goods are unaffected.
          type: boolean
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        orderDate:
          description: >-
            Time and date at which the order was placed. Note: This does not
            refer to the creation date of this entity in the system.
          format: date-time
          type: string
        requestedDate:
          allOf:
            - $ref: '#/components/schemas/InputRequestedDate'
          description: >-
            Time and date at which the order is expected to arrive. Use 'ASAP'
            for deliveries with unknown date, but be aware that some features
            will not include these orders.
        requestedItems:
          description: Line items which are expected to be delivered.
          items:
            $ref: '#/components/schemas/InboundLineItem'
          maxItems: 200
          type: array
        status:
          enum:
            - OPEN
            - CANCELED
          type: string
        supplier:
          $ref: '#/components/schemas/InboundProcessPurchaseOrderSupplier'
        version:
          type: number
      required:
        - orderDate
        - requestedDate
        - requestedItems
        - version
      title: InboundProcessPurchaseOrderForUpsert
      type: object
      description: InboundProcessPurchaseOrderForUpsert
    InboundProcessPurchaseOrderPurchaseOrderStatusEnumEnumFilter:
      properties:
        eq:
          description: Search by status
          enum:
            - OPEN
            - CANCELED
          type: string
        in:
          description: Search by status
          enum:
            - OPEN
            - CANCELED
          type: string
        notEq:
          description: Search by status
          enum:
            - OPEN
            - CANCELED
          type: string
      title: InboundProcessPurchaseOrderPurchaseOrderStatusEnumEnumFilter
      type: object
      description: InboundProcessPurchaseOrderPurchaseOrderStatusEnumEnumFilter
    InboundProcessPurchaseOrderRequestedDateFilter:
      properties:
        type:
          allOf:
            - $ref: >-
                #/components/schemas/InboundProcessPurchaseOrderRequestedDateRequestedDateTypeEnumFilter
          description: Search by type
        value:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by value
      title: InboundProcessPurchaseOrderRequestedDateFilter
      type: object
      description: InboundProcessPurchaseOrderRequestedDateFilter
    InboundProcessPurchaseOrderRequestedDateRequestedDateTypeEnumFilter:
      properties:
        eq:
          description: Search by type
          enum:
            - ASAP
            - TIME_POINT
          type: string
        in:
          description: Search by type
          enum:
            - ASAP
            - TIME_POINT
          type: string
        notEq:
          description: Search by type
          enum:
            - ASAP
            - TIME_POINT
          type: string
      title: InboundProcessPurchaseOrderRequestedDateRequestedDateTypeEnumFilter
      type: object
      description: InboundProcessPurchaseOrderRequestedDateRequestedDateTypeEnumFilter
    InboundProcessPurchaseOrderRequestedItemsFilter:
      properties:
        customAttributes:
          additionalProperties:
            anyOf:
              - $ref: '#/components/schemas/BooleanFilter'
              - $ref: '#/components/schemas/StringEqFilter'
              - $ref: '#/components/schemas/NumberEqFilter'
              - $ref: '#/components/schemas/DateFilter'
          description: Search by custom attributes
          type: object
        stockProperties:
          additionalProperties:
            anyOf:
              - $ref: '#/components/schemas/StringFilter'
              - $ref: '#/components/schemas/KeyExistsFilter'
          description: Search by stockProperties
          type: object
        tenantArticleId:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by tenantArticleId
      title: InboundProcessPurchaseOrderRequestedItemsFilter
      type: object
      description: InboundProcessPurchaseOrderRequestedItemsFilter
    InboundProcessPurchaseOrderRequestedItemsListFilter:
      properties:
        contains:
          allOf:
            - $ref: >-
                #/components/schemas/InboundProcessPurchaseOrderRequestedItemsFilter
          description: Contains returns if at least one entry matches
      title: InboundProcessPurchaseOrderRequestedItemsListFilter
      type: object
      description: InboundProcessPurchaseOrderRequestedItemsListFilter
    InboundProcessPurchaseOrderSort:
      properties:
        requestedDate:
          $ref: '#/components/schemas/InboundProcessRequestedDateSort'
        supplier:
          $ref: '#/components/schemas/InboundProcessSupplierSort'
      title: InboundProcessPurchaseOrderSort
      type: object
      description: InboundProcessPurchaseOrderSort
    InboundProcessPurchaseOrderSupplier:
      properties:
        name:
          description: Name of the supplier.
          type: string
      title: InboundProcessPurchaseOrderSupplier
      type: object
      description: InboundProcessPurchaseOrderSupplier
    InboundProcessPurchaseOrderSupplierFilter:
      properties:
        name:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by name
      title: InboundProcessPurchaseOrderSupplierFilter
      type: object
      description: InboundProcessPurchaseOrderSupplierFilter
    InboundProcessPurchaseOrderTransfer:
      properties:
        id:
          type: string
      required:
        - id
      title: InboundProcessPurchaseOrderTransfer
      type: object
      description: InboundProcessPurchaseOrderTransfer
    InboundProcessPurchaseOrderTransferFilter:
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by id
      title: InboundProcessPurchaseOrderTransferFilter
      type: object
      description: InboundProcessPurchaseOrderTransferFilter
    InboundProcessReceiptBulkWebHookEvent:
      properties:
        payload:
          $ref: '#/components/schemas/InboundProcessReceiptBulkWebHookEventPayload'
      required:
        - payload
      title: InboundProcessReceiptBulkWebHookEvent
      type: object
      description: InboundProcessReceiptBulkWebHookEvent
    InboundProcessReceiptBulkWebHookEventPayload:
      properties:
        items:
          items:
            $ref: '#/components/schemas/InboundDeliverySingleReceiptPayload'
          type: array
      required:
        - items
      title: InboundProcessReceiptBulkWebHookEventPayload
      type: object
      description: InboundProcessReceiptBulkWebHookEventPayload
    InboundProcessReceiptsFilter:
      properties:
        customAttributes:
          additionalProperties:
            anyOf:
              - $ref: '#/components/schemas/BooleanFilter'
              - $ref: '#/components/schemas/StringEqFilter'
              - $ref: '#/components/schemas/NumberEqFilter'
              - $ref: '#/components/schemas/DateFilter'
          description: Search by custom attributes
          type: object
        id:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by id
        receivedDate:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by receivedDate
        receivedItems:
          allOf:
            - $ref: >-
                #/components/schemas/InboundProcessReceiptsReceivedItemsListFilter
          description: Nested list search by receivedItems
        status:
          allOf:
            - $ref: >-
                #/components/schemas/InboundProcessReceiptsInboundReceiptStatusTypeEnumFilter
          description: Search by status
      title: InboundProcessReceiptsFilter
      type: object
      description: InboundProcessReceiptsFilter
    InboundProcessReceiptsInboundReceiptStatusTypeEnumFilter:
      properties:
        eq:
          description: Search by status
          enum:
            - OPEN
            - IN_PROGRESS
            - FINISHED
          type: string
        in:
          description: Search by status
          enum:
            - OPEN
            - IN_PROGRESS
            - FINISHED
          type: string
        notEq:
          description: Search by status
          enum:
            - OPEN
            - IN_PROGRESS
            - FINISHED
          type: string
      title: InboundProcessReceiptsInboundReceiptStatusTypeEnumFilter
      type: object
      description: InboundProcessReceiptsInboundReceiptStatusTypeEnumFilter
    InboundProcessReceiptsListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/InboundProcessReceiptsFilter'
          description: Contains returns if at least one entry matches
      title: InboundProcessReceiptsListFilter
      type: object
      description: InboundProcessReceiptsListFilter
    InboundProcessReceiptsReceivedItemsFilter:
      properties:
        stockProperties:
          additionalProperties:
            anyOf:
              - $ref: '#/components/schemas/StringFilter'
              - $ref: '#/components/schemas/KeyExistsFilter'
          description: Search by stockProperties
          type: object
        tenantArticleId:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by tenantArticleId
      title: InboundProcessReceiptsReceivedItemsFilter
      type: object
      description: InboundProcessReceiptsReceivedItemsFilter
    InboundProcessReceiptsReceivedItemsListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/InboundProcessReceiptsReceivedItemsFilter'
          description: Contains returns if at least one entry matches
      title: InboundProcessReceiptsReceivedItemsListFilter
      type: object
      description: InboundProcessReceiptsReceivedItemsListFilter
    InboundProcessRequestedDateSort:
      properties:
        type:
          enum:
            - ASC
            - DESC
          type: string
        value:
          enum:
            - ASC
            - DESC
          type: string
      title: InboundProcessRequestedDateSort
      type: object
      description: InboundProcessRequestedDateSort
    InboundProcessSearchPayload:
      properties:
        options:
          $ref: '#/components/schemas/SearchOptions'
        query:
          $ref: '#/components/schemas/InboundProcessSearchQuery'
        size:
          default: 20
          description: Number of items to return.
          maximum: 250
          minimum: 1
          type: number
        sort:
          description: Use for sorting the result.
          items:
            $ref: '#/components/schemas/InboundProcessSort'
          maxItems: 1
          minItems: 1
          type: array
        startAfterId:
          description: The ID to start after.
          type: string
      required:
        - query
      title: InboundProcessSearchPayload
      type: object
      description: InboundProcessSearchPayload
    InboundProcessSearchQuery:
      properties:
        and:
          items:
            $ref: '#/components/schemas/InboundProcessSearchQuery'
          type: array
        customAttributes:
          additionalProperties:
            anyOf:
              - $ref: '#/components/schemas/BooleanFilter'
              - $ref: '#/components/schemas/StringEqFilter'
              - $ref: '#/components/schemas/NumberEqFilter'
              - $ref: '#/components/schemas/DateFilter'
          description: Search by custom attributes
          type: object
        facilityRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by facilityRef
        id:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by id
        inboundDate:
          allOf:
            - $ref: '#/components/schemas/DateListFilter'
          description: Search by inboundDate
        or:
          items:
            $ref: '#/components/schemas/InboundProcessSearchQuery'
          type: array
        purchaseOrder:
          allOf:
            - $ref: '#/components/schemas/InboundProcessPurchaseOrderFilter'
          description: Nested search by purchaseOrder
        receipts:
          allOf:
            - $ref: '#/components/schemas/InboundProcessReceiptsListFilter'
          description: Nested list search by receipts
        scannableCodes:
          allOf:
            - $ref: '#/components/schemas/StringListFilter'
          description: Search by scannableCodes
        status:
          allOf:
            - $ref: '#/components/schemas/InboundProcessStatusTypeEnumFilter'
          description: Search by status
        tenantInboundProcessId:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by tenantInboundProcessId
      title: InboundProcessSearchQuery
      type: object
      description: InboundProcessSearchQuery
    InboundProcessSort:
      properties:
        customAttributes:
          additionalProperties: true
          maxProperties: 1
          minProperties: 1
          type: object
        lastModified:
          enum:
            - ASC
            - DESC
          type: string
        po_created:
          enum:
            - ASC
            - DESC
          type: string
        purchaseOrder:
          $ref: '#/components/schemas/InboundProcessPurchaseOrderSort'
      title: InboundProcessSort
      type: object
      description: InboundProcessSort
    InboundProcessStatusTypeEnumFilter:
      properties:
        eq:
          description: Search by status
          enum:
            - OPEN
            - PARTIAL_DELIVERY
            - ON_HOLD
            - CLOSED
          type: string
        in:
          description: Search by status
          enum:
            - OPEN
            - PARTIAL_DELIVERY
            - ON_HOLD
            - CLOSED
          type: string
        notEq:
          description: Search by status
          enum:
            - OPEN
            - PARTIAL_DELIVERY
            - ON_HOLD
            - CLOSED
          type: string
      title: InboundProcessStatusTypeEnumFilter
      type: object
      description: InboundProcessStatusTypeEnumFilter
    InboundProcessSupplierSort:
      properties:
        name:
          enum:
            - ASC
            - DESC
          type: string
      title: InboundProcessSupplierSort
      type: object
      description: InboundProcessSupplierSort
    InboundReceipt:
      properties:
        asnRef:
          description: enables mapping a receipt to one of the ASNs in this inbound process
          type: string
        comments:
          description: comments regarding the receipt itself
          items:
            $ref: '#/components/schemas/InboundReceiptComment'
          maxItems: 20
          type: array
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        id:
          type: string
        receivedDate:
          description: date-time of the arrival of the items in the facility
          format: date-time
          type: string
        receivedItems:
          description: list of item that arrived in the facility
          items:
            $ref: '#/components/schemas/InboundReceiptLineItem'
          maxItems: 200
          type: array
        status:
          description: >-
            status of this receipt, only receipts with status 'FINISHED' are
            booked. IN_PROGRESS can be used to save partial receipts.
          enum:
            - OPEN
            - IN_PROGRESS
            - FINISHED
          type: string
      required:
        - receivedDate
        - receivedItems
        - comments
        - id
      title: InboundReceipt
      type: object
      description: InboundReceipt
    InboundReceiptComment:
      properties:
        attachments:
          deprecated: true
          description: attachments such as photos or documents
          items:
            $ref: '#/components/schemas/InboundAttachmentLink'
          type: array
        content:
          description: text content of the comment
          type: string
        documentSetRef:
          description: >-
            reference to the documentSet that contains the attachments.
            Read-only field
          type: string
        id:
          type: string
        userRef:
          description: >-
            user that added the comment, is anonymized according to specified
            rules
          type: string
      required:
        - content
      title: InboundReceiptComment
      type: object
      description: InboundReceiptComment
    InboundReceiptCommentForCreation:
      properties:
        attachments:
          deprecated: true
          description: attachments such as photos or documents
          items:
            $ref: '#/components/schemas/InboundAttachmentLink'
          type: array
        content:
          description: text content of the comment
          type: string
        userRef:
          description: >-
            user that added the comment, is anonymized according to specified
            rules
          type: string
      required:
        - content
      title: InboundReceiptCommentForCreation
      type: object
      description: InboundReceiptCommentForCreation
    InboundReceiptCommentForUpdate:
      properties:
        attachments:
          deprecated: true
          description: attachments such as photos or documents
          items:
            $ref: '#/components/schemas/InboundAttachmentLink'
          type: array
        content:
          description: text content of the comment
          type: string
        id:
          type: string
        userRef:
          description: >-
            user that added the comment, is anonymized according to specified
            rules
          type: string
      required:
        - content
      title: InboundReceiptCommentForUpdate
      type: object
      description: InboundReceiptCommentForUpdate
    InboundReceiptForCreation:
      properties:
        asnRef:
          description: enables mapping a receipt to one of the ASNs in this inbound process
          type: string
        comments:
          description: comments regarding the receipt itself
          items:
            $ref: '#/components/schemas/InboundReceiptCommentForCreation'
          maxItems: 20
          type: array
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        receivedDate:
          description: date-time of the arrival of the items in the facility
          format: date-time
          type: string
        receivedItems:
          description: list of item that arrived in the facility
          items:
            $ref: '#/components/schemas/InboundReceiptLineItemForCreation'
          maxItems: 200
          type: array
        status:
          description: >-
            status of this receipt, only receipts with status 'FINISHED' are
            booked. IN_PROGRESS can be used to save partial receipts.
          enum:
            - OPEN
            - IN_PROGRESS
            - FINISHED
          type: string
      required:
        - receivedDate
        - receivedItems
        - comments
      title: InboundReceiptForCreation
      type: object
      description: InboundReceiptForCreation
    InboundReceiptForPatch:
      properties:
        asnRef:
          description: enables mapping a receipt to one of the ASNs in this inbound process
          type: string
        comments:
          description: comments regarding the receipt itself
          items:
            $ref: '#/components/schemas/InboundReceiptCommentForUpdate'
          maxItems: 20
          type: array
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        receivedDate:
          description: date-time of the arrival of the items in the facility
          format: date-time
          type: string
        receivedItems:
          description: list of item that arrived in the facility
          items:
            $ref: '#/components/schemas/InboundReceiptLineItemForUpdate'
          maxItems: 200
          type: array
        status:
          description: >-
            status of this receipt, only receipts with status 'FINISHED' are
            booked. IN_PROGRESS can be used to save partial receipts.
          enum:
            - OPEN
            - IN_PROGRESS
            - FINISHED
          type: string
        version:
          type: number
      required:
        - version
      title: InboundReceiptForPatch
      type: object
      description: InboundReceiptForPatch
    InboundReceiptForUpdate:
      properties:
        asnRef:
          description: enables mapping a receipt to one of the ASNs in this inbound process
          type: string
        comments:
          description: comments regarding the receipt itself
          items:
            $ref: '#/components/schemas/InboundReceiptComment'
          maxItems: 20
          type: array
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        receivedDate:
          description: date-time of the arrival of the items in the facility
          format: date-time
          type: string
        receivedItems:
          description: list of item that arrived in the facility
          items:
            $ref: '#/components/schemas/InboundReceiptLineItemForUpdate'
          maxItems: 200
          type: array
        status:
          description: >-
            status of this receipt, only receipts with status 'FINISHED' are
            booked. IN_PROGRESS can be used to save partial receipts.
          enum:
            - OPEN
            - IN_PROGRESS
            - FINISHED
          type: string
        version:
          type: number
      required:
        - receivedDate
        - receivedItems
        - comments
        - version
      title: InboundReceiptForUpdate
      type: object
      description: InboundReceiptForUpdate
    InboundReceiptJob:
      properties:
        expectedDate:
          $ref: '#/components/schemas/RequestedDate'
        facilityRef:
          type: string
        id:
          type: string
        inboundProcessRef:
          type: string
        items:
          $ref: '#/components/schemas/InboundLineItem'
        origin:
          $ref: '#/components/schemas/InboundReceiptJobOrigin'
        originReadableId:
          type: string
        originReadableName:
          type: string
        status:
          enum:
            - OPEN
            - PARTIAL_DELIVERY
            - ON_HOLD
            - CLOSED
          type: string
      required:
        - id
        - facilityRef
        - inboundProcessRef
        - status
        - expectedDate
        - items
        - origin
      title: InboundReceiptJob
      type: object
      description: InboundReceiptJob
    InboundReceiptJobOrigin:
      properties:
        name:
          type: string
      title: InboundReceiptJobOrigin
      type: object
      description: InboundReceiptJobOrigin
    InboundReceiptJobPaginatedResult:
      properties:
        inboundReceiptJobs:
          items:
            $ref: '#/components/schemas/InboundReceiptJob'
          type: array
        total:
          minimum: 0
          type: number
      required:
        - total
        - inboundReceiptJobs
      title: InboundReceiptJobPaginatedResult
      type: object
      description: InboundReceiptJobPaginatedResult
    InboundReceiptLineItem:
      properties:
        acceptedQuantity:
          allOf:
            - $ref: '#/components/schemas/Quantity'
          description: >-
            quantity of the stock that was accepted in this receipt. If its
            larger than 0, Stock will be created when this receipt is FINISHED.
        comments:
          description: comments regarding the receival of this item
          items:
            $ref: '#/components/schemas/InboundReceiptComment'
          maxItems: 20
          type: array
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        id:
          type: string
        rejectedQuantity:
          allOf:
            - $ref: '#/components/schemas/Quantity'
          description: >-
            quantity of the stock that was rejected in this receipt. If it is
            larger than 0, Stock will be created with condition "defective" when
            this receipt is FINISHED.
        stockProperties:
          additionalProperties:
            type: string
          allOf:
            - $ref: '#/components/schemas/StockPropertyPreset'
          description: stock properties that will be set on the created stock
        storageLocationRef:
          description: storage location on which stock was placed
          type: string
        tenantArticleId:
          description: tenantArticleId of the stock that was received
          type: string
      required:
        - tenantArticleId
        - acceptedQuantity
        - rejectedQuantity
        - comments
      title: InboundReceiptLineItem
      type: object
      description: InboundReceiptLineItem
    InboundReceiptLineItemForCreation:
      properties:
        acceptedQuantity:
          allOf:
            - $ref: '#/components/schemas/Quantity'
          description: >-
            quantity of the stock that was accepted in this receipt. If its
            larger than 0, Stock will be created when this receipt is FINISHED.
        comments:
          description: comments regarding the receival of this item
          items:
            $ref: '#/components/schemas/InboundReceiptCommentForCreation'
          maxItems: 20
          type: array
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        rejectedQuantity:
          allOf:
            - $ref: '#/components/schemas/Quantity'
          description: >-
            quantity of the stock that was rejected in this receipt. If it is
            larger than 0, Stock will be created with condition "defective" when
            this receipt is FINISHED.
        stockProperties:
          additionalProperties:
            type: string
          allOf:
            - $ref: '#/components/schemas/StockPropertyPreset'
          description: stock properties that will be set on the created stock
        storageLocationRef:
          description: storage location on which stock was placed
          type: string
        tenantArticleId:
          description: tenantArticleId of the stock that was received
          type: string
      required:
        - tenantArticleId
        - acceptedQuantity
        - rejectedQuantity
        - comments
      title: InboundReceiptLineItemForCreation
      type: object
      description: InboundReceiptLineItemForCreation
    InboundReceiptLineItemForUpdate:
      properties:
        acceptedQuantity:
          allOf:
            - $ref: '#/components/schemas/Quantity'
          description: >-
            quantity of the stock that was accepted in this receipt. If its
            larger than 0, Stock will be created when this receipt is FINISHED.
        comments:
          description: comments regarding the receival of this item
          items:
            $ref: '#/components/schemas/InboundReceiptCommentForUpdate'
          maxItems: 20
          type: array
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        id:
          type: string
        rejectedQuantity:
          allOf:
            - $ref: '#/components/schemas/Quantity'
          description: >-
            quantity of the stock that was rejected in this receipt. If it is
            larger than 0, Stock will be created with condition "defective" when
            this receipt is FINISHED.
        stockProperties:
          additionalProperties:
            type: string
          allOf:
            - $ref: '#/components/schemas/StockPropertyPreset'
          description: stock properties that will be set on the created stock
        storageLocationRef:
          description: storage location on which stock was placed
          type: string
        tenantArticleId:
          description: tenantArticleId of the stock that was received
          type: string
      required:
        - tenantArticleId
        - acceptedQuantity
        - rejectedQuantity
        - comments
      title: InboundReceiptLineItemForUpdate
      type: object
      description: InboundReceiptLineItemForUpdate
    InputRequestedDate:
      properties:
        type:
          enum:
            - ASAP
            - TIME_POINT
          type: string
        value:
          format: date-time
          type: string
      required:
        - type
      title: InputRequestedDate
      type: object
      description: InputRequestedDate
    InventoryArticle:
      properties:
        attributes:
          items:
            $ref: '#/components/schemas/ListingAttributeItem'
          type: array
        imageUrl:
          type: string
        tenantArticleId:
          type: string
        title:
          type: string
        titleLocalized:
          $ref: '#/components/schemas/LocaleString'
      required:
        - imageUrl
        - tenantArticleId
        - title
      title: InventoryArticle
      type: object
      description: InventoryArticle
    InventoryArticlePaginatedResult:
      properties:
        articles:
          items:
            $ref: '#/components/schemas/InventoryArticle'
          type: array
        total:
          minimum: 0
          type: number
      required:
        - total
        - articles
      title: InventoryArticlePaginatedResult
      type: object
      description: InventoryArticlePaginatedResult
    InventoryAvailabilityTimeframe:
      properties:
        start:
          format: date-time
          type: string
      title: InventoryAvailabilityTimeframe
      type: object
      description: InventoryAvailabilityTimeframe
    InventoryAvailableUntilDefinition:
      properties:
        calculationBase:
          enum:
            - CREATION
            - EXPIRY
          type: string
        modifier:
          type: string
      required:
        - calculationBase
      title: InventoryAvailableUntilDefinition
      type: object
      description: InventoryAvailableUntilDefinition
    InventoryConfiguration:
      properties:
        isMixedStorage:
          type: boolean
        version:
          type: number
      required:
        - version
      title: InventoryConfiguration
      type: object
      description: InventoryConfiguration
    InventoryConfigurationForPatch:
      properties:
        isMixedStorage:
          nullable: true
          type: boolean
        version:
          type: number
      required:
        - version
      title: InventoryConfigurationForPatch
      type: object
      description: InventoryConfigurationForPatch
    InventoryFacilityConfiguration:
      properties:
        facilityRef:
          type: string
        id:
          type: string
        isMixedStorage:
          type: boolean
        outboundStockConfiguration:
          $ref: '#/components/schemas/OutboundStockConfiguration'
        version:
          type: number
      required:
        - id
        - version
        - facilityRef
      title: InventoryFacilityConfiguration
      type: object
      description: InventoryFacilityConfiguration
    InventoryFacilityConfigurationForPatch:
      properties:
        isMixedStorage:
          nullable: true
          type: boolean
        outboundStockConfiguration:
          $ref: '#/components/schemas/OutboundStockConfiguration'
        version:
          type: number
      required:
        - version
      title: InventoryFacilityConfigurationForPatch
      type: object
      description: InventoryFacilityConfigurationForPatch
    InventoryFacilityStockDeltaShape:
      properties:
        available:
          deprecated: true
          type: number
        availableForPicking:
          type: number
        availableForPickingDetails:
          $ref: '#/components/schemas/AvailableForPickingDetails'
        availableOnStock:
          type: number
        availableToPromise:
          deprecated: true
          type: number
        byTrait:
          $ref: '#/components/schemas/InventoryFacilityStockShapeByTrait'
        readyToPick:
          deprecated: true
          type: number
        reserved:
          type: number
        safetyStock:
          type: number
        stockCount:
          type: number
        stockOnHand:
          type: number
        totalAmount:
          type: number
      required:
        - totalAmount
        - reserved
        - safetyStock
        - available
        - byTrait
        - availableToPromise
        - readyToPick
        - availableForPicking
        - stockCount
        - availableOnStock
        - stockOnHand
        - availableForPickingDetails
      title: InventoryFacilityStockDeltaShape
      type: object
      description: InventoryFacilityStockDeltaShape
    InventoryFacilityStockShape:
      properties:
        available:
          deprecated: true
          description: >-
            This field is deprecated and replaced by new availability concepts.
            Please see
            https://docs.fulfillmenttools.com/api-docs/use-cases/inventory-management/global-inventory/availability
            for more information.
          type: number
        availableForPicking:
          type: number
        availableForPickingDetails:
          $ref: '#/components/schemas/AvailableForPickingDetails'
        availableOnStock:
          type: number
        availableToPromise:
          deprecated: true
          description: >-
            This field is deprecated and replaced by new availability concepts.
            Please see
            https://docs.fulfillmenttools.com/api-docs/use-cases/inventory-management/global-inventory/availability
            for more information.
          type: number
        byTrait:
          $ref: '#/components/schemas/InventoryFacilityStockShapeByTrait'
        changeReason:
          enum:
            - UNKNOWN
          type: string
        delta:
          $ref: '#/components/schemas/InventoryFacilityStockDeltaShape'
        facilityRef:
          type: string
        readyToPick:
          deprecated: true
          description: >-
            This field is deprecated and replaced by new availability concepts.
            Please see
            https://docs.fulfillmenttools.com/api-docs/use-cases/inventory-management/global-inventory/availability
            for more information.
          type: number
        reserved:
          type: number
        safetyStock:
          type: number
        staleReasons:
          items:
            $ref: '#/components/schemas/InventoryFacilityStockStaleReason'
          type: array
        stockOnHand:
          type: number
        tenantArticleId:
          type: string
        totalAmount:
          type: number
      required:
        - facilityRef
        - tenantArticleId
        - totalAmount
        - reserved
        - safetyStock
        - available
        - byTrait
        - changeReason
        - availableToPromise
        - readyToPick
        - availableForPicking
        - availableForPickingDetails
        - delta
        - staleReasons
        - stockOnHand
        - availableOnStock
      title: InventoryFacilityStockShape
      type: object
      description: InventoryFacilityStockShape
    InventoryFacilityStockShapeByTrait:
      properties:
        ACCESSIBLE:
          type: number
        PICKABLE:
          type: number
      required:
        - PICKABLE
        - ACCESSIBLE
      title: InventoryFacilityStockShapeByTrait
      type: object
      description: InventoryFacilityStockShapeByTrait
    InventoryFacilityStockStaleReason:
      properties:
        reasons:
          items:
            type: string
          type: array
        timestamp:
          format: date-time
          type: string
      required:
        - timestamp
        - reasons
      title: InventoryFacilityStockStaleReason
      type: object
      description: InventoryFacilityStockStaleReason
    InventoryListingAttributeItem:
      properties:
        category:
          enum:
            - descriptive
            - miscellaneous
            - pickingSequence
            - customs
            - insurance
            - shop
            - dimensions
            - carrierService
          type: string
        key:
          type: string
        keyLocalized:
          additionalProperties:
            type: string
          description: >-
            Provides Localized values. The key is the locale, the value is the
            translation. See
            https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/localization#fallback-language-mechanism
          example:
            de_DE: Wert
            en_US: Value
            ru_RU: значение
          type: object
        priority:
          type: number
        value:
          type: string
        valueLocalized:
          additionalProperties:
            type: string
          description: >-
            Provides Localized values. The key is the locale, the value is the
            translation. See
            https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/localization#fallback-language-mechanism
          example:
            de_DE: Wert
            en_US: Value
            ru_RU: значение
          type: object
      required:
        - key
        - value
      title: InventoryListingAttributeItem
      type: object
      description: InventoryListingAttributeItem
    InventoryListingEventPayload:
      properties:
        attributes:
          items:
            $ref: '#/components/schemas/InventoryListingAttributeItem'
          type: array
        availabilityTimeframe:
          $ref: '#/components/schemas/InventoryAvailabilityTimeframe'
        created:
          format: date-time
          type: string
        currency:
          description: The currency of the price as an ISO 4217 code.
          enum:
            - AED
            - AFN
            - ALL
            - AMD
            - ANG
            - AOA
            - ARS
            - AUD
            - AWG
            - AZN
            - BAM
            - BBD
            - BDT
            - BGN
            - BHD
            - BIF
            - BMD
            - BND
            - BOB
            - BOV
            - BRL
            - BSD
            - BTN
            - BWP
            - BYN
            - BZD
            - CAD
            - CDF
            - CHE
            - CHF
            - CHW
            - CLF
            - CLP
            - CNY
            - COP
            - COU
            - CRC
            - CUC
            - CUP
            - CVE
            - CZK
            - DJF
            - DKK
            - DOP
            - DZD
            - EGP
            - ERN
            - ETB
            - EUR
            - FJD
            - FKP
            - GBP
            - GEL
            - GHS
            - GIP
            - GMD
            - GNF
            - GTQ
            - GYD
            - HKD
            - HNL
            - HTG
            - HUF
            - IDR
            - ILS
            - INR
            - IQD
            - IRR
            - ISK
            - JMD
            - JOD
            - JPY
            - KES
            - KGS
            - KHR
            - KMF
            - KPW
            - KRW
            - KWD
            - KYD
            - KZT
            - LAK
            - LBP
            - LKR
            - LRD
            - LSL
            - LYD
            - MAD
            - MDL
            - MGA
            - MKD
            - MMK
            - MNT
            - MOP
            - MRU
            - MUR
            - MVR
            - MWK
            - MXN
            - MXV
            - MYR
            - MZN
            - NAD
            - NGN
            - NIO
            - NOK
            - NPR
            - NZD
            - OMR
            - PAB
            - PEN
            - PGK
            - PHP
            - PKR
            - PLN
            - PYG
            - QAR
            - RON
            - RSD
            - RUB
            - RWF
            - SAR
            - SBD
            - SCR
            - SDG
            - SEK
            - SGD
            - SHP
            - SLE
            - SOS
            - SRD
            - SSP
            - STN
            - SVC
            - SYP
            - SZL
            - THB
            - TJS
            - TMT
            - TND
            - TOP
            - TRY
            - TTD
            - TWD
            - TZS
            - UAH
            - UGX
            - USD
            - USN
            - UYI
            - UYU
            - UYW
            - UZS
            - VED
            - VES
            - VND
            - VUV
            - WST
            - XAF
            - XAG
            - XAU
            - XBA
            - XBB
            - XBC
            - XBD
            - XCD
            - XDR
            - XOF
            - XPD
            - XPF
            - XPT
            - XSU
            - XTS
            - XUA
            - XXX
            - YER
            - ZAR
            - ZMW
            - ZWL
          type: string
        facilityId:
          type: string
        id:
          type: string
        imageUrl:
          type: string
        lastModified:
          format: date-time
          type: string
        measurementUnitKey:
          type: string
        outOfStockBehaviour:
          enum:
            - BACKORDER
            - PREORDER
            - RESTOCK
          type: string
        price:
          type: number
        scannableCodes:
          items:
            type: string
          type: array
        scanningRule:
          $ref: '#/components/schemas/InventoryScanningRuleConfiguration'
        status:
          enum:
            - ACTIVE
            - INACTIVE
          type: string
        stockAvailableUntil:
          $ref: '#/components/schemas/InventoryAvailableUntilDefinition'
        stockProperties:
          additionalProperties:
            $ref: '#/components/schemas/InventoryStockPropertyDefinition'
          type: object
        tags:
          items:
            $ref: '#/components/schemas/InventoryTagReference'
          type: array
        tenantArticleId:
          type: string
        title:
          type: string
        titleLocalized:
          additionalProperties:
            type: string
          description: >-
            Provides Localized values. The key is the locale, the value is the
            translation. See
            https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/localization#fallback-language-mechanism
          example:
            de_DE: Wert
            en_US: Value
            ru_RU: значение
          type: object
        version:
          type: number
        weight:
          type: number
      required:
        - id
        - version
        - created
        - lastModified
        - facilityId
        - tenantArticleId
        - status
        - title
      title: InventoryListingEventPayload
      type: object
      description: InventoryListingEventPayload
    InventoryScanningRuleConfiguration:
      properties:
        values:
          items:
            $ref: '#/components/schemas/InventoryScanningRuleValue'
          type: array
      title: InventoryScanningRuleConfiguration
      type: object
      description: InventoryScanningRuleConfiguration
    InventoryScanningRuleValue:
      properties:
        priority:
          type: number
        scanningRuleType:
          enum:
            - ARTICLE
            - LOCATION
          type: string
      required:
        - priority
        - scanningRuleType
      title: InventoryScanningRuleValue
      type: object
      description: InventoryScanningRuleValue
    InventoryStockBulkWebHookEvent:
      properties:
        payload:
          $ref: '#/components/schemas/InventoryStockWebHookEventPayload'
      required:
        - payload
      title: InventoryStockBulkWebHookEvent
      type: object
      description: InventoryStockBulkWebHookEvent
    InventoryStockDelta:
      properties:
        previousLocationRef:
          nullable: true
          type: string
        reserved:
          type: number
        stockCount:
          type: number
        value:
          type: number
      required:
        - previousLocationRef
        - value
        - reserved
        - stockCount
      title: InventoryStockDelta
      type: object
      description: InventoryStockDelta
    InventoryStockPropertyDefinition:
      properties:
        inputType:
          enum:
            - DATE
            - TEXT
          type: string
        required:
          type: boolean
      required:
        - inputType
        - required
      title: InventoryStockPropertyDefinition
      type: object
      description: InventoryStockPropertyDefinition
    InventoryStockWebHookEventPayload:
      properties:
        items:
          items:
            $ref: '#/components/schemas/InventoryStockWebHookEventPayloadItem'
          type: array
      required:
        - items
      title: InventoryStockWebHookEventPayload
      type: object
      description: InventoryStockWebHookEventPayload
    InventoryStockWebHookEventPayloadItem:
      properties:
        available:
          type: number
        availableUntil:
          description: >-
            defines until when a stock is included in the stock availability as
            available and used for routing
          format: date-time
          type: string
        conditions:
          description: |-
            Describes conditions of a stock
                *`DEFECTIVE` - stock is defective, not usable for customer orders
          items:
            enum:
              - DEFECTIVE
            type: string
          type: array
        created:
          format: date-time
          type: string
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        delta:
          $ref: '#/components/schemas/InventoryStockDelta'
        facilityRef:
          description: facility in which the stock is located
          type: string
        facilityWideReserved:
          deprecated: true
          type: number
        id:
          type: string
        lastModified:
          format: date-time
          type: string
        locationRef:
          description: location on which the stock is placed
          type: string
        properties:
          additionalProperties:
            type: string
          allOf:
            - $ref: '#/components/schemas/StockPropertyPreset'
          description: >-
            allow tracking of specific values such as expiry dates on a set of
            items. They should describe physical identifiable properties of the
            stock and are not meant to be used for metadata (see
            "customAttributes" for that).
        receiptDate:
          description: >-
            date-time when stock has entered the system, defaults to the
            creation date
          format: date-time
          type: string
        reserved:
          description: amount of this stock for customer orders
          type: number
        scannableCodes:
          description: scannableCodes such as barcodes that identify this stock
          items:
            type: string
          type: array
        scores:
          description: >-
            stock with a high score can used preferably over stock with a lower
            score in routing, depending on configuration. The score can
            represent different attributes of the stock like zone, storage
            location, expiry date or receipt date.
          items:
            type: string
          type: array
        serializedProperties:
          description: >-
            properties object serialized as JSON string, sorted alphabetically
            by key
          type: string
        tenantArticleId:
          description: tenantArticleId of the stock
          type: string
        tenantStockId:
          description: >-
            tenantStockId is an optional identifier for the stock in the tenant
            system, only set on stocks synced from listings
          type: string
        traitConfig:
          description: >-
            defines the traits of the stock, overrules the storage location
            traits
          items:
            $ref: '#/components/schemas/StorageLocationTraitConfigEntry'
          type: array
        traits:
          description: >-
            provide information on how storage locations and stocks are to be
            handled in operational processes. Can only be set via
            storageLocation. 
          items:
            enum:
              - PICKABLE
              - ACCESSIBLE
              - KEEP_ON_ZERO
              - OUTBOUND
              - IN_MOTION
            type: string
          type: array
        value:
          format: int32
          minimum: 0
          type: integer
        version:
          type: number
      required:
        - facilityRef
        - tenantArticleId
        - value
        - reserved
        - facilityWideReserved
        - available
        - id
        - version
        - created
        - lastModified
        - traits
        - serializedProperties
        - delta
      title: InventoryStockWebHookEventPayloadItem
      type: object
      description: InventoryStockWebHookEventPayloadItem
    InventoryTagReference:
      properties:
        id:
          type: string
        value:
          type: string
      required:
        - id
        - value
      title: InventoryTagReference
      type: object
      description: InventoryTagReference
    KeyExistsFilter:
      properties:
        exists:
          description: Search all entities which have or do not have this key defined
          type: boolean
      title: KeyExistsFilter
      type: object
      description: KeyExistsFilter
    LinkedServiceJobsSearchPayload:
      properties:
        options:
          $ref: '#/components/schemas/SearchOptions'
        query:
          $ref: '#/components/schemas/LinkedServiceJobsSearchQuery'
        size:
          default: 20
          description: Number of items to return.
          maximum: 250
          minimum: 1
          type: number
        sort:
          description: Use for sorting the result.
          items:
            $ref: '#/components/schemas/LinkedServiceJobsSort'
          maxItems: 1
          minItems: 1
          type: array
        startAfterId:
          description: The ID to start after.
          type: string
      required:
        - query
      title: LinkedServiceJobsSearchPayload
      type: object
      description: LinkedServiceJobsSearchPayload
    LinkedServiceJobsSearchQuery:
      properties:
        additionalInformation:
          allOf:
            - $ref: '#/components/schemas/StringListFilter'
          description: Search by additionalInformation
        and:
          items:
            $ref: '#/components/schemas/LinkedServiceJobsSearchQuery'
          type: array
        articleTitles:
          allOf:
            - $ref: '#/components/schemas/StringListFilter'
          description: Search by articleTitles
        channel:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by channel
        consumerName:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by consumerName
        facilityRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by facilityRef
        invoiceAddress:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by invoiceAddress
        lastModified:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by lastModified
        linkedServiceJobRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by linkedServiceJobRef
        or:
          items:
            $ref: '#/components/schemas/LinkedServiceJobsSearchQuery'
          type: array
        serviceName:
          allOf:
            - $ref: '#/components/schemas/StringListFilter'
          description: Search by serviceName
        shippingAddress:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by shippingAddress
        status:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by status
        targetTime:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by targetTime
        tenantOrderId:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by tenantOrderId
        usersModificationHistory:
          allOf:
            - $ref: >-
                #/components/schemas/LinkedServiceJobsUsersModificationHistoryListFilter
          description: Nested list search by usersModificationHistory
      title: LinkedServiceJobsSearchQuery
      type: object
      description: LinkedServiceJobsSearchQuery
    LinkedServiceJobsSort:
      properties:
        lastModified:
          enum:
            - ASC
            - DESC
          type: string
        targetTime:
          enum:
            - ASC
            - DESC
          type: string
      title: LinkedServiceJobsSort
      type: object
      description: LinkedServiceJobsSort
    LinkedServiceJobsUsersModificationHistoryFilter:
      properties:
        username:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by username
      title: LinkedServiceJobsUsersModificationHistoryFilter
      type: object
      description: LinkedServiceJobsUsersModificationHistoryFilter
    LinkedServiceJobsUsersModificationHistoryListFilter:
      properties:
        contains:
          allOf:
            - $ref: >-
                #/components/schemas/LinkedServiceJobsUsersModificationHistoryFilter
          description: Contains returns if at least one entry matches
      title: LinkedServiceJobsUsersModificationHistoryListFilter
      type: object
      description: LinkedServiceJobsUsersModificationHistoryListFilter
    ListingAvailabilityTimeframeFilter:
      properties:
        start:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by start
      title: ListingAvailabilityTimeframeFilter
      type: object
      description: ListingAvailabilityTimeframeFilter
    ListingBulkWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/ListingWebHookEventPayload'
      required:
        - payload
      title: ListingBulkWebHookEvent
      type: object
      description: ListingBulkWebHookEvent
    ListingOutOfStockBehaviourEnumFilter:
      properties:
        eq:
          description: Search by outOfStockBehaviour
          enum:
            - BACKORDER
            - PREORDER
            - RESTOCK
          type: string
        in:
          description: Search by outOfStockBehaviour
          enum:
            - BACKORDER
            - PREORDER
            - RESTOCK
          type: string
        notEq:
          description: Search by outOfStockBehaviour
          enum:
            - BACKORDER
            - PREORDER
            - RESTOCK
          type: string
      title: ListingOutOfStockBehaviourEnumFilter
      type: object
      description: ListingOutOfStockBehaviourEnumFilter
    ListingSearchPayload:
      properties:
        options:
          $ref: '#/components/schemas/SearchOptions'
        query:
          $ref: '#/components/schemas/ListingSearchQuery'
        size:
          default: 20
          description: Number of items to return.
          maximum: 250
          minimum: 1
          type: number
        sort:
          description: Use for sorting the result.
          items:
            $ref: '#/components/schemas/ListingSort'
          maxItems: 1
          minItems: 1
          type: array
        startAfterId:
          description: The ID to start after.
          type: string
      required:
        - query
      title: ListingSearchPayload
      type: object
      description: ListingSearchPayload
    ListingSearchQuery:
      properties:
        and:
          items:
            $ref: '#/components/schemas/ListingSearchQuery'
          type: array
        availabilityTimeframe:
          allOf:
            - $ref: '#/components/schemas/ListingAvailabilityTimeframeFilter'
          description: Nested search by availabilityTimeframe
        created:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by created
        customAttributes:
          additionalProperties:
            anyOf:
              - $ref: '#/components/schemas/BooleanFilter'
              - $ref: '#/components/schemas/StringEqFilter'
              - $ref: '#/components/schemas/NumberEqFilter'
              - $ref: '#/components/schemas/DateFilter'
          description: Search by custom attributes
          type: object
        facilityRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by facilityRef
        id:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by id
        measurementUnitKey:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by measurementUnitKey
        or:
          items:
            $ref: '#/components/schemas/ListingSearchQuery'
          type: array
        outOfStockBehaviour:
          allOf:
            - $ref: '#/components/schemas/ListingOutOfStockBehaviourEnumFilter'
          description: Search by outOfStockBehaviour
        price:
          allOf:
            - $ref: '#/components/schemas/NumberFilter'
          description: Search by price
        status:
          allOf:
            - $ref: '#/components/schemas/ListingStatusEnumEnumFilter'
          description: Search by status
        tags:
          allOf:
            - $ref: '#/components/schemas/ListingTagsListFilter'
          description: Nested list search by tags
        tenantArticleId:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by tenantArticleId
        weight:
          allOf:
            - $ref: '#/components/schemas/NumberFilter'
          description: Search by weight
      title: ListingSearchQuery
      type: object
      description: ListingSearchQuery
    ListingSort:
      properties:
        customAttributes:
          additionalProperties: true
          maxProperties: 1
          minProperties: 1
          type: object
        lastModified:
          enum:
            - ASC
            - DESC
          type: string
        tenantArticleId:
          enum:
            - ASC
            - DESC
          type: string
      title: ListingSort
      type: object
      description: ListingSort
    ListingStatusEnumEnumFilter:
      properties:
        eq:
          description: Search by status
          enum:
            - ACTIVE
            - INACTIVE
          type: string
        in:
          description: Search by status
          enum:
            - ACTIVE
            - INACTIVE
          type: string
        notEq:
          description: Search by status
          enum:
            - ACTIVE
            - INACTIVE
          type: string
      title: ListingStatusEnumEnumFilter
      type: object
      description: ListingStatusEnumEnumFilter
    ListingTagsFilter:
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by id
        value:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by value
      title: ListingTagsFilter
      type: object
      description: ListingTagsFilter
    ListingTagsListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/ListingTagsFilter'
          description: Contains returns if at least one entry matches
      title: ListingTagsListFilter
      type: object
      description: ListingTagsListFilter
    ListingWebHookEventPayload:
      properties:
        items:
          items:
            $ref: '#/components/schemas/InventoryListingEventPayload'
          type: array
      required:
        - items
      title: ListingWebHookEventPayload
      type: object
      description: ListingWebHookEventPayload
    LocaleStringConstrained:
      properties: {}
      title: LocaleStringConstrained
      type: object
      description: LocaleStringConstrained
    ModifyStowLineItemsAction:
      description: >-
        MODIFY_STOW_LINE_ITEMS targets specific stowJob.stowLineItems by ID.
        Each targeted entry is partially updated: provided fields are completely
        replaced, while unspecified fields remain unchanged. New entries can be
        added by omitting the ID field.
      properties:
        name:
          description: The name of the action that should be performed
          enum:
            - MODIFY_STOW_LINE_ITEMS
          type: string
        stowLineItems:
          items:
            $ref: '#/components/schemas/StowLineItemForUpdate'
          type: array
        version:
          description: The current version of the stow job that should be modified
          type: number
      required:
        - version
        - name
        - stowLineItems
      title: ModifyStowLineItemsAction
      type: object
    ModifyUserAction:
      properties:
        action:
          $ref: '#/components/schemas/UserActionEnum'
        assignedFacilities:
          description: The new assigned facilities of the user
          items:
            $ref: '#/components/schemas/UserAssignedFacilityForCreation'
          type: array
        customAttributes:
          description: The new custom attributes of the user
          nullable: true
          type: object
        firstname:
          description: The new firstname of the user
          type: string
        lastname:
          description: The new lastname of the user
          type: string
        locale:
          $ref: '#/components/schemas/SupportedLocale'
        password:
          description: The new password of the user
          type: string
        roles:
          description: The new roles of the user
          items:
            $ref: '#/components/schemas/UserRole'
          type: array
      required:
        - action
      title: ModifyUserAction
      type: object
      description: ModifyUserAction
    MoveStockToLocationOptions:
      properties:
        deleteFromStockIfZero:
          type: boolean
      title: MoveStockToLocationOptions
      type: object
      description: MoveStockToLocationOptions
    NumberEqFilter:
      properties:
        eq:
          type: number
        gt:
          type: number
        gte:
          type: number
        lt:
          type: number
        lte:
          type: number
        notEq:
          type: number
      title: NumberEqFilter
      type: object
      description: NumberEqFilter
    NumberFilter:
      properties:
        eq:
          type: number
        gt:
          type: number
        gte:
          type: number
        in:
          items:
            type: number
          maxItems: 25
          type: array
        lt:
          type: number
        lte:
          type: number
        notEq:
          type: number
        notIn:
          items:
            type: number
          maxItems: 25
          type: array
      title: NumberFilter
      type: object
      description: NumberFilter
    OrderConsumerAddressesAddressTypeEnumFilter:
      properties:
        eq:
          description: Search by addressType
          enum:
            - POSTAL_ADDRESS
            - PARCEL_LOCKER
            - INVOICE_ADDRESS
          type: string
        in:
          description: Search by addressType
          enum:
            - POSTAL_ADDRESS
            - PARCEL_LOCKER
            - INVOICE_ADDRESS
          type: string
        notEq:
          description: Search by addressType
          enum:
            - POSTAL_ADDRESS
            - PARCEL_LOCKER
            - INVOICE_ADDRESS
          type: string
      title: OrderConsumerAddressesAddressTypeEnumFilter
      type: object
      description: OrderConsumerAddressesAddressTypeEnumFilter
    OrderConsumerAddressesFilter:
      properties:
        addressType:
          allOf:
            - $ref: '#/components/schemas/OrderConsumerAddressesAddressTypeEnumFilter'
          description: Search by addressType
        city:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by city
        companyName:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by companyName
        country:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by country
        email:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by email
        firstName:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by firstName
        houseNumber:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by houseNumber
        lastName:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by lastName
        postalCode:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by postalCode
        province:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by province
        street:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by street
      title: OrderConsumerAddressesFilter
      type: object
      description: OrderConsumerAddressesFilter
    OrderConsumerAddressesListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/OrderConsumerAddressesFilter'
          description: Contains returns if at least one entry matches
      title: OrderConsumerAddressesListFilter
      type: object
      description: OrderConsumerAddressesListFilter
    OrderConsumerFilter:
      properties:
        addresses:
          allOf:
            - $ref: '#/components/schemas/OrderConsumerAddressesListFilter'
          description: Nested list search by addresses
        consumerId:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by consumerId
      title: OrderConsumerFilter
      type: object
      description: OrderConsumerFilter
    OrderDeliveryPreferencesCollectFilter:
      properties:
        facilityRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by facilityRef
        paid:
          allOf:
            - $ref: '#/components/schemas/BooleanFilter'
          description: Search by paid
      title: OrderDeliveryPreferencesCollectFilter
      type: object
      description: OrderDeliveryPreferencesCollectFilter
    OrderDeliveryPreferencesCollectListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/OrderDeliveryPreferencesCollectFilter'
          description: Contains returns if at least one entry matches
      title: OrderDeliveryPreferencesCollectListFilter
      type: object
      description: OrderDeliveryPreferencesCollectListFilter
    OrderDeliveryPreferencesFilter:
      properties:
        collect:
          allOf:
            - $ref: '#/components/schemas/OrderDeliveryPreferencesCollectListFilter'
          description: Nested list search by collect
        shipping:
          allOf:
            - $ref: '#/components/schemas/OrderDeliveryPreferencesShippingFilter'
          description: Nested search by shipping
      title: OrderDeliveryPreferencesFilter
      type: object
      description: OrderDeliveryPreferencesFilter
    OrderDeliveryPreferencesShippingDeliveryServiceLevelEnumFilter:
      properties:
        eq:
          description: Search by serviceLevel
          enum:
            - DELIVERY
            - SAMEDAY
          type: string
        in:
          description: Search by serviceLevel
          enum:
            - DELIVERY
            - SAMEDAY
          type: string
        notEq:
          description: Search by serviceLevel
          enum:
            - DELIVERY
            - SAMEDAY
          type: string
      title: OrderDeliveryPreferencesShippingDeliveryServiceLevelEnumFilter
      type: object
      description: OrderDeliveryPreferencesShippingDeliveryServiceLevelEnumFilter
    OrderDeliveryPreferencesShippingFilter:
      properties:
        desiredDeliveryTime:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by desiredDeliveryTime
        serviceLevel:
          allOf:
            - $ref: >-
                #/components/schemas/OrderDeliveryPreferencesShippingDeliveryServiceLevelEnumFilter
          description: Search by serviceLevel
      title: OrderDeliveryPreferencesShippingFilter
      type: object
      description: OrderDeliveryPreferencesShippingFilter
    OrderOrderLineItemsArticleFilter:
      properties:
        tenantArticleId:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by tenantArticleId
        title:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by title
        titleLocalized:
          allOf:
            - $ref: >-
                #/components/schemas/OrderOrderLineItemsArticleTitleLocalizedFilter
          description: Nested search by titleLocalized
      title: OrderOrderLineItemsArticleFilter
      type: object
      description: OrderOrderLineItemsArticleFilter
    OrderOrderLineItemsArticleTitleLocalizedFilter:
      properties:
        de_DE:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by de_DE
        en_US:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by en_US
        ru_RU:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by ru_RU
      title: OrderOrderLineItemsArticleTitleLocalizedFilter
      type: object
      description: OrderOrderLineItemsArticleTitleLocalizedFilter
    OrderOrderLineItemsFilter:
      properties:
        article:
          allOf:
            - $ref: '#/components/schemas/OrderOrderLineItemsArticleFilter'
          description: Nested search by article
      title: OrderOrderLineItemsFilter
      type: object
      description: OrderOrderLineItemsFilter
    OrderOrderLineItemsListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/OrderOrderLineItemsFilter'
          description: Contains returns if at least one entry matches
      title: OrderOrderLineItemsListFilter
      type: object
      description: OrderOrderLineItemsListFilter
    OrderPaymentInfoFilter:
      properties:
        currency:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by currency
        method:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by method
        methodLocalized:
          allOf:
            - $ref: '#/components/schemas/OrderPaymentInfoMethodLocalizedFilter'
          description: Nested search by methodLocalized
      title: OrderPaymentInfoFilter
      type: object
      description: OrderPaymentInfoFilter
    OrderPaymentInfoMethodLocalizedFilter:
      properties:
        de_DE:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by de_DE
        en_US:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by en_US
        ru_RU:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by ru_RU
      title: OrderPaymentInfoMethodLocalizedFilter
      type: object
      description: OrderPaymentInfoMethodLocalizedFilter
    OrderSearchPayload:
      properties:
        options:
          $ref: '#/components/schemas/SearchOptions'
        query:
          $ref: '#/components/schemas/OrderSearchQuery'
        size:
          default: 20
          description: Number of items to return.
          maximum: 250
          minimum: 1
          type: number
        sort:
          description: Use for sorting the result.
          items:
            $ref: '#/components/schemas/OrderSort'
          maxItems: 1
          minItems: 1
          type: array
        startAfterId:
          description: The ID to start after.
          type: string
      required:
        - query
      title: OrderSearchPayload
      type: object
      description: OrderSearchPayload
    OrderSearchQuery:
      properties:
        and:
          items:
            $ref: '#/components/schemas/OrderSearchQuery'
          type: array
        consumer:
          allOf:
            - $ref: '#/components/schemas/OrderConsumerFilter'
          description: Nested search by consumer
        customAttributes:
          additionalProperties:
            anyOf:
              - $ref: '#/components/schemas/BooleanFilter'
              - $ref: '#/components/schemas/StringEqFilter'
              - $ref: '#/components/schemas/NumberEqFilter'
              - $ref: '#/components/schemas/DateFilter'
          description: Search by custom attributes
          type: object
        deliveryPreferences:
          allOf:
            - $ref: '#/components/schemas/OrderDeliveryPreferencesFilter'
          description: Nested search by deliveryPreferences
        or:
          items:
            $ref: '#/components/schemas/OrderSearchQuery'
          type: array
        orderDate:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by orderDate
        orderLineItems:
          allOf:
            - $ref: '#/components/schemas/OrderOrderLineItemsListFilter'
          description: Nested list search by orderLineItems
        paymentInfo:
          allOf:
            - $ref: '#/components/schemas/OrderPaymentInfoFilter'
          description: Nested search by paymentInfo
        status:
          allOf:
            - $ref: '#/components/schemas/OrderStatusEnumFilter'
          description: Search by status
        tags:
          allOf:
            - $ref: '#/components/schemas/OrderTagsListFilter'
          description: Nested list search by tags
        tenantOrderId:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by tenantOrderId
      title: OrderSearchQuery
      type: object
      description: OrderSearchQuery
    OrderSort:
      properties:
        orderDate:
          enum:
            - ASC
            - DESC
          type: string
        status:
          enum:
            - ASC
            - DESC
          type: string
      title: OrderSort
      type: object
      description: OrderSort
    OrderStatusEnumFilter:
      properties:
        eq:
          description: Search by status
          enum:
            - OPEN
            - CANCELLED
            - PROMISED
            - LOCKED
            - OBSOLETE
          type: string
        in:
          description: Search by status
          enum:
            - OPEN
            - CANCELLED
            - PROMISED
            - LOCKED
            - OBSOLETE
          type: string
        notEq:
          description: Search by status
          enum:
            - OPEN
            - CANCELLED
            - PROMISED
            - LOCKED
            - OBSOLETE
          type: string
      title: OrderStatusEnumFilter
      type: object
      description: OrderStatusEnumFilter
    OrderTagsFilter:
      properties:
        value:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by value
      title: OrderTagsFilter
      type: object
      description: OrderTagsFilter
    OrderTagsListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/OrderTagsFilter'
          description: Contains returns if at least one entry matches
      title: OrderTagsListFilter
      type: object
      description: OrderTagsListFilter
    OutboundClearTrigger:
      properties:
        event:
          enum:
            - pick-job-closed_event-v1
            - handoverjob-handed-over_event-v1
          type: string
        tagFilter:
          items:
            $ref: '#/components/schemas/OutboundTagFilter'
          type: array
      required:
        - event
      title: OutboundClearTrigger
      type: object
      description: OutboundClearTrigger
    OutboundStockConfiguration:
      properties:
        clearTrigger:
          items:
            $ref: '#/components/schemas/OutboundClearTrigger'
          type: array
        locationRef:
          type: string
        trackOutboundStock:
          type: boolean
      required:
        - trackOutboundStock
        - locationRef
      title: OutboundStockConfiguration
      type: object
      description: OutboundStockConfiguration
    OutboundTagFilter:
      properties:
        allowedValues:
          items:
            type: string
          type: array
        tagId:
          type: string
      required:
        - allowedValues
        - tagId
      title: OutboundTagFilter
      type: object
      description: OutboundTagFilter
    PackJobInvoiceFilter:
      properties:
        companyName:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by companyName
        email:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by email
        firstName:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by firstName
        lastName:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by lastName
      title: PackJobInvoiceFilter
      type: object
      description: PackJobInvoiceFilter
    PackJobLineItemsArticleFilter:
      properties:
        tenantArticleId:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by tenantArticleId
        title:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by title
      title: PackJobLineItemsArticleFilter
      type: object
      description: PackJobLineItemsArticleFilter
    PackJobLineItemsFilter:
      properties:
        article:
          allOf:
            - $ref: '#/components/schemas/PackJobLineItemsArticleFilter'
          description: Nested search by article
      title: PackJobLineItemsFilter
      type: object
      description: PackJobLineItemsFilter
    PackJobLineItemsListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/PackJobLineItemsFilter'
          description: Contains returns if at least one entry matches
      title: PackJobLineItemsListFilter
      type: object
      description: PackJobLineItemsListFilter
    PackJobPackingSourceContainersFilter:
      properties:
        codes:
          allOf:
            - $ref: '#/components/schemas/StringListFilter'
          description: Search by codes
      title: PackJobPackingSourceContainersFilter
      type: object
      description: PackJobPackingSourceContainersFilter
    PackJobPackingSourceContainersListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/PackJobPackingSourceContainersFilter'
          description: Contains returns if at least one entry matches
      title: PackJobPackingSourceContainersListFilter
      type: object
      description: PackJobPackingSourceContainersListFilter
    PackJobRecipientFilter:
      properties:
        companyName:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by companyName
        email:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by email
        firstName:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by firstName
        lastName:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by lastName
      title: PackJobRecipientFilter
      type: object
      description: PackJobRecipientFilter
    PackJobSearchPayload:
      properties:
        options:
          $ref: '#/components/schemas/SearchOptions'
        query:
          $ref: '#/components/schemas/PackJobSearchQuery'
        size:
          default: 20
          description: Number of items to return.
          maximum: 250
          minimum: 1
          type: number
        sort:
          description: Use for sorting the result.
          items:
            $ref: '#/components/schemas/PackJobSort'
          maxItems: 1
          minItems: 1
          type: array
        startAfterId:
          description: The ID to start after.
          type: string
      required:
        - query
      title: PackJobSearchPayload
      type: object
      description: PackJobSearchPayload
    PackJobSearchQuery:
      properties:
        and:
          items:
            $ref: '#/components/schemas/PackJobSearchQuery'
          type: array
        facilityRef:
          allOf:
            - $ref: '#/components/schemas/StringEqFilter'
          description: Search by facilityRef
        invoice:
          allOf:
            - $ref: '#/components/schemas/PackJobInvoiceFilter'
          description: Nested search by invoice
        lastModified:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by lastModified
        lineItems:
          allOf:
            - $ref: '#/components/schemas/PackJobLineItemsListFilter'
          description: Nested list search by lineItems
        or:
          items:
            $ref: '#/components/schemas/PackJobSearchQuery'
          type: array
        orderDate:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by orderDate
        packingSourceContainers:
          allOf:
            - $ref: '#/components/schemas/PackJobPackingSourceContainersListFilter'
          description: Nested list search by packingSourceContainers
        recipient:
          allOf:
            - $ref: '#/components/schemas/PackJobRecipientFilter'
          description: Nested search by recipient
        shortId:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by shortId
        status:
          allOf:
            - $ref: '#/components/schemas/PackJobStatusEnumFilter'
          description: Search by status
        targetTime:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by targetTime
        tenantOrderId:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by tenantOrderId
      title: PackJobSearchQuery
      type: object
      description: PackJobSearchQuery
    PackJobSort:
      properties:
        lastModified:
          enum:
            - ASC
            - DESC
          type: string
        orderDate:
          enum:
            - ASC
            - DESC
          type: string
        targetTime:
          enum:
            - ASC
            - DESC
          type: string
      title: PackJobSort
      type: object
      description: PackJobSort
    PackJobStatusEnumFilter:
      properties:
        eq:
          description: Search by status
          enum:
            - OPEN
            - IN_PROGRESS
            - CLOSED
            - OBSOLETE
            - CANCELED
            - PAUSED
          type: string
        in:
          description: Search by status
          enum:
            - OPEN
            - IN_PROGRESS
            - CLOSED
            - OBSOLETE
            - CANCELED
            - PAUSED
          type: string
        notEq:
          description: Search by status
          enum:
            - OPEN
            - IN_PROGRESS
            - CLOSED
            - OBSOLETE
            - CANCELED
            - PAUSED
          type: string
      title: PackJobStatusEnumFilter
      type: object
      description: PackJobStatusEnumFilter
    ParcelInvoiceFilter:
      properties:
        companyName:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by companyName
        email:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by email
        firstName:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by firstName
        lastName:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by lastName
      title: ParcelInvoiceFilter
      type: object
      description: ParcelInvoiceFilter
    ParcelItemsArticleFilter:
      properties:
        tenantArticleId:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by tenantArticleId
        title:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by title
      title: ParcelItemsArticleFilter
      type: object
      description: ParcelItemsArticleFilter
    ParcelItemsFilter:
      properties:
        article:
          allOf:
            - $ref: '#/components/schemas/ParcelItemsArticleFilter'
          description: Nested search by article
      title: ParcelItemsFilter
      type: object
      description: ParcelItemsFilter
    ParcelItemsListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/ParcelItemsFilter'
          description: Contains returns if at least one entry matches
      title: ParcelItemsListFilter
      type: object
      description: ParcelItemsListFilter
    ParcelRecipientFilter:
      properties:
        companyName:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by companyName
        email:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by email
        firstName:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by firstName
        lastName:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by lastName
      title: ParcelRecipientFilter
      type: object
      description: ParcelRecipientFilter
    ParcelSearchPayload:
      properties:
        options:
          $ref: '#/components/schemas/SearchOptions'
        query:
          $ref: '#/components/schemas/ParcelSearchQuery'
        size:
          default: 20
          description: Number of items to return.
          maximum: 250
          minimum: 1
          type: number
        sort:
          description: Use for sorting the result.
          items:
            $ref: '#/components/schemas/ParcelSort'
          maxItems: 1
          minItems: 1
          type: array
        startAfterId:
          description: The ID to start after.
          type: string
      required:
        - query
      title: ParcelSearchPayload
      type: object
      description: ParcelSearchPayload
    ParcelSearchQuery:
      properties:
        and:
          items:
            $ref: '#/components/schemas/ParcelSearchQuery'
          type: array
        carrierRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by carrierRef
        created:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by created
        facilityRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by facilityRef
        id:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by id
        invoice:
          allOf:
            - $ref: '#/components/schemas/ParcelInvoiceFilter'
          description: Nested search by invoice
        items:
          allOf:
            - $ref: '#/components/schemas/ParcelItemsListFilter'
          description: Nested list search by items
        lastModified:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by lastModified
        or:
          items:
            $ref: '#/components/schemas/ParcelSearchQuery'
          type: array
        recipient:
          allOf:
            - $ref: '#/components/schemas/ParcelRecipientFilter'
          description: Nested search by recipient
        shipmentRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by shipmentRef
        shortId:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by shortId
        status:
          allOf:
            - $ref: '#/components/schemas/ParcelStatusEnumFilter'
          description: Search by status
      title: ParcelSearchQuery
      type: object
      description: ParcelSearchQuery
    ParcelSort:
      properties:
        created:
          enum:
            - ASC
            - DESC
          type: string
        lastModified:
          enum:
            - ASC
            - DESC
          type: string
      title: ParcelSort
      type: object
      description: ParcelSort
    ParcelStatusEnumFilter:
      properties:
        eq:
          description: Search by status
          enum:
            - OPEN
            - PROCESSING
            - DONE
            - FAILED
            - CANCELED
            - OBSOLETE
            - WAITING_FOR_INPUT
          type: string
        in:
          description: Search by status
          enum:
            - OPEN
            - PROCESSING
            - DONE
            - FAILED
            - CANCELED
            - OBSOLETE
            - WAITING_FOR_INPUT
          type: string
        notEq:
          description: Search by status
          enum:
            - OPEN
            - PROCESSING
            - DONE
            - FAILED
            - CANCELED
            - OBSOLETE
            - WAITING_FOR_INPUT
          type: string
      title: ParcelStatusEnumFilter
      type: object
      description: ParcelStatusEnumFilter
    PauseStowJobAction:
      description: Sets the status of the stowjob to PAUSED
      properties:
        name:
          description: The name of the action that should be performed
          enum:
            - PAUSE_STOW_JOB
          type: string
        version:
          description: The current version of the stow job that should be modified
          type: number
      required:
        - version
        - name
      title: PauseStowJobAction
      type: object
    PickJobSearchPayload:
      properties:
        options:
          $ref: '#/components/schemas/SearchOptions'
        query:
          $ref: '#/components/schemas/PickJobSearchQuery'
        size:
          default: 20
          description: Number of items to return.
          maximum: 250
          minimum: 1
          type: number
        sort:
          description: Use for sorting the result.
          items:
            $ref: '#/components/schemas/PickJobSort'
          maxItems: 1
          minItems: 1
          type: array
        startAfterId:
          description: The ID to start after.
          type: string
      required:
        - query
      title: PickJobSearchPayload
      type: object
      description: PickJobSearchPayload
    PickJobSearchQuery:
      properties:
        and:
          items:
            $ref: '#/components/schemas/PickJobSearchQuery'
          type: array
        consumerName:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by consumerName
        id:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by id
        or:
          items:
            $ref: '#/components/schemas/PickJobSearchQuery'
          type: array
        targetTime:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by targetTime
        tenantArticleIds:
          allOf:
            - $ref: '#/components/schemas/StringListFilter'
          description: Search by tenantArticleIds
        tenantOrderId:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by tenantOrderId
        transfers:
          allOf:
            - $ref: '#/components/schemas/PickJobTransfersListFilter'
          description: Nested list search by transfers
      title: PickJobSearchQuery
      type: object
      description: PickJobSearchQuery
    PickJobSort:
      properties:
        targetTime:
          enum:
            - ASC
            - DESC
          type: string
        tenantOrderId:
          enum:
            - ASC
            - DESC
          type: string
      title: PickJobSort
      type: object
      description: PickJobSort
    PickJobTransfersFilter:
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/StringEqFilter'
          description: Search by id
      title: PickJobTransfersFilter
      type: object
      description: PickJobTransfersFilter
    PickJobTransfersListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/PickJobTransfersFilter'
          description: Contains returns if at least one entry matches
      title: PickJobTransfersListFilter
      type: object
      description: PickJobTransfersListFilter
    ProcessReferencedCarrierFilter:
      properties:
        name:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by name
      title: ProcessReferencedCarrierFilter
      type: object
      description: ProcessReferencedCarrierFilter
    ProcessReferencedConsumerAddressFilter:
      properties:
        country:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by country
      title: ProcessReferencedConsumerAddressFilter
      type: object
      description: ProcessReferencedConsumerAddressFilter
    ProcessReferencedFacilityAddressFilter:
      properties:
        country:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by country
      title: ProcessReferencedFacilityAddressFilter
      type: object
      description: ProcessReferencedFacilityAddressFilter
    ProcessReferencedFacilityFilter:
      properties:
        address:
          allOf:
            - $ref: '#/components/schemas/ProcessReferencedFacilityAddressFilter'
          description: Nested search by address
        name:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by name
      title: ProcessReferencedFacilityFilter
      type: object
      description: ProcessReferencedFacilityFilter
    ProcessReferencedFilter:
      properties:
        carrier:
          allOf:
            - $ref: '#/components/schemas/ProcessReferencedCarrierFilter'
          description: Nested search by carrier
        consumerAddress:
          allOf:
            - $ref: '#/components/schemas/ProcessReferencedConsumerAddressFilter'
          description: Nested search by consumerAddress
        facility:
          allOf:
            - $ref: '#/components/schemas/ProcessReferencedFacilityFilter'
          description: Nested search by facility
        order:
          allOf:
            - $ref: '#/components/schemas/ProcessReferencedOrderFilter'
          description: Nested search by order
        pickjob:
          allOf:
            - $ref: '#/components/schemas/ProcessReferencedPickjobFilter'
          description: Nested search by pickjob
      title: ProcessReferencedFilter
      type: object
      description: ProcessReferencedFilter
    ProcessReferencedOrderFilter:
      properties:
        orderDate:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by orderDate
      title: ProcessReferencedOrderFilter
      type: object
      description: ProcessReferencedOrderFilter
    ProcessReferencedPickjobDeliveryInformationFilter:
      properties:
        targetTime:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by targetTime
      title: ProcessReferencedPickjobDeliveryInformationFilter
      type: object
      description: ProcessReferencedPickjobDeliveryInformationFilter
    ProcessReferencedPickjobFilter:
      properties:
        deliveryInformation:
          allOf:
            - $ref: >-
                #/components/schemas/ProcessReferencedPickjobDeliveryInformationFilter
          description: Nested search by deliveryInformation
      title: ProcessReferencedPickjobFilter
      type: object
      description: ProcessReferencedPickjobFilter
    ProcessSearchPayload:
      properties:
        options:
          $ref: '#/components/schemas/SearchOptions'
        query:
          $ref: '#/components/schemas/ProcessSearchQuery'
        size:
          default: 20
          description: Number of items to return.
          maximum: 250
          minimum: 1
          type: number
        startAfterId:
          description: The ID to start after.
          type: string
      required:
        - query
      title: ProcessSearchPayload
      type: object
      description: ProcessSearchPayload
    ProcessSearchQuery:
      properties:
        and:
          items:
            $ref: '#/components/schemas/ProcessSearchQuery'
          type: array
        documentRefs:
          allOf:
            - $ref: '#/components/schemas/StringListFilter'
          description: Search by documentRefs
        domsStatus:
          allOf:
            - $ref: '#/components/schemas/ProcessStatusEnumFilter'
          description: Search by domsStatus
        externalActionRefs:
          allOf:
            - $ref: '#/components/schemas/StringListFilter'
          description: Search by externalActionRefs
        facilityRefs:
          allOf:
            - $ref: '#/components/schemas/StringListFilter'
          description: Search by facilityRefs
        flatRefs:
          allOf:
            - $ref: '#/components/schemas/StringListFilter'
          description: Search by flatRefs
        handoverJobRefs:
          allOf:
            - $ref: '#/components/schemas/StringListFilter'
          description: Search by handoverJobRefs
        itemReturnJobsRef:
          allOf:
            - $ref: '#/components/schemas/StringListFilter'
          description: Search by itemReturnJobsRef
        operativeStatus:
          allOf:
            - $ref: '#/components/schemas/ProcessStatusEnumFilter'
          description: Search by operativeStatus
        or:
          items:
            $ref: '#/components/schemas/ProcessSearchQuery'
          type: array
        orderRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by orderRef
        packJobRefs:
          allOf:
            - $ref: '#/components/schemas/StringListFilter'
          description: Search by packJobRefs
        pickJobRefs:
          allOf:
            - $ref: '#/components/schemas/StringListFilter'
          description: Search by pickJobRefs
        processId:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by processId
        referenced:
          allOf:
            - $ref: '#/components/schemas/ProcessReferencedFilter'
          description: Nested search by referenced
        returnRefs:
          allOf:
            - $ref: '#/components/schemas/StringListFilter'
          description: Search by returnRefs
        returnStatus:
          allOf:
            - $ref: '#/components/schemas/ProcessStatusEnumFilter'
          description: Search by returnStatus
        routingPlanRefs:
          allOf:
            - $ref: '#/components/schemas/StringListFilter'
          description: Search by routingPlanRefs
        searchTerm:
          allOf:
            - $ref: '#/components/schemas/SearchFilter'
          description: Full-text search for this entity
        serviceJobRefs:
          allOf:
            - $ref: '#/components/schemas/StringListFilter'
          description: Search by serviceJobRefs
        shipmentRefs:
          allOf:
            - $ref: '#/components/schemas/StringListFilter'
          description: Search by shipmentRefs
        status:
          allOf:
            - $ref: '#/components/schemas/ProcessStatusEnumFilter'
          description: Search by status
      title: ProcessSearchQuery
      type: object
      description: ProcessSearchQuery
    ProcessStatusEnumFilter:
      properties:
        eq:
          description: Search by status
          enum:
            - CREATED
            - IN_PROGRESS
            - FINISHED
            - CANCELED
            - ERROR
            - NOT_AVAILABLE
          type: string
        in:
          description: Search by status
          enum:
            - CREATED
            - IN_PROGRESS
            - FINISHED
            - CANCELED
            - ERROR
            - NOT_AVAILABLE
          type: string
        notEq:
          description: Search by status
          enum:
            - CREATED
            - IN_PROGRESS
            - FINISHED
            - CANCELED
            - ERROR
            - NOT_AVAILABLE
          type: string
      title: ProcessStatusEnumFilter
      type: object
      description: ProcessStatusEnumFilter
    PurchaseOrder:
      properties:
        cancelled:
          deprecated: true
          description: >-
            This field is deprecated. Set the status to 'CANCELED' Set the
            purchaseOrder to 'cancelled'. No further deliveries will be
            expected. Already received goods are unaffected.
          type: boolean
        created:
          format: date-time
          type: string
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        facilityRef:
          type: string
        id:
          type: string
        inboundProcessRef:
          type: string
        lastModified:
          format: date-time
          type: string
        orderDate:
          description: >-
            Time and date at which the order was placed. Note: This does not
            refer to the creation date of this entity in the system.
          format: date-time
          type: string
        requestedDate:
          allOf:
            - $ref: '#/components/schemas/InputRequestedDate'
          description: >-
            Time and date at which the order is expected to arrive. Use 'ASAP'
            for deliveries with unknown date, but be aware that some features
            will not include these orders.
        requestedItems:
          description: Line items which are expected to be delivered.
          items:
            $ref: '#/components/schemas/InboundLineItem'
          maxItems: 200
          type: array
        status:
          enum:
            - OPEN
            - CANCELED
          type: string
        supplier:
          $ref: '#/components/schemas/InboundProcessPurchaseOrderSupplier'
        transfer:
          allOf:
            - $ref: '#/components/schemas/InboundProcessPurchaseOrderTransfer'
          description: >-
            Includes data about transfer between different facilities in the
            tenant's network.
        version:
          type: number
      required:
        - orderDate
        - requestedDate
        - requestedItems
        - status
        - cancelled
        - id
        - created
        - lastModified
        - version
        - facilityRef
        - inboundProcessRef
      title: PurchaseOrder
      type: object
      description: PurchaseOrder
    PurchaseOrderEventPayload:
      properties:
        canceled:
          type: boolean
        created:
          format: date-time
          type: string
        customAttributes:
          type: object
        facilityRef:
          type: string
        id:
          type: string
        inboundProcessRef:
          type: string
        lastModified:
          format: date-time
          type: string
        orderDate:
          format: date-time
          type: string
        requestedDate:
          $ref: '#/components/schemas/RequestedDate'
        requestedItems:
          items:
            $ref: '#/components/schemas/InboundLineItem'
          type: array
        status:
          type: string
        supplier:
          $ref: '#/components/schemas/PurchaseOrderSupplier'
        tenantInboundProcessId:
          type: string
        transfer:
          $ref: '#/components/schemas/PurchaseOrderTransfer'
        version:
          type: number
      required:
        - id
        - orderDate
        - requestedDate
        - requestedItems
        - inboundProcessRef
        - facilityRef
        - created
        - lastModified
        - canceled
        - status
        - version
      title: PurchaseOrderEventPayload
      type: object
      description: PurchaseOrderEventPayload
    PurchaseOrderForCreation:
      properties:
        cancelled:
          deprecated: true
          description: >-
            This field is deprecated. Set the status to 'CANCELED' Set the
            purchaseOrder to 'cancelled'. No further deliveries will be
            expected. Already received goods are unaffected.
          type: boolean
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        facilityRef:
          minLength: 1
          type: string
        orderDate:
          description: >-
            Time and date at which the order was placed. Note: This does not
            refer to the creation date of this entity in the system.
          format: date-time
          type: string
        requestedDate:
          allOf:
            - $ref: '#/components/schemas/InputRequestedDate'
          description: >-
            Time and date at which the order is expected to arrive. Use 'ASAP'
            for deliveries with unknown date, but be aware that some features
            will not include these orders.
        requestedItems:
          description: Line items which are expected to be delivered.
          items:
            $ref: '#/components/schemas/InboundLineItem'
          maxItems: 200
          type: array
        status:
          enum:
            - OPEN
            - CANCELED
          type: string
        supplier:
          $ref: '#/components/schemas/InboundProcessPurchaseOrderSupplier'
      required:
        - orderDate
        - requestedDate
        - requestedItems
        - facilityRef
      title: PurchaseOrderForCreation
      type: object
      description: PurchaseOrderForCreation
    PurchaseOrderForPartialUpdate:
      properties:
        cancelled:
          deprecated: true
          description: >-
            This field is deprecated. Set the status to 'CANCELED' Set the
            purchaseOrder to 'cancelled'. No further deliveries will be
            expected. Already received goods are unaffected.
          type: boolean
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        orderDate:
          format: date-time
          type: string
        requestedDate:
          $ref: '#/components/schemas/InputRequestedDate'
        requestedItems:
          items:
            $ref: '#/components/schemas/InboundLineItem'
          type: array
        status:
          enum:
            - OPEN
            - CANCELED
          type: string
        supplier:
          $ref: '#/components/schemas/InboundProcessPurchaseOrderSupplier'
        version:
          type: number
      required:
        - version
      title: PurchaseOrderForPartialUpdate
      type: object
      description: PurchaseOrderForPartialUpdate
    PurchaseOrderForUpdate:
      properties:
        cancelled:
          deprecated: true
          description: >-
            This field is deprecated. Set the status to 'CANCELED' Set the
            purchaseOrder to 'cancelled'. No further deliveries will be
            expected. Already received goods are unaffected.
          type: boolean
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        orderDate:
          description: >-
            Time and date at which the order was placed. Note: This does not
            refer to the creation date of this entity in the system.
          format: date-time
          type: string
        requestedDate:
          allOf:
            - $ref: '#/components/schemas/InputRequestedDate'
          description: >-
            Time and date at which the order is expected to arrive. Use 'ASAP'
            for deliveries with unknown date, but be aware that some features
            will not include these orders.
        requestedItems:
          description: Line items which are expected to be delivered.
          items:
            $ref: '#/components/schemas/InboundLineItem'
          maxItems: 200
          type: array
        status:
          enum:
            - OPEN
            - CANCELED
          type: string
        supplier:
          $ref: '#/components/schemas/InboundProcessPurchaseOrderSupplier'
        version:
          type: number
      required:
        - orderDate
        - requestedDate
        - requestedItems
        - version
      title: PurchaseOrderForUpdate
      type: object
      description: PurchaseOrderForUpdate
    PurchaseOrderSupplier:
      properties:
        facilityRef:
          type: string
        name:
          type: string
      title: PurchaseOrderSupplier
      type: object
      description: PurchaseOrderSupplier
    PurchaseOrderTransfer:
      properties:
        id:
          type: string
      required:
        - id
      title: PurchaseOrderTransfer
      type: object
      description: PurchaseOrderTransfer
    PurchaseOrderWebHookEvent:
      properties:
        payload:
          $ref: '#/components/schemas/PurchaseOrderEventPayload'
      required:
        - payload
      title: PurchaseOrderWebHookEvent
      type: object
      description: PurchaseOrderWebHookEvent
    Quantity:
      properties:
        unit:
          description: >-
            The unit of the quantity. In some purchaseOrder and receipt it is
            validated to match again the measurement unit of the article as
            provided in the listing, if present.
          type: string
        value:
          description: The amount, provided in the unit of the quantity.
          format: int32
          minimum: 0
          type: integer
      required:
        - value
      title: Quantity
      type: object
      description: Quantity
    Receipt:
      properties:
        asnRef:
          description: enables mapping a receipt to one of the ASNs in this inbound process
          type: string
        comments:
          description: comments regarding the receipt itself
          items:
            $ref: '#/components/schemas/InboundReceiptComment'
          maxItems: 20
          type: array
        created:
          format: date-time
          type: string
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        id:
          type: string
        inboundProcessRef:
          type: string
        lastModified:
          format: date-time
          type: string
        receivedDate:
          description: date-time of the arrival of the items in the facility
          format: date-time
          type: string
        receivedItems:
          description: list of item that arrived in the facility
          items:
            $ref: '#/components/schemas/InboundReceiptLineItem'
          maxItems: 200
          type: array
        status:
          description: >-
            status of this receipt, only receipts with status 'FINISHED' are
            booked. IN_PROGRESS can be used to save partial receipts.
          enum:
            - OPEN
            - IN_PROGRESS
            - FINISHED
          type: string
        version:
          type: number
      required:
        - receivedDate
        - receivedItems
        - comments
        - id
        - inboundProcessRef
        - version
        - created
        - lastModified
      title: Receipt
      type: object
      description: Receipt
    ReceiptForCreation:
      properties:
        asnRef:
          description: enables mapping a receipt to one of the ASNs in this inbound process
          type: string
        comments:
          description: comments regarding the receipt itself
          items:
            $ref: '#/components/schemas/InboundReceiptCommentForCreation'
          maxItems: 20
          type: array
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        facilityRef:
          type: string
        receivedDate:
          description: date-time of the arrival of the items in the facility
          format: date-time
          type: string
        receivedItems:
          description: list of item that arrived in the facility
          items:
            $ref: '#/components/schemas/InboundReceiptLineItemForCreation'
          maxItems: 200
          type: array
        status:
          description: >-
            status of this receipt, only receipts with status 'FINISHED' are
            booked. IN_PROGRESS can be used to save partial receipts.
          enum:
            - OPEN
            - IN_PROGRESS
            - FINISHED
          type: string
      required:
        - receivedDate
        - receivedItems
        - comments
        - facilityRef
      title: ReceiptForCreation
      type: object
      description: ReceiptForCreation
    ReopenStowJobAction:
      description: Sets the status of the stowjob to OPEN
      properties:
        name:
          description: The name of the action that should be performed
          enum:
            - OPEN_STOW_JOB
          type: string
        version:
          description: The current version of the stow job that should be modified
          type: number
      required:
        - version
        - name
      title: ReopenStowJobAction
      type: object
    RequestedDate:
      properties:
        type:
          enum:
            - ASAP
            - TIME_POINT
          type: string
        value:
          format: date-time
          type: string
      required:
        - type
        - value
      title: RequestedDate
      type: object
      description: RequestedDate
    RequestedDateASAP:
      properties:
        type:
          enum:
            - ASAP
            - TIME_POINT
          type: string
      required:
        - type
      title: RequestedDateASAP
      type: object
      description: RequestedDateASAP
    RequestedDateTimePoint:
      properties:
        type:
          enum:
            - ASAP
            - TIME_POINT
          type: string
        value:
          format: date-time
          type: string
      required:
        - type
        - value
      title: RequestedDateTimePoint
      type: object
      description: RequestedDateTimePoint
    RoutingPlanCustomServicesArticleItemsFilter:
      properties:
        tenantArticleRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by tenantArticleRef
      title: RoutingPlanCustomServicesArticleItemsFilter
      type: object
      description: RoutingPlanCustomServicesArticleItemsFilter
    RoutingPlanCustomServicesArticleItemsListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/RoutingPlanCustomServicesArticleItemsFilter'
          description: Contains returns if at least one entry matches
      title: RoutingPlanCustomServicesArticleItemsListFilter
      type: object
      description: RoutingPlanCustomServicesArticleItemsListFilter
    RoutingPlanCustomServicesCustomServiceDefinitionAdditionalInformationFilter:
      properties:
        additionalInformationRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by additionalInformationRef
      title: >-
        RoutingPlanCustomServicesCustomServiceDefinitionAdditionalInformationFilter
      type: object
      description: >-
        RoutingPlanCustomServicesCustomServiceDefinitionAdditionalInformationFilter
    RoutingPlanCustomServicesCustomServiceDefinitionAdditionalInformationListFilter:
      properties:
        contains:
          allOf:
            - $ref: >-
                #/components/schemas/RoutingPlanCustomServicesCustomServiceDefinitionAdditionalInformationFilter
          description: Contains returns if at least one entry matches
      title: >-
        RoutingPlanCustomServicesCustomServiceDefinitionAdditionalInformationListFilter
      type: object
      description: >-
        RoutingPlanCustomServicesCustomServiceDefinitionAdditionalInformationListFilter
    RoutingPlanCustomServicesCustomServiceDefinitionFilter:
      properties:
        additionalInformation:
          allOf:
            - $ref: >-
                #/components/schemas/RoutingPlanCustomServicesCustomServiceDefinitionAdditionalInformationListFilter
          description: Nested list search by additionalInformation
        customServiceRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by customServiceRef
      title: RoutingPlanCustomServicesCustomServiceDefinitionFilter
      type: object
      description: RoutingPlanCustomServicesCustomServiceDefinitionFilter
    RoutingPlanCustomServicesCustomServiceItemsArticleItemsFilter:
      properties:
        tenantArticleRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by tenantArticleRef
      title: RoutingPlanCustomServicesCustomServiceItemsArticleItemsFilter
      type: object
      description: RoutingPlanCustomServicesCustomServiceItemsArticleItemsFilter
    RoutingPlanCustomServicesCustomServiceItemsArticleItemsListFilter:
      properties:
        contains:
          allOf:
            - $ref: >-
                #/components/schemas/RoutingPlanCustomServicesCustomServiceItemsArticleItemsFilter
          description: Contains returns if at least one entry matches
      title: RoutingPlanCustomServicesCustomServiceItemsArticleItemsListFilter
      type: object
      description: RoutingPlanCustomServicesCustomServiceItemsArticleItemsListFilter
    RoutingPlanCustomServicesCustomServiceItemsFilter:
      properties:
        articleItems:
          allOf:
            - $ref: >-
                #/components/schemas/RoutingPlanCustomServicesCustomServiceItemsArticleItemsListFilter
          description: Nested list search by articleItems
      title: RoutingPlanCustomServicesCustomServiceItemsFilter
      type: object
      description: RoutingPlanCustomServicesCustomServiceItemsFilter
    RoutingPlanCustomServicesCustomServiceItemsListFilter:
      properties:
        contains:
          allOf:
            - $ref: >-
                #/components/schemas/RoutingPlanCustomServicesCustomServiceItemsFilter
          description: Contains returns if at least one entry matches
      title: RoutingPlanCustomServicesCustomServiceItemsListFilter
      type: object
      description: RoutingPlanCustomServicesCustomServiceItemsListFilter
    RoutingPlanCustomServicesFilter:
      properties:
        articleItems:
          allOf:
            - $ref: >-
                #/components/schemas/RoutingPlanCustomServicesArticleItemsListFilter
          description: Nested list search by articleItems
        customServiceDefinition:
          allOf:
            - $ref: >-
                #/components/schemas/RoutingPlanCustomServicesCustomServiceDefinitionFilter
          description: Nested search by customServiceDefinition
        customServiceItems:
          allOf:
            - $ref: >-
                #/components/schemas/RoutingPlanCustomServicesCustomServiceItemsListFilter
          description: Nested list search by customServiceItems
      title: RoutingPlanCustomServicesFilter
      type: object
      description: RoutingPlanCustomServicesFilter
    RoutingPlanCustomServicesListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/RoutingPlanCustomServicesFilter'
          description: Contains returns if at least one entry matches
      title: RoutingPlanCustomServicesListFilter
      type: object
      description: RoutingPlanCustomServicesListFilter
    RoutingPlanDeliveryPreferencesCollectFilter:
      properties:
        facilityRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by facilityRef
        paid:
          allOf:
            - $ref: '#/components/schemas/BooleanFilter'
          description: Search by paid
        supplyingFacilities:
          allOf:
            - $ref: '#/components/schemas/StringListFilter'
          description: Search by supplyingFacilities
      title: RoutingPlanDeliveryPreferencesCollectFilter
      type: object
      description: RoutingPlanDeliveryPreferencesCollectFilter
    RoutingPlanDeliveryPreferencesCollectListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/RoutingPlanDeliveryPreferencesCollectFilter'
          description: Contains returns if at least one entry matches
      title: RoutingPlanDeliveryPreferencesCollectListFilter
      type: object
      description: RoutingPlanDeliveryPreferencesCollectListFilter
    RoutingPlanDeliveryPreferencesFilter:
      properties:
        collect:
          allOf:
            - $ref: >-
                #/components/schemas/RoutingPlanDeliveryPreferencesCollectListFilter
          description: Nested list search by collect
        shipping:
          allOf:
            - $ref: >-
                #/components/schemas/RoutingPlanDeliveryPreferencesShippingFilter
          description: Nested search by shipping
        supplyingFacilities:
          allOf:
            - $ref: '#/components/schemas/StringListFilter'
          description: Search by supplyingFacilities
        targetTime:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by targetTime
      title: RoutingPlanDeliveryPreferencesFilter
      type: object
      description: RoutingPlanDeliveryPreferencesFilter
    RoutingPlanDeliveryPreferencesShippingFilter:
      properties:
        preferredCarriers:
          allOf:
            - $ref: '#/components/schemas/StringListFilter'
          description: Search by preferredCarriers
        preferredCarriersWithProduct:
          allOf:
            - $ref: >-
                #/components/schemas/RoutingPlanDeliveryPreferencesShippingPreferredCarriersWithProductListFilter
          description: Nested list search by preferredCarriersWithProduct
      title: RoutingPlanDeliveryPreferencesShippingFilter
      type: object
      description: RoutingPlanDeliveryPreferencesShippingFilter
    RoutingPlanDeliveryPreferencesShippingPreferredCarriersWithProductFilter:
      properties:
        carrierKey:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by carrierKey
      title: RoutingPlanDeliveryPreferencesShippingPreferredCarriersWithProductFilter
      type: object
      description: RoutingPlanDeliveryPreferencesShippingPreferredCarriersWithProductFilter
    RoutingPlanDeliveryPreferencesShippingPreferredCarriersWithProductListFilter:
      properties:
        contains:
          allOf:
            - $ref: >-
                #/components/schemas/RoutingPlanDeliveryPreferencesShippingPreferredCarriersWithProductFilter
          description: Contains returns if at least one entry matches
      title: >-
        RoutingPlanDeliveryPreferencesShippingPreferredCarriersWithProductListFilter
      type: object
      description: >-
        RoutingPlanDeliveryPreferencesShippingPreferredCarriersWithProductListFilter
    RoutingPlanEarliestPickingStartFilter:
      properties:
        carrierRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by carrierRef
        earliestPickingStartDate:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by earliestPickingStartDate
        targetTime:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by targetTime
      title: RoutingPlanEarliestPickingStartFilter
      type: object
      description: RoutingPlanEarliestPickingStartFilter
    RoutingPlanHistoryFilter:
      properties:
        created:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by created
        status:
          allOf:
            - $ref: >-
                #/components/schemas/RoutingPlanHistoryRoutingPlanStatusEnumFilter
          description: Search by status
      title: RoutingPlanHistoryFilter
      type: object
      description: RoutingPlanHistoryFilter
    RoutingPlanHistoryListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/RoutingPlanHistoryFilter'
          description: Contains returns if at least one entry matches
      title: RoutingPlanHistoryListFilter
      type: object
      description: RoutingPlanHistoryListFilter
    RoutingPlanHistoryRoutingPlanStatusEnumFilter:
      properties:
        eq:
          description: Search by status
          enum:
            - INITIAL
            - PRIORITIZED
            - ROUTING
            - PROPOSED
            - PLANNED
            - ROUTED
            - NOT_ROUTABLE
            - MANUAL_PLANNED
            - FAILED
            - REDUNDANT_REROUTE
            - FAILED_REROUTE
            - RETRYABLE
            - FALLBACK_ROUTING
            - WAITING
            - OBSOLETE
            - CANCELED
            - LOCKED
            - PROMISED
            - REROUTED
          type: string
        in:
          description: Search by status
          enum:
            - INITIAL
            - PRIORITIZED
            - ROUTING
            - PROPOSED
            - PLANNED
            - ROUTED
            - NOT_ROUTABLE
            - MANUAL_PLANNED
            - FAILED
            - REDUNDANT_REROUTE
            - FAILED_REROUTE
            - RETRYABLE
            - FALLBACK_ROUTING
            - WAITING
            - OBSOLETE
            - CANCELED
            - LOCKED
            - PROMISED
            - REROUTED
          type: string
        notEq:
          description: Search by status
          enum:
            - INITIAL
            - PRIORITIZED
            - ROUTING
            - PROPOSED
            - PLANNED
            - ROUTED
            - NOT_ROUTABLE
            - MANUAL_PLANNED
            - FAILED
            - REDUNDANT_REROUTE
            - FAILED_REROUTE
            - RETRYABLE
            - FALLBACK_ROUTING
            - WAITING
            - OBSOLETE
            - CANCELED
            - LOCKED
            - PROMISED
            - REROUTED
          type: string
      title: RoutingPlanHistoryRoutingPlanStatusEnumFilter
      type: object
      description: RoutingPlanHistoryRoutingPlanStatusEnumFilter
    RoutingPlanLatestPickingStartFilter:
      properties:
        carrierRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by carrierRef
        latestPickingStartDate:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by latestPickingStartDate
        targetTime:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by targetTime
      title: RoutingPlanLatestPickingStartFilter
      type: object
      description: RoutingPlanLatestPickingStartFilter
    RoutingPlanOrderLineItemsFilter:
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by id
      title: RoutingPlanOrderLineItemsFilter
      type: object
      description: RoutingPlanOrderLineItemsFilter
    RoutingPlanOrderLineItemsListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/RoutingPlanOrderLineItemsFilter'
          description: Contains returns if at least one entry matches
      title: RoutingPlanOrderLineItemsListFilter
      type: object
      description: RoutingPlanOrderLineItemsListFilter
    RoutingPlanSearchPayload:
      properties:
        options:
          $ref: '#/components/schemas/SearchOptions'
        query:
          $ref: '#/components/schemas/RoutingPlanSearchQuery'
        size:
          default: 20
          description: Number of items to return.
          maximum: 250
          minimum: 1
          type: number
        sort:
          description: Use for sorting the result.
          items:
            $ref: '#/components/schemas/RoutingPlanSort'
          maxItems: 1
          minItems: 1
          type: array
        startAfterId:
          description: The ID to start after.
          type: string
      required:
        - query
      title: RoutingPlanSearchPayload
      type: object
      description: RoutingPlanSearchPayload
    RoutingPlanSearchQuery:
      properties:
        and:
          items:
            $ref: '#/components/schemas/RoutingPlanSearchQuery'
          type: array
        anonymized:
          allOf:
            - $ref: '#/components/schemas/BooleanFilter'
          description: Search by anonymized
        customServices:
          allOf:
            - $ref: '#/components/schemas/RoutingPlanCustomServicesListFilter'
          description: Nested list search by customServices
        deliveryPreferences:
          allOf:
            - $ref: '#/components/schemas/RoutingPlanDeliveryPreferencesFilter'
          description: Nested search by deliveryPreferences
        earliestPickingStart:
          allOf:
            - $ref: '#/components/schemas/RoutingPlanEarliestPickingStartFilter'
          description: Nested search by earliestPickingStart
        history:
          allOf:
            - $ref: '#/components/schemas/RoutingPlanHistoryListFilter'
          description: Nested list search by history
        latestPickingStart:
          allOf:
            - $ref: '#/components/schemas/RoutingPlanLatestPickingStartFilter'
          description: Nested search by latestPickingStart
        or:
          items:
            $ref: '#/components/schemas/RoutingPlanSearchQuery'
          type: array
        orderDate:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by orderDate
        orderLineItems:
          allOf:
            - $ref: '#/components/schemas/RoutingPlanOrderLineItemsListFilter'
          description: Nested list search by orderLineItems
        orderRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by orderRef
        pickJobRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by pickJobRef
        priority:
          allOf:
            - $ref: '#/components/schemas/NumberFilter'
          description: Search by priority
        processId:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by processId
        provisioningTime:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by provisioningTime
        reRouteReason:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by reRouteReason
        splitCount:
          allOf:
            - $ref: '#/components/schemas/NumberFilter'
          description: Search by splitCount
        status:
          allOf:
            - $ref: '#/components/schemas/RoutingPlanStatusEnumFilter'
          description: Search by status
        statusReasons:
          allOf:
            - $ref: '#/components/schemas/RoutingPlanStatusReasonsListFilter'
          description: Nested list search by statusReasons
        targetAddress:
          allOf:
            - $ref: '#/components/schemas/RoutingPlanTargetAddressFilter'
          description: Nested search by targetAddress
      title: RoutingPlanSearchQuery
      type: object
      description: RoutingPlanSearchQuery
    RoutingPlanSort:
      properties:
        anonymized:
          enum:
            - ASC
            - DESC
          type: string
        orderDate:
          enum:
            - ASC
            - DESC
          type: string
        orderRef:
          enum:
            - ASC
            - DESC
          type: string
        processId:
          enum:
            - ASC
            - DESC
          type: string
        provisioningTime:
          enum:
            - ASC
            - DESC
          type: string
        status:
          enum:
            - ASC
            - DESC
          type: string
      title: RoutingPlanSort
      type: object
      description: RoutingPlanSort
    RoutingPlanStatusEnumFilter:
      properties:
        eq:
          description: Search by status
          enum:
            - INITIAL
            - PRIORITIZED
            - ROUTING
            - PROPOSED
            - PLANNED
            - ROUTED
            - NOT_ROUTABLE
            - MANUAL_PLANNED
            - FAILED
            - REDUNDANT_REROUTE
            - FAILED_REROUTE
            - RETRYABLE
            - FALLBACK_ROUTING
            - WAITING
            - OBSOLETE
            - CANCELED
            - LOCKED
            - PROMISED
            - REROUTED
          type: string
        in:
          description: Search by status
          enum:
            - INITIAL
            - PRIORITIZED
            - ROUTING
            - PROPOSED
            - PLANNED
            - ROUTED
            - NOT_ROUTABLE
            - MANUAL_PLANNED
            - FAILED
            - REDUNDANT_REROUTE
            - FAILED_REROUTE
            - RETRYABLE
            - FALLBACK_ROUTING
            - WAITING
            - OBSOLETE
            - CANCELED
            - LOCKED
            - PROMISED
            - REROUTED
          type: string
        notEq:
          description: Search by status
          enum:
            - INITIAL
            - PRIORITIZED
            - ROUTING
            - PROPOSED
            - PLANNED
            - ROUTED
            - NOT_ROUTABLE
            - MANUAL_PLANNED
            - FAILED
            - REDUNDANT_REROUTE
            - FAILED_REROUTE
            - RETRYABLE
            - FALLBACK_ROUTING
            - WAITING
            - OBSOLETE
            - CANCELED
            - LOCKED
            - PROMISED
            - REROUTED
          type: string
      title: RoutingPlanStatusEnumFilter
      type: object
      description: RoutingPlanStatusEnumFilter
    RoutingPlanStatusReasonsFilter:
      properties:
        reason:
          allOf:
            - $ref: >-
                #/components/schemas/RoutingPlanStatusReasonsRoutingPlanStatusReasonReasonEnumFilter
          description: Search by reason
        status:
          allOf:
            - $ref: >-
                #/components/schemas/RoutingPlanStatusReasonsRoutingPlanStatusReasonStatusEnumFilter
          description: Search by status
      title: RoutingPlanStatusReasonsFilter
      type: object
      description: RoutingPlanStatusReasonsFilter
    RoutingPlanStatusReasonsListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/RoutingPlanStatusReasonsFilter'
          description: Contains returns if at least one entry matches
      title: RoutingPlanStatusReasonsListFilter
      type: object
      description: RoutingPlanStatusReasonsListFilter
    RoutingPlanStatusReasonsRoutingPlanStatusReasonReasonEnumFilter:
      properties:
        eq:
          description: Search by reason
          enum:
            - REROUTE_AFTER_SHORTPICK
            - MANUALLY_REROUTED
            - MANUALLY_ASSIGNED
          type: string
        in:
          description: Search by reason
          enum:
            - REROUTE_AFTER_SHORTPICK
            - MANUALLY_REROUTED
            - MANUALLY_ASSIGNED
          type: string
        notEq:
          description: Search by reason
          enum:
            - REROUTE_AFTER_SHORTPICK
            - MANUALLY_REROUTED
            - MANUALLY_ASSIGNED
          type: string
      title: RoutingPlanStatusReasonsRoutingPlanStatusReasonReasonEnumFilter
      type: object
      description: RoutingPlanStatusReasonsRoutingPlanStatusReasonReasonEnumFilter
    RoutingPlanStatusReasonsRoutingPlanStatusReasonStatusEnumFilter:
      properties:
        eq:
          description: Search by status
          enum:
            - OBSOLETE
          type: string
        in:
          description: Search by status
          enum:
            - OBSOLETE
          type: string
        notEq:
          description: Search by status
          enum:
            - OBSOLETE
          type: string
      title: RoutingPlanStatusReasonsRoutingPlanStatusReasonStatusEnumFilter
      type: object
      description: RoutingPlanStatusReasonsRoutingPlanStatusReasonStatusEnumFilter
    RoutingPlanTargetAddressFilter:
      properties:
        city:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by city
        country:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by country
        customAttributes:
          additionalProperties:
            anyOf:
              - $ref: '#/components/schemas/BooleanFilter'
              - $ref: '#/components/schemas/StringEqFilter'
              - $ref: '#/components/schemas/NumberEqFilter'
              - $ref: '#/components/schemas/DateFilter'
          description: Search by custom attributes
          type: object
        province:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by province
        street:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by street
      title: RoutingPlanTargetAddressFilter
      type: object
      description: RoutingPlanTargetAddressFilter
    SafetyStock:
      properties:
        created:
          format: date-time
          type: string
        facilityRef:
          type: string
        id:
          type: string
        lastModified:
          format: date-time
          type: string
        tenantArticleId:
          type: string
        value:
          type: number
        version:
          type: number
      required:
        - tenantArticleId
        - value
        - created
        - id
        - lastModified
        - version
      title: SafetyStock
      type: object
      description: SafetyStock
    SafetyStockBulkOperation:
      properties:
        facilityRef:
          type: string
        tenantArticleId:
          type: string
        value:
          type: number
      required:
        - tenantArticleId
        - value
      title: SafetyStockBulkOperation
      type: object
      description: SafetyStockBulkOperation
    SafetyStockBulkOperationResult:
      properties:
        error:
          $ref: '#/components/schemas/BulkOperationError'
        facilityRef:
          type: string
        status:
          enum:
            - UPDATED
            - CREATED
            - FAILED
          type: string
        tenantArticleId:
          type: string
        value:
          type: number
      required:
        - tenantArticleId
        - facilityRef
        - value
        - status
      title: SafetyStockBulkOperationResult
      type: object
      description: SafetyStockBulkOperationResult
    SafetyStockBulkOperations:
      properties:
        operations:
          items:
            $ref: '#/components/schemas/SafetyStockBulkOperation'
          maxItems: 500
          minItems: 1
          type: array
      required:
        - operations
      title: SafetyStockBulkOperations
      type: object
      description: SafetyStockBulkOperations
    SafetyStocksPaginatedResult:
      properties:
        safetyStocks:
          items:
            $ref: '#/components/schemas/SafetyStock'
          type: array
        total:
          minimum: 0
          type: number
      required:
        - total
        - safetyStocks
      title: SafetyStocksPaginatedResult
      type: object
      description: SafetyStocksPaginatedResult
    SearchFilter:
      properties:
        like:
          description: Search by regex pattern
          maxLength: 256
          type: string
      title: SearchFilter
      type: object
      description: SearchFilter
    SearchOptions:
      properties:
        withTotal:
          description: >-
            Set to true to include the total count of items in the search
            result.
          type: boolean
      title: SearchOptions
      type: object
      description: SearchOptions
    ShipmentParcelsFilter:
      properties:
        status:
          allOf:
            - $ref: '#/components/schemas/ShipmentParcelsParcelStatusEnumFilter'
          description: Search by status
      title: ShipmentParcelsFilter
      type: object
      description: ShipmentParcelsFilter
    ShipmentParcelsListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/ShipmentParcelsFilter'
          description: Contains returns if at least one entry matches
      title: ShipmentParcelsListFilter
      type: object
      description: ShipmentParcelsListFilter
    ShipmentParcelsParcelStatusEnumFilter:
      properties:
        eq:
          description: Search by status
          enum:
            - OPEN
            - PROCESSING
            - DONE
            - FAILED
            - CANCELED
            - OBSOLETE
            - WAITING_FOR_INPUT
          type: string
        in:
          description: Search by status
          enum:
            - OPEN
            - PROCESSING
            - DONE
            - FAILED
            - CANCELED
            - OBSOLETE
            - WAITING_FOR_INPUT
          type: string
        notEq:
          description: Search by status
          enum:
            - OPEN
            - PROCESSING
            - DONE
            - FAILED
            - CANCELED
            - OBSOLETE
            - WAITING_FOR_INPUT
          type: string
      title: ShipmentParcelsParcelStatusEnumFilter
      type: object
      description: ShipmentParcelsParcelStatusEnumFilter
    ShipmentSearchPayload:
      properties:
        options:
          $ref: '#/components/schemas/SearchOptions'
        query:
          $ref: '#/components/schemas/ShipmentSearchQueryWrapper'
        size:
          default: 20
          description: Number of items to return.
          maximum: 250
          minimum: 1
          type: number
        sort:
          description: Use for sorting the result.
          items:
            $ref: '#/components/schemas/ShipmentSort'
          maxItems: 1
          minItems: 1
          type: array
        startAfterId:
          description: The ID to start after.
          type: string
      required:
        - query
      title: ShipmentSearchPayload
      type: object
      description: ShipmentSearchPayload
    ShipmentSearchQuery:
      properties:
        and:
          items:
            $ref: '#/components/schemas/ShipmentSearchQuery'
          type: array
        anonymized:
          allOf:
            - $ref: '#/components/schemas/BooleanFilter'
          description: Search by anonymized
        carrierKey:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by carrierKey
        carrierRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by carrierRef
        created:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by created
        facilityRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by facilityRef
        id:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by id
        or:
          items:
            $ref: '#/components/schemas/ShipmentSearchQuery'
          type: array
        parcels:
          allOf:
            - $ref: '#/components/schemas/ShipmentParcelsListFilter'
          description: Nested list search by parcels
        pickJobRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by pickJobRef
        status:
          allOf:
            - $ref: '#/components/schemas/ShipmentStatusEnumFilter'
          description: Search by status
        targetTime:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by targetTime
        tenantOrderId:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by tenantOrderId
      title: ShipmentSearchQuery
      type: object
      description: ShipmentSearchQuery
    ShipmentSearchQueryWrapper:
      properties:
        and:
          items:
            $ref: '#/components/schemas/ShipmentSearchQuery'
          type: array
        anonymized:
          allOf:
            - $ref: '#/components/schemas/BooleanFilter'
          description: Search by anonymized
        carrierKey:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by carrierKey
        carrierRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by carrierRef
        created:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by created
        facilityRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by facilityRef
        id:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by id
        or:
          items:
            $ref: '#/components/schemas/ShipmentSearchQuery'
          type: array
        parcels:
          allOf:
            - $ref: '#/components/schemas/ShipmentParcelsListFilter'
          description: Nested list search by parcels
        pickJobRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by pickJobRef
        status:
          allOf:
            - $ref: '#/components/schemas/ShipmentStatusEnumFilter'
          description: Search by status
        targetTime:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by targetTime
        tenantOrderId:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by tenantOrderId
      required:
        - created
      title: ShipmentSearchQueryWrapper
      type: object
      description: ShipmentSearchQueryWrapper
    ShipmentSort:
      properties:
        created:
          enum:
            - ASC
            - DESC
          type: string
        targetTime:
          enum:
            - ASC
            - DESC
          type: string
      title: ShipmentSort
      type: object
      description: ShipmentSort
    ShipmentStatusEnumFilter:
      properties:
        eq:
          description: Search by status
          enum:
            - INITIAL
            - REQUEST
            - RETRYABLE
            - CONFIRMED
            - COMPLETED
            - CANCELED
            - OBSOLETE
          type: string
        in:
          description: Search by status
          enum:
            - INITIAL
            - REQUEST
            - RETRYABLE
            - CONFIRMED
            - COMPLETED
            - CANCELED
            - OBSOLETE
          type: string
        notEq:
          description: Search by status
          enum:
            - INITIAL
            - REQUEST
            - RETRYABLE
            - CONFIRMED
            - COMPLETED
            - CANCELED
            - OBSOLETE
          type: string
      title: ShipmentStatusEnumFilter
      type: object
      description: ShipmentStatusEnumFilter
    StartStowJobAction:
      description: Sets the status of the stowjob to IN_PROGRESS
      properties:
        name:
          description: The name of the action that should be performed
          enum:
            - START_STOW_JOB
          type: string
        version:
          description: The current version of the stow job that should be modified
          type: number
      required:
        - version
        - name
      title: StartStowJobAction
      type: object
    Stock:
      properties:
        available:
          type: number
        availableUntil:
          description: >-
            defines until when a stock is included in the stock availability as
            available and used for routing
          format: date-time
          type: string
        conditions:
          description: |-
            Describes conditions of a stock
                *`DEFECTIVE` - stock is defective, not usable for customer orders
          items:
            enum:
              - DEFECTIVE
            type: string
          type: array
        created:
          format: date-time
          type: string
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        facilityRef:
          description: facility in which the stock is located
          type: string
        facilityWideReserved:
          deprecated: true
          type: number
        id:
          type: string
        lastModified:
          format: date-time
          type: string
        locationRef:
          description: location on which the stock is placed
          type: string
        properties:
          additionalProperties:
            type: string
          allOf:
            - $ref: '#/components/schemas/StockPropertyPreset'
          description: >-
            allow tracking of specific values such as expiry dates on a set of
            items. They should describe physical identifiable properties of the
            stock and are not meant to be used for metadata (see
            "customAttributes" for that).
        receiptDate:
          description: >-
            date-time when stock has entered the system, defaults to the
            creation date
          format: date-time
          type: string
        reserved:
          description: amount of this stock for customer orders
          type: number
        scannableCodes:
          description: scannableCodes such as barcodes that identify this stock
          items:
            type: string
          type: array
        scores:
          description: >-
            stock with a high score can used preferably over stock with a lower
            score in routing, depending on configuration. The score can
            represent different attributes of the stock like zone, storage
            location, expiry date or receipt date.
          items:
            type: string
          type: array
        serializedProperties:
          description: >-
            properties object serialized as JSON string, sorted alphabetically
            by key
          type: string
        tenantArticleId:
          description: tenantArticleId of the stock
          type: string
        tenantStockId:
          description: >-
            tenantStockId is an optional identifier for the stock in the tenant
            system, only set on stocks synced from listings
          type: string
        traitConfig:
          description: >-
            defines the traits of the stock, overrules the storage location
            traits
          items:
            $ref: '#/components/schemas/StorageLocationTraitConfigEntry'
          type: array
        traits:
          description: >-
            provide information on how storage locations and stocks are to be
            handled in operational processes. Can only be set via
            storageLocation. 
          items:
            enum:
              - PICKABLE
              - ACCESSIBLE
              - KEEP_ON_ZERO
              - OUTBOUND
              - IN_MOTION
            type: string
          type: array
        value:
          format: int32
          minimum: 0
          type: integer
        version:
          type: number
      required:
        - facilityRef
        - tenantArticleId
        - value
        - reserved
        - facilityWideReserved
        - available
        - id
        - version
        - created
        - lastModified
        - traits
        - serializedProperties
      title: Stock
      type: object
      description: Stock
    StockAction:
      properties:
        action:
          oneOf:
            - $ref: '#/components/schemas/StockDeleteByLocations'
            - $ref: '#/components/schemas/StockDeleteByProducts'
            - $ref: '#/components/schemas/StockDeleteByIds'
            - $ref: '#/components/schemas/StockMoveToLocation'
        actions:
          deprecated: true
          description: Deprecated. Use 'action' with a single action input instead.
          items:
            oneOf:
              - $ref: '#/components/schemas/StockDeleteByLocations'
              - $ref: '#/components/schemas/StockDeleteByProducts'
              - $ref: '#/components/schemas/StockDeleteByIds'
          maxItems: 10
          type: array
      title: StockAction
      type: object
      description: StockAction
    StockActionResult:
      properties:
        name:
          enum:
            - DELETE_BY_LOCATIONS
            - DELETE_BY_PRODUCTS
            - DELETE_BY_IDS
            - MOVE_TO_LOCATION
          type: string
        result:
          oneOf:
            - $ref: '#/components/schemas/StockDeleteActionResult'
            - $ref: '#/components/schemas/StockMoveToLocationActionResult'
      required:
        - name
        - result
      title: StockActionResult
      type: object
      description: StockActionResult
    StockConditionEnumFilter:
      properties:
        eq:
          description: Search by conditions
          enum:
            - DEFECTIVE
          type: string
        in:
          description: Search by conditions
          enum:
            - DEFECTIVE
          type: string
        notEq:
          description: Search by conditions
          enum:
            - DEFECTIVE
          type: string
      title: StockConditionEnumFilter
      type: object
      description: StockConditionEnumFilter
    StockConditionEnumListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/StockConditionEnumFilter'
          description: Search by conditions
      title: StockConditionEnumListFilter
      type: object
      description: StockConditionEnumListFilter
    StockDeleteActionResult:
      properties:
        ids:
          items:
            type: string
          type: array
      required:
        - ids
      title: StockDeleteActionResult
      type: object
      description: StockDeleteActionResult
    StockDeleteByIds:
      properties:
        ids:
          items:
            type: string
          maxItems: 500
          type: array
        name:
          enum:
            - DELETE_BY_IDS
          type: string
      required:
        - name
        - ids
      title: StockDeleteByIds
      type: object
      description: StockDeleteByIds
    StockDeleteByLocations:
      properties:
        locationRefs:
          items:
            type: string
          maxItems: 500
          type: array
        name:
          enum:
            - DELETE_BY_LOCATIONS
          type: string
      required:
        - name
        - locationRefs
      title: StockDeleteByLocations
      type: object
      description: StockDeleteByLocations
    StockDeleteByProducts:
      properties:
        facilityRef:
          type: string
        name:
          enum:
            - DELETE_BY_PRODUCTS
          type: string
        tenantArticleIds:
          items:
            type: string
          maxItems: 500
          type: array
      required:
        - name
        - facilityRef
        - tenantArticleIds
      title: StockDeleteByProducts
      type: object
      description: StockDeleteByProducts
    StockDistribution:
      properties:
        facilityStocks:
          items:
            $ref: '#/components/schemas/FacilityStockDistribution'
          type: array
        summary:
          $ref: '#/components/schemas/StockSummaryDetails'
        tenantArticleId:
          type: string
      required:
        - tenantArticleId
        - summary
        - facilityStocks
      title: StockDistribution
      type: object
      description: StockDistribution
    StockForCreation:
      properties:
        availableUntil:
          description: >-
            defines until when a stock is included in the stock availability as
            available and used for routing
          format: date-time
          type: string
        conditions:
          description: |-
            Describes conditions of a stock
                *`DEFECTIVE` - stock is defective, not usable for customer orders
          items:
            enum:
              - DEFECTIVE
            type: string
          type: array
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        facilityRef:
          description: facility in which the stock is located
          type: string
        locationRef:
          description: location on which the stock is placed
          type: string
        properties:
          additionalProperties:
            type: string
          allOf:
            - $ref: '#/components/schemas/StockPropertyPreset'
          description: >-
            allow tracking of specific values such as expiry dates on a set of
            items. They should describe physical identifiable properties of the
            stock and are not meant to be used for metadata (see
            "customAttributes" for that).
        receiptDate:
          description: >-
            date-time when stock has entered the system, defaults to the
            creation date
          format: date-time
          type: string
        tenantArticleId:
          description: tenantArticleId of the stock
          type: string
        traitConfig:
          description: >-
            defines the traits of the stock, overrules the storage location
            traits
          items:
            $ref: '#/components/schemas/StorageLocationTraitConfigEntry'
          type: array
        value:
          format: int32
          minimum: 0
          type: integer
      required:
        - facilityRef
        - tenantArticleId
        - value
      title: StockForCreation
      type: object
      description: StockForCreation
    StockForUpdate:
      properties:
        conditions:
          description: |-
            Describes conditions of a stock
                *`DEFECTIVE` - stock is defective, not usable for customer orders
          items:
            enum:
              - DEFECTIVE
            type: string
          type: array
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        locationRef:
          nullable: true
          type: string
        traitConfig:
          description: >-
            defines the traits of the stock, overrules the storage location
            traits
          items:
            $ref: '#/components/schemas/StorageLocationTraitConfigEntry'
          type: array
        value:
          format: int32
          minimum: 0
          type: integer
        version:
          type: number
      required:
        - value
        - version
      title: StockForUpdate
      type: object
      description: StockForUpdate
    StockForUpsertUpdate:
      properties:
        conditions:
          description: |-
            Describes conditions of a stock
                *`DEFECTIVE` - stock is defective, not usable for customer orders
          items:
            enum:
              - DEFECTIVE
            type: string
          type: array
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        id:
          type: string
        locationRef:
          nullable: true
          type: string
        traitConfig:
          description: >-
            defines the traits of the stock, overrules the storage location
            traits
          items:
            $ref: '#/components/schemas/StorageLocationTraitConfigEntry'
          type: array
        value:
          format: int32
          minimum: 0
          type: integer
        version:
          type: number
      required:
        - value
        - id
        - version
      title: StockForUpsertUpdate
      type: object
      description: StockForUpsertUpdate
    StockMoveToLocation:
      properties:
        amount:
          type: number
        fromStockId:
          type: string
        name:
          enum:
            - MOVE_TO_LOCATION
          type: string
        options:
          $ref: '#/components/schemas/MoveStockToLocationOptions'
        toLocationRef:
          type: string
      required:
        - name
        - fromStockId
        - toLocationRef
        - amount
      title: StockMoveToLocation
      type: object
      description: StockMoveToLocation
    StockMoveToLocationActionResult:
      properties:
        fromStock:
          $ref: '#/components/schemas/Stock'
        toStock:
          $ref: '#/components/schemas/Stock'
      required:
        - toStock
      title: StockMoveToLocationActionResult
      type: object
      description: StockMoveToLocationActionResult
    StockPaginatedResult:
      properties:
        stocks:
          items:
            $ref: '#/components/schemas/Stock'
          type: array
        total:
          description: >-
            The total number of items matching the search criteria. Only filled,
            if withTotal is set to true in the search options.
          minimum: 0
          type: number
      required:
        - stocks
      title: StockPaginatedResult
      type: object
      description: StockPaginatedResult
    StockPropertyPreset:
      properties:
        expiry:
          type: string
      title: StockPropertyPreset
      type: object
      description: StockPropertyPreset
    StockSearchPayload:
      properties:
        options:
          $ref: '#/components/schemas/SearchOptions'
        query:
          $ref: '#/components/schemas/StockSearchQuery'
        size:
          default: 20
          description: Number of items to return.
          maximum: 250
          minimum: 1
          type: number
        sort:
          description: Use for sorting the result.
          items:
            $ref: '#/components/schemas/StockSort'
          maxItems: 1
          minItems: 1
          type: array
        startAfterId:
          description: The ID to start after.
          type: string
      required:
        - query
      title: StockSearchPayload
      type: object
      description: StockSearchPayload
    StockSearchQuery:
      properties:
        and:
          items:
            $ref: '#/components/schemas/StockSearchQuery'
          type: array
        availableUntil:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by availableUntil
        conditions:
          allOf:
            - $ref: '#/components/schemas/StockConditionEnumListFilter'
          description: Search by conditions
        customAttributes:
          additionalProperties:
            anyOf:
              - $ref: '#/components/schemas/BooleanFilter'
              - $ref: '#/components/schemas/StringEqFilter'
              - $ref: '#/components/schemas/NumberEqFilter'
              - $ref: '#/components/schemas/DateFilter'
          description: Search by custom attributes
          type: object
        facilityRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by facilityRef
        id:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by id
        locationRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by locationRef
        or:
          items:
            $ref: '#/components/schemas/StockSearchQuery'
          type: array
        properties:
          additionalProperties:
            anyOf:
              - $ref: '#/components/schemas/StringFilter'
              - $ref: '#/components/schemas/DateFilter'
              - $ref: '#/components/schemas/KeyExistsFilter'
          description: Search by properties
          type: object
        receiptDate:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by receiptDate
        scannableCodes:
          allOf:
            - $ref: '#/components/schemas/StringListFilter'
          description: Search by scannableCodes
        tenantArticleId:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by tenantArticleId
        tenantStockId:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by tenantStockId
        traits:
          allOf:
            - $ref: '#/components/schemas/StockStorageLocationTraitEnumListFilter'
          description: Search by traits
        value:
          allOf:
            - $ref: '#/components/schemas/NumberFilter'
          description: Search by value
      title: StockSearchQuery
      type: object
      description: StockSearchQuery
    StockSort:
      properties:
        customAttributes:
          additionalProperties: true
          maxProperties: 1
          minProperties: 1
          type: object
        lastModified:
          enum:
            - ASC
            - DESC
          type: string
        locationName:
          enum:
            - ASC
            - DESC
          type: string
        tenantArticleId:
          enum:
            - ASC
            - DESC
          type: string
        value:
          enum:
            - ASC
            - DESC
          type: string
      title: StockSort
      type: object
      description: StockSort
    StockStorageLocationTraitEnumFilter:
      properties:
        eq:
          description: Search by traits
          enum:
            - PICKABLE
            - ACCESSIBLE
            - KEEP_ON_ZERO
            - OUTBOUND
            - IN_MOTION
          type: string
        in:
          description: Search by traits
          enum:
            - PICKABLE
            - ACCESSIBLE
            - KEEP_ON_ZERO
            - OUTBOUND
            - IN_MOTION
          type: string
        notEq:
          description: Search by traits
          enum:
            - PICKABLE
            - ACCESSIBLE
            - KEEP_ON_ZERO
            - OUTBOUND
            - IN_MOTION
          type: string
      title: StockStorageLocationTraitEnumFilter
      type: object
      description: StockStorageLocationTraitEnumFilter
    StockStorageLocationTraitEnumListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/StockStorageLocationTraitEnumFilter'
          description: Search by traits
      title: StockStorageLocationTraitEnumListFilter
      type: object
      description: StockStorageLocationTraitEnumListFilter
    StockSummaries:
      properties:
        stockSummaries:
          items:
            $ref: '#/components/schemas/StockSummary'
          type: array
        total:
          minimum: 0
          type: number
      required:
        - total
        - stockSummaries
      title: StockSummaries
      type: object
      description: StockSummaries
    StockSummary:
      properties:
        article:
          $ref: '#/components/schemas/StockSummaryArticle'
        details:
          $ref: '#/components/schemas/StockSummaryDetails'
        includedFacilityRefs:
          description: >-
            ALPHA Status!. The facilityRefs that are included in the stock
            summary.
          items:
            type: string
          type: array
      required:
        - includedFacilityRefs
        - article
        - details
      title: StockSummary
      type: object
      description: StockSummary
    StockSummaryArticle:
      properties:
        imageUrl:
          type: string
        tenantArticleId:
          type: string
        title:
          type: string
      required:
        - tenantArticleId
        - title
      title: StockSummaryArticle
      type: object
      description: StockSummaryArticle
    StockSummaryDetails:
      properties:
        available:
          deprecated: true
          description: >-
            This field is deprecated and replaced by new availability concepts.
            Please see
            https://docs.fulfillmenttools.com/api-docs/use-cases/inventory-management/global-inventory/availability
            for more information.
          minimum: 0
          type: number
        availableForPicking:
          type: number
        availableOnStock:
          type: number
        availableToPromise:
          deprecated: true
          description: >-
            This field is deprecated and replaced by new availability concepts.
            Please see
            https://docs.fulfillmenttools.com/api-docs/use-cases/inventory-management/global-inventory/availability
            for more information.
          type: number
        byTrait:
          $ref: '#/components/schemas/ByTrait'
        channelAdjusted:
          items:
            $ref: '#/components/schemas/ChannelStockAvailability'
          type: array
        readyToPick:
          deprecated: true
          description: >-
            This field is deprecated and replaced by new availability concepts.
            Please see
            https://docs.fulfillmenttools.com/api-docs/use-cases/inventory-management/global-inventory/availability
            for more information.
          type: number
        reserved:
          minimum: 0
          type: number
        safetyStock:
          minimum: 0
          type: number
        stockOnHand:
          type: number
        totalAmount:
          minimum: 0
          type: number
      required:
        - reserved
        - totalAmount
        - available
        - safetyStock
        - byTrait
        - availableForPicking
        - availableToPromise
        - readyToPick
        - availableOnStock
        - stockOnHand
      title: StockSummaryDetails
      type: object
      description: StockSummaryDetails
    StockUpsertOperationResult:
      properties:
        status:
          enum:
            - UPDATED
            - CREATED
          type: string
        stock:
          $ref: '#/components/schemas/Stock'
      required:
        - stock
        - status
      title: StockUpsertOperationResult
      type: object
      description: StockUpsertOperationResult
    StocksForUpsert:
      properties:
        stocks:
          description: >-
            Please be sure to include each stock (by ID) only once, when
            updating. Otherwise the whole batch is rejected with an error.
          items:
            oneOf:
              - $ref: '#/components/schemas/StockForCreation'
              - $ref: '#/components/schemas/StockForUpsertUpdate'
              - not:
                  required:
                    - version
                properties:
                  id:
                    type: string
                  locationRef:
                    nullable: true
                    type: string
                  value:
                    format: int32
                    minimum: 0
                    type: integer
                required:
                  - id
                  - value
                type: object
          maxItems: 500
          type: array
      required:
        - stocks
      title: StocksForUpsert
      type: object
      description: StocksForUpsert
    StorageLocationBulkEventPayload:
      properties:
        items:
          items:
            $ref: '#/components/schemas/StorageLocationEventPayload'
          type: array
      required:
        - items
      title: StorageLocationBulkEventPayload
      type: object
      description: StorageLocationBulkEventPayload
    StorageLocationBulkWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/StorageLocationBulkEventPayload'
      required:
        - payload
      title: StorageLocationBulkWebHookEvent
      type: object
      description: StorageLocationBulkWebHookEvent
    StorageLocationEventPayload:
      properties:
        created:
          description: >-
            The date this entity was created at the platform. This value is
            generated by the service.
          example: 2020-02-03T08:45:51.525Z
          format: date-time
          type: string
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        facilityRef:
          type: string
        id:
          type: string
        information:
          type: string
        lastModified:
          description: >-
            The date this entity was modified last. This value is generated by
            the service.
          example: 2020-02-03T09:45:51.525Z
          format: date-time
          type: string
        name:
          type: string
        runningSequences:
          items:
            $ref: '#/components/schemas/StorageLocationEventSequenceItem'
          type: array
        scannableCodes:
          items:
            type: string
          type: array
        tenantLocationId:
          type: string
        traitConfig:
          items:
            $ref: '#/components/schemas/StorageLocationEventTraitConfigInner'
          type: array
        traits:
          items:
            $ref: '#/components/schemas/StorageLocationTrait'
          type: array
        type:
          $ref: '#/components/schemas/StorageLocationType'
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
        zoneName:
          type: string
        zoneRef:
          type: string
      required:
        - version
        - id
        - facilityRef
        - traits
        - name
        - type
        - scannableCodes
        - runningSequences
      title: StorageLocationEventPayload
      type: object
      description: StorageLocationEventPayload
    StorageLocationEventSequenceItem:
      properties:
        nextStorageLocationRef:
          type: string
        previousStorageLocationRef:
          type: string
        score:
          type: number
        type:
          $ref: '#/components/schemas/StorageLocationSequenceType'
      required:
        - type
      title: StorageLocationEventSequenceItem
      type: object
      description: StorageLocationEventSequenceItem
    StorageLocationEventTraitConfigInner:
      properties:
        enabled:
          type: boolean
        trait:
          $ref: '#/components/schemas/StorageLocationTrait'
      required:
        - trait
        - enabled
      title: StorageLocationEventTraitConfigInner
      type: object
      description: StorageLocationEventTraitConfigInner
    StorageLocationRecommendation:
      properties:
        stockCount:
          type: number
        storageLocation:
          $ref: '#/components/schemas/StorageLocation'
      required:
        - storageLocation
        - stockCount
      title: StorageLocationRecommendation
      type: object
      description: StorageLocationRecommendation
    StorageLocationReferencedFilter:
      properties:
        stock:
          allOf:
            - $ref: '#/components/schemas/StorageLocationReferencedStockFilter'
          description: Nested search by stock
      title: StorageLocationReferencedFilter
      type: object
      description: StorageLocationReferencedFilter
    StorageLocationReferencedStockFilter:
      properties:
        hasStocks:
          allOf:
            - $ref: '#/components/schemas/BooleanFilter'
          description: Whether the storage locations has any stocks on it.
        sumOfValues:
          allOf:
            - $ref: '#/components/schemas/NumberFilter'
          description: >-
            The sum of all stock values in this storage location, i.e. how much
            stock is stored in this location.
      title: StorageLocationReferencedStockFilter
      type: object
      description: StorageLocationReferencedStockFilter
    StorageLocationSearchPayload:
      properties:
        options:
          $ref: '#/components/schemas/SearchOptions'
        query:
          $ref: '#/components/schemas/StorageLocationSearchQuery'
        size:
          default: 20
          description: Number of items to return.
          maximum: 250
          minimum: 1
          type: number
        sort:
          description: Use for sorting the result.
          items:
            $ref: '#/components/schemas/StorageLocationSort'
          maxItems: 1
          minItems: 1
          type: array
        startAfterId:
          description: The ID to start after.
          type: string
      required:
        - query
      title: StorageLocationSearchPayload
      type: object
      description: StorageLocationSearchPayload
    StorageLocationSearchQuery:
      properties:
        and:
          items:
            $ref: '#/components/schemas/StorageLocationSearchQuery'
          type: array
        created:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by created
        customAttributes:
          additionalProperties:
            anyOf:
              - $ref: '#/components/schemas/BooleanFilter'
              - $ref: '#/components/schemas/StringEqFilter'
              - $ref: '#/components/schemas/NumberEqFilter'
              - $ref: '#/components/schemas/DateFilter'
          description: Search by custom attributes
          type: object
        facilityRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by facilityRef
        id:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by id
        name:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by name
        or:
          items:
            $ref: '#/components/schemas/StorageLocationSearchQuery'
          type: array
        referenced:
          allOf:
            - $ref: '#/components/schemas/StorageLocationReferencedFilter'
          description: Nested search by referenced
        scannableCodes:
          allOf:
            - $ref: '#/components/schemas/StringListFilter'
          description: Search by scannableCodes
        tenantLocationId:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by tenantLocationId
        traits:
          allOf:
            - $ref: '#/components/schemas/StorageLocationTraitEnumListFilter'
          description: Search by traits
        type:
          allOf:
            - $ref: '#/components/schemas/StorageLocationTypeEnumFilter'
          description: Search by type
        zoneRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by zoneRef
      title: StorageLocationSearchQuery
      type: object
      description: StorageLocationSearchQuery
    StorageLocationSort:
      properties:
        created:
          enum:
            - ASC
            - DESC
          type: string
        customAttributes:
          additionalProperties: true
          maxProperties: 1
          minProperties: 1
          type: object
        lastModified:
          enum:
            - ASC
            - DESC
          type: string
        name:
          enum:
            - ASC
            - DESC
          type: string
        tenantLocationId:
          enum:
            - ASC
            - DESC
          type: string
        zoneRef:
          enum:
            - ASC
            - DESC
          type: string
      title: StorageLocationSort
      type: object
      description: StorageLocationSort
    StorageLocationTraitConfigEntry:
      properties:
        enabled:
          description: whether the trait is enabled or not
          type: boolean
        trait:
          description: |-
            Describes what kind of actions this stock is available for
                 * `PICKABLE`- The stock is available for picking
                 * `ACCESSIBLE`- The stock is available for stock movements (stowing, inbound, etc)
                 * `KEEP_ON_ZERO`- The stock will not be deleted when emptied
                 * `OUTBOUND`- The stock is intended for outbound processes
          type: string
      required:
        - enabled
        - trait
      title: StorageLocationTraitConfigEntry
      type: object
      description: StorageLocationTraitConfigEntry
    StorageLocationTraitEnumFilter:
      properties:
        eq:
          description: Search by traits
          enum:
            - PICKABLE
            - ACCESSIBLE
            - KEEP_ON_ZERO
            - OUTBOUND
            - IN_MOTION
          type: string
        in:
          description: Search by traits
          enum:
            - PICKABLE
            - ACCESSIBLE
            - KEEP_ON_ZERO
            - OUTBOUND
            - IN_MOTION
          type: string
        notEq:
          description: Search by traits
          enum:
            - PICKABLE
            - ACCESSIBLE
            - KEEP_ON_ZERO
            - OUTBOUND
            - IN_MOTION
          type: string
      title: StorageLocationTraitEnumFilter
      type: object
      description: StorageLocationTraitEnumFilter
    StorageLocationTraitEnumListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/StorageLocationTraitEnumFilter'
          description: Search by traits
      title: StorageLocationTraitEnumListFilter
      type: object
      description: StorageLocationTraitEnumListFilter
    StorageLocationTypeEnumFilter:
      properties:
        eq:
          description: Search by type
          enum:
            - SINGLE_STORAGE
            - BULK_STORAGE
          type: string
        in:
          description: Search by type
          enum:
            - SINGLE_STORAGE
            - BULK_STORAGE
          type: string
        notEq:
          description: Search by type
          enum:
            - SINGLE_STORAGE
            - BULK_STORAGE
          type: string
      title: StorageLocationTypeEnumFilter
      type: object
      description: StorageLocationTypeEnumFilter
    StowJob:
      properties:
        assignedUsers:
          description: The users that are assigned to the stow job
          items:
            $ref: '#/components/schemas/AssignedUser'
          maxItems: 20
          type: array
        created:
          description: Creation date of the entity, auto-generated if not provided
          format: date-time
          type: string
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        facilityRef:
          description: >-
            Non-human-readable reference to the facility where the stow job is
            executed
          type: string
        id:
          description: Auto-generated, unique primary identifier of the stow job
          type: string
        lastModified:
          description: Service-generated last modification date of the entity
          format: date-time
          type: string
        priority:
          description: Priority level of the job
          type: number
        shortId:
          description: Readable identifier for display purposes, not unique.
          type: string
        status:
          description: The status of the stowJob
          enum:
            - OPEN
            - IN_PROGRESS
            - CLOSED
            - CANCELED
            - PAUSED
          type: string
        stowLineItems:
          description: The line items that should be stowed
          items:
            $ref: '#/components/schemas/StowLineItem'
          type: array
        targetTime:
          description: >-
            The time by which the job should be completed. Use for
            prioritization and scheduling
          format: date-time
          type: string
        version:
          description: The version of the entity, used for optimistic locking mechanisms
          type: number
      required:
        - facilityRef
        - status
        - stowLineItems
        - id
        - version
      title: StowJob
      type: object
      description: StowJob
    StowJobActionName:
      description: The name of the action that should be performed
      enum:
        - START_STOW_JOB
        - PAUSE_STOW_JOB
        - OPEN_STOW_JOB
        - CANCEL_STOW_JOB
        - CLOSE_STOW_JOB
        - MODIFY_STOW_LINE_ITEMS
        - REPLACE_ASSIGNED_USERS
      type: string
      xml:
        name: StowJobActionName
      title: StowJobActionName
    StowJobForCreation:
      properties:
        assignedUsers:
          description: The users that are assigned to the stow job
          items:
            anyOf:
              - $ref: '#/components/schemas/AssignedUserForCreationById'
              - $ref: '#/components/schemas/AssignedUserForCreationByName'
              - $ref: '#/components/schemas/AssignedUser'
          maxItems: 20
          type: array
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        facilityRef:
          description: >-
            Non-human-readable reference to the facility where the stow job is
            executed
          type: string
        priority:
          description: Priority level of the job
          type: number
        shortId:
          description: Readable identifier for display purposes, not unique.
          type: string
        status:
          description: The status of the stowJob
          enum:
            - OPEN
            - IN_PROGRESS
            - CLOSED
            - CANCELED
            - PAUSED
          type: string
        stowLineItems:
          description: The line items that should be stowed
          items:
            $ref: '#/components/schemas/StowLineItemForCreation'
          type: array
        targetTime:
          description: >-
            The time by which the job should be completed. Use for
            prioritization and scheduling
          format: date-time
          type: string
      required:
        - facilityRef
        - status
        - stowLineItems
      title: StowJobForCreation
      type: object
      description: StowJobForCreation
    StowJobForPatch:
      properties:
        assignedUsers:
          description: The users that are assigned to the stow job
          items:
            anyOf:
              - $ref: '#/components/schemas/AssignedUserForCreationById'
              - $ref: '#/components/schemas/AssignedUserForCreationByName'
              - $ref: '#/components/schemas/AssignedUser'
          maxItems: 20
          type: array
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        priority:
          description: Information for user about which job should be started first
          type: number
        targetTime:
          format: date-time
          type: string
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms
          type: number
      required:
        - version
      title: StowJobForPatch
      type: object
      description: StowJobForPatch
    StowJobPaginatedResult:
      properties:
        stowJobs:
          items:
            $ref: '#/components/schemas/StowJob'
          type: array
        total:
          description: >-
            The total number of items matching the search criteria. Only filled,
            if withTotal is set to true in the search options.
          minimum: 0
          type: number
      required:
        - stowJobs
      title: StowJobPaginatedResult
      type: object
      description: StowJobPaginatedResult
    StowJobReplaceAssignedUsersAction:
      description: REPLACE_ASSIGNED_USERS replaces the assigned users of the stow job
      properties:
        assignedUsers:
          description: The users are assigned to the stow job
          items:
            anyOf:
              - $ref: '#/components/schemas/AssignedUserForCreationById'
              - $ref: '#/components/schemas/AssignedUserForCreationByName'
              - $ref: '#/components/schemas/AssignedUser'
          maxItems: 20
          type: array
        name:
          description: The name of the action that should be performed
          enum:
            - REPLACE_ASSIGNED_USERS
          type: string
        version:
          description: The current version of the stow job that should be modified
          type: number
      required:
        - version
        - name
        - assignedUsers
      title: StowJobReplaceAssignedUsersAction
      type: object
    StowJobSearchPayload:
      properties:
        options:
          $ref: '#/components/schemas/SearchOptions'
        query:
          $ref: '#/components/schemas/StowJobSearchQueryWrapper'
        size:
          default: 20
          description: Number of items to return.
          maximum: 250
          minimum: 1
          type: number
        sort:
          description: Use for sorting the result.
          items:
            $ref: '#/components/schemas/StowJobSort'
          maxItems: 1
          minItems: 1
          type: array
        startAfterId:
          description: The ID to start after.
          type: string
      required:
        - query
      title: StowJobSearchPayload
      type: object
      description: StowJobSearchPayload
    StowJobSearchQuery:
      properties:
        and:
          items:
            $ref: '#/components/schemas/StowJobSearchQuery'
          type: array
        created:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by created
        customAttributes:
          additionalProperties:
            anyOf:
              - $ref: '#/components/schemas/BooleanFilter'
              - $ref: '#/components/schemas/StringEqFilter'
              - $ref: '#/components/schemas/NumberEqFilter'
              - $ref: '#/components/schemas/DateFilter'
          description: Search by custom attributes
          type: object
        facilityRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by facilityRef
        id:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by id
        or:
          items:
            $ref: '#/components/schemas/StowJobSearchQuery'
          type: array
        priority:
          allOf:
            - $ref: '#/components/schemas/NumberFilter'
          description: Search by priority
        shortId:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by shortId
        status:
          allOf:
            - $ref: '#/components/schemas/StowJobStatusTypeEnumFilter'
          description: Search by status
        stowLineItems:
          allOf:
            - $ref: '#/components/schemas/StowJobStowLineItemsListFilter'
          description: Nested list search by stowLineItems
        targetTime:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by targetTime
      title: StowJobSearchQuery
      type: object
      description: StowJobSearchQuery
    StowJobSearchQueryWrapper:
      properties:
        and:
          items:
            $ref: '#/components/schemas/StowJobSearchQuery'
          type: array
        created:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by created
        customAttributes:
          additionalProperties:
            anyOf:
              - $ref: '#/components/schemas/BooleanFilter'
              - $ref: '#/components/schemas/StringEqFilter'
              - $ref: '#/components/schemas/NumberEqFilter'
              - $ref: '#/components/schemas/DateFilter'
          description: Search by custom attributes
          type: object
        facilityRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by facilityRef
        id:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by id
        or:
          items:
            $ref: '#/components/schemas/StowJobSearchQuery'
          type: array
        priority:
          allOf:
            - $ref: '#/components/schemas/NumberFilter'
          description: Search by priority
        shortId:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by shortId
        status:
          allOf:
            - $ref: '#/components/schemas/StowJobStatusTypeEnumFilter'
          description: Search by status
        stowLineItems:
          allOf:
            - $ref: '#/components/schemas/StowJobStowLineItemsListFilter'
          description: Nested list search by stowLineItems
        targetTime:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by targetTime
      required:
        - created
      title: StowJobSearchQueryWrapper
      type: object
      description: StowJobSearchQueryWrapper
    StowJobSort:
      properties:
        created:
          enum:
            - ASC
            - DESC
          type: string
        customAttributes:
          additionalProperties: true
          maxProperties: 1
          minProperties: 1
          type: object
        lastModified:
          enum:
            - ASC
            - DESC
          type: string
        targetTime:
          enum:
            - ASC
            - DESC
          type: string
      title: StowJobSort
      type: object
      description: StowJobSort
    StowJobStatus:
      description: The status of the stowJob
      enum:
        - OPEN
        - IN_PROGRESS
        - CLOSED
        - CANCELED
        - PAUSED
      type: string
      xml:
        name: StowJobStatus
      title: StowJobStatus
    StowJobStatusTypeEnumFilter:
      properties:
        eq:
          description: Search by status
          enum:
            - OPEN
            - IN_PROGRESS
            - CLOSED
            - CANCELED
            - PAUSED
          type: string
        in:
          description: Search by status
          enum:
            - OPEN
            - IN_PROGRESS
            - CLOSED
            - CANCELED
            - PAUSED
          type: string
        notEq:
          description: Search by status
          enum:
            - OPEN
            - IN_PROGRESS
            - CLOSED
            - CANCELED
            - PAUSED
          type: string
      title: StowJobStatusTypeEnumFilter
      type: object
      description: StowJobStatusTypeEnumFilter
    StowJobStockInformation:
      properties:
        properties:
          additionalProperties:
            type: string
          allOf:
            - $ref: '#/components/schemas/StockPropertyPreset'
          description: >-
            allow tracking of specific values such as expiry dates on a set of
            items. They should describe physical identifiable properties of the
            stock and are not meant to be used for metadata (see
            "customAttributes" for that).
        traitConfig:
          items:
            $ref: '#/components/schemas/StorageLocationTraitConfigEntry'
          type: array
      title: StowJobStockInformation
      type: object
      description: StowJobStockInformation
    StowJobStowLineItemsArticleFilter:
      properties:
        tenantArticleId:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by tenantArticleId
      title: StowJobStowLineItemsArticleFilter
      type: object
      description: StowJobStowLineItemsArticleFilter
    StowJobStowLineItemsFilter:
      properties:
        article:
          allOf:
            - $ref: '#/components/schemas/StowJobStowLineItemsArticleFilter'
          description: Nested search by article
        heldStockRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by heldStockRef
        id:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by id
        stowTo:
          allOf:
            - $ref: '#/components/schemas/StowJobStowLineItemsStowToListFilter'
          description: Nested list search by stowTo
        takeFrom:
          allOf:
            - $ref: '#/components/schemas/StowJobStowLineItemsTakeFromFilter'
          description: Nested search by takeFrom
      title: StowJobStowLineItemsFilter
      type: object
      description: StowJobStowLineItemsFilter
    StowJobStowLineItemsListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/StowJobStowLineItemsFilter'
          description: Contains returns if at least one entry matches
      title: StowJobStowLineItemsListFilter
      type: object
      description: StowJobStowLineItemsListFilter
    StowJobStowLineItemsStowToFilter:
      properties:
        storageLocationRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by storageLocationRef
        stowed:
          allOf:
            - $ref: '#/components/schemas/StowJobStowLineItemsStowToStowedFilter'
          description: Nested search by stowed
        type:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by type
      title: StowJobStowLineItemsStowToFilter
      type: object
      description: StowJobStowLineItemsStowToFilter
    StowJobStowLineItemsStowToListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/StowJobStowLineItemsStowToFilter'
          description: Contains returns if at least one entry matches
      title: StowJobStowLineItemsStowToListFilter
      type: object
      description: StowJobStowLineItemsStowToListFilter
    StowJobStowLineItemsStowToStowedFilter:
      properties:
        stowedStockRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by stowedStockRef
        stowedStorageLocationRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by stowedStorageLocationRef
      title: StowJobStowLineItemsStowToStowedFilter
      type: object
      description: StowJobStowLineItemsStowToStowedFilter
    StowJobStowLineItemsTakeFromFilter:
      properties:
        storageLocationRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by storageLocationRef
        taken:
          allOf:
            - $ref: '#/components/schemas/StowJobStowLineItemsTakeFromTakenFilter'
          description: Nested search by taken
        type:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by type
      title: StowJobStowLineItemsTakeFromFilter
      type: object
      description: StowJobStowLineItemsTakeFromFilter
    StowJobStowLineItemsTakeFromTakenFilter:
      properties:
        takenStockRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by takenStockRef
      title: StowJobStowLineItemsTakeFromTakenFilter
      type: object
      description: StowJobStowLineItemsTakeFromTakenFilter
    StowJobWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/StowJob'
      required:
        - payload
      title: StowJobWebHookEvent
      type: object
      description: StowJobWebHookEvent
    StowLineItem:
      properties:
        article:
          $ref: '#/components/schemas/StowLineItemArticle'
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        heldStockRef:
          description: >-
            Reference to a stock holding the goods after a take and before a
            stow has taken place
          type: string
        id:
          description: >-
            The ID of the stowLineItem. It is generated automatically during
            creation and serves as primary identifier of the entity
          type: string
        reasons:
          description: The reasons for the stow operation
          items:
            $ref: '#/components/schemas/ExternalStockChangeReasonOutput'
          maxItems: 10
          type: array
        stowTo:
          description: Instructions on how and where to stow the item
          oneOf:
            - items:
                $ref: '#/components/schemas/StowLineItemStowToWithId'
              type: array
            - $ref: '#/components/schemas/StowLineItemStowTo'
        takeFrom:
          allOf:
            - $ref: '#/components/schemas/StowLineItemTakeFromForCreation'
          description: Instructions on how and where to take the item from
      required:
        - article
        - stowTo
        - takeFrom
        - id
      title: StowLineItem
      type: object
      description: StowLineItem
    StowLineItemArticle:
      properties:
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        imageUrl:
          description: >-
            A web link to a picture of this item. Please make sure that no
            authentication is required to fetch the image!
          type: string
        measurementUnitKey:
          description: Identifier for the item's unit of measurement
          type: string
        scannableCodes:
          description: ScannableCodes such as barcodes related to the item
          items:
            type: string
          type: array
        tenantArticleId:
          description: Identifier for a certain product which the StowLineItem refers to
          type: string
        title:
          description: The title of the item
          type: string
        titleLocalized:
          description: The translations for the title of the item
          type: object
      required:
        - tenantArticleId
      title: StowLineItemArticle
      type: object
      description: StowLineItemArticle
    StowLineItemForCreation:
      properties:
        article:
          $ref: '#/components/schemas/StowLineItemArticle'
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        reasons:
          description: >-
            The reasons for the stow operation. Each reason can either be a
            stand-alone reason, or a preconfigured reasons by specifying the
            tenantReasonId and/or the id of the reason. If tenantReasonId and id
            are specified, they have to match.
          items:
            $ref: '#/components/schemas/ExternalStockChangeReasonInput'
          maxItems: 10
          type: array
        stowTo:
          description: Instructions on how and where to stow the item
          oneOf:
            - items:
                $ref: '#/components/schemas/StowLineItemStowToForUpdate'
              type: array
            - $ref: '#/components/schemas/StowLineItemStowToForCreation'
        takeFrom:
          allOf:
            - $ref: '#/components/schemas/StowLineItemTakeFromForCreation'
          description: Instructions on how and where to take the item from
      required:
        - article
        - stowTo
        - takeFrom
      title: StowLineItemForCreation
      type: object
      description: StowLineItemForCreation
    StowLineItemForUpdate:
      properties:
        article:
          allOf:
            - $ref: '#/components/schemas/StowLineItemArticle'
          description: The article that should be stowed
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        id:
          description: The ID of the stowLineItem. Leave empty for creation
          type: string
        reasons:
          description: The reasons for the stow operation
          items:
            $ref: '#/components/schemas/ExternalStockChangeReasonInput'
          maxItems: 10
          type: array
        stowTo:
          description: Instructions on how and where to stow the item
          oneOf:
            - items:
                $ref: '#/components/schemas/StowLineItemStowToForUpdate'
              type: array
            - $ref: '#/components/schemas/StowLineItemStowToForCreation'
        takeFrom:
          allOf:
            - $ref: '#/components/schemas/StowLineItemTakeFromForCreation'
          description: Instructions on how and where to take the item from
      title: StowLineItemForUpdate
      type: object
      description: StowLineItemForUpdate
    StowLineItemStowTo:
      properties:
        quantity:
          description: Quantity that should be taken / stowed
          type: number
        scannableCodes:
          description: >-
            ScannableCodes such as barcodes relevant for taking or stowing the
            item
          items:
            type: string
          type: array
        stockRef:
          description: >-
            Stock from which the item should be taken / stowed to. Leave empty
            for type UNREGISTERED / DISCARD.
          type: string
        storageLocationRef:
          description: >-
            Storage location from which the item should be taken or to which the
            item should be stowed
          type: string
        stowed:
          allOf:
            - $ref: '#/components/schemas/StowedStowLineItemStowToForCreation'
          description: >-
            Operative data holding information about the stowing progress. **As
            for now stocks will *not* be updated even if the numbers indicate so
            because the stow job feature is still under development.**
        type:
          description: >-
            Define if items should be stowed on a specific stock or storage
            location. Use type DISCARD if the item should be booked out of the
            system
          enum:
            - STOCK
            - LOCATION
            - DISCARD
          type: string
      required:
        - quantity
        - type
      title: StowLineItemStowTo
      type: object
      description: StowLineItemStowTo
    StowLineItemStowToForCreation:
      properties:
        quantity:
          description: Quantity that should be taken / stowed
          type: number
        scannableCodes:
          description: >-
            ScannableCodes such as barcodes relevant for taking or stowing the
            item
          items:
            type: string
          type: array
        stockRef:
          description: >-
            Stock from which the item should be taken / stowed to. Leave empty
            for type UNREGISTERED / DISCARD.
          type: string
        storageLocationRef:
          description: >-
            Storage location from which the item should be taken or to which the
            item should be stowed
          type: string
        stowed:
          allOf:
            - $ref: '#/components/schemas/StowedStowLineItemStowToForCreation'
          description: >-
            Operative data holding information about the stowing progress. **As
            for now stocks will *not* be updated even if the numbers indicate so
            because the stow job feature is still under development.**
        type:
          description: >-
            Define if items should be stowed on a specific stock or storage
            location. Use type DISCARD if the item should be booked out of the
            system
          enum:
            - STOCK
            - LOCATION
            - DISCARD
          type: string
      required:
        - quantity
        - type
      title: StowLineItemStowToForCreation
      type: object
      description: StowLineItemStowToForCreation
    StowLineItemStowToForUpdate:
      properties:
        id:
          type: string
        quantity:
          description: Quantity that should be taken / stowed
          type: number
        scannableCodes:
          description: >-
            ScannableCodes such as barcodes relevant for taking or stowing the
            item
          items:
            type: string
          type: array
        stockRef:
          description: >-
            Stock from which the item should be taken / stowed to. Leave empty
            for type UNREGISTERED / DISCARD.
          type: string
        storageLocationRef:
          description: >-
            Storage location from which the item should be taken or to which the
            item should be stowed
          type: string
        stowed:
          allOf:
            - $ref: '#/components/schemas/StowedStowLineItemStowToForCreation'
          description: >-
            Operative data holding information about the stowing progress. **As
            for now stocks will *not* be updated even if the numbers indicate so
            because the stow job feature is still under development.**
        type:
          description: >-
            Define if items should be stowed on a specific stock or storage
            location. Use type DISCARD if the item should be booked out of the
            system
          enum:
            - STOCK
            - LOCATION
            - DISCARD
          type: string
      required:
        - quantity
        - type
      title: StowLineItemStowToForUpdate
      type: object
      description: StowLineItemStowToForUpdate
    StowLineItemStowToType:
      description: >-
        Define if items should be stowed on a specific stock or storage
        location. Use type DISCARD if the item should be booked out of the
        system
      enum:
        - STOCK
        - LOCATION
        - DISCARD
      type: string
      xml:
        name: StowLineItemStowToType
      title: StowLineItemStowToType
    StowLineItemStowToWithId:
      properties:
        id:
          description: The ID of the stowTo instruction
          type: string
        quantity:
          description: Quantity that should be taken / stowed
          type: number
        scannableCodes:
          description: >-
            ScannableCodes such as barcodes relevant for taking or stowing the
            item
          items:
            type: string
          type: array
        stockRef:
          description: >-
            Stock from which the item should be taken / stowed to. Leave empty
            for type UNREGISTERED / DISCARD.
          type: string
        storageLocationRef:
          description: >-
            Storage location from which the item should be taken or to which the
            item should be stowed
          type: string
        stowed:
          allOf:
            - $ref: '#/components/schemas/StowedStowLineItemStowToForCreation'
          description: >-
            Operative data holding information about the stowing progress. **As
            for now stocks will *not* be updated even if the numbers indicate so
            because the stow job feature is still under development.**
        type:
          description: >-
            Define if items should be stowed on a specific stock or storage
            location. Use type DISCARD if the item should be booked out of the
            system
          enum:
            - STOCK
            - LOCATION
            - DISCARD
          type: string
      required:
        - quantity
        - type
        - id
      title: StowLineItemStowToWithId
      type: object
      description: StowLineItemStowToWithId
    StowLineItemTakeFrom:
      properties:
        quantity:
          description: Quantity that should be taken / stowed
          type: number
        scannableCodes:
          description: >-
            ScannableCodes such as barcodes relevant for taking or stowing the
            item
          items:
            type: string
          type: array
        stockInformation:
          allOf:
            - $ref: '#/components/schemas/StowJobStockInformation'
          description: >-
            Additional information about the newly created stock. **Only allowed
            for type UNREGISTERED**
        stockRef:
          description: >-
            Stock from which the item should be taken / stowed to. Leave empty
            for type UNREGISTERED / DISCARD.
          type: string
        storageLocationRef:
          description: >-
            Storage location from which the item should be taken or to which the
            item should be stowed
          type: string
        taken:
          allOf:
            - $ref: '#/components/schemas/TakenStowLineItemTakeFromForCreation'
          description: >-
            Operative data holding information about the stowing progress. **As
            for now stocks will *not* be updated even if the numbers indicate so
            because the stow job feature is still under development.**
        type:
          description: >-
            Define if items should be taken from specific stock or storage
            location. Use type UNREGISTERED if a new item should be booked into
            the system
          enum:
            - STOCK
            - LOCATION
            - UNREGISTERED
          type: string
      required:
        - quantity
        - type
      title: StowLineItemTakeFrom
      type: object
      description: StowLineItemTakeFrom
    StowLineItemTakeFromForCreation:
      properties:
        quantity:
          description: Quantity that should be taken / stowed
          type: number
        scannableCodes:
          description: >-
            ScannableCodes such as barcodes relevant for taking or stowing the
            item
          items:
            type: string
          type: array
        stockInformation:
          allOf:
            - $ref: '#/components/schemas/StowJobStockInformation'
          description: >-
            Additional information about the newly created stock. **Only allowed
            for type UNREGISTERED**
        stockRef:
          description: >-
            Stock from which the item should be taken / stowed to. Leave empty
            for type UNREGISTERED / DISCARD.
          type: string
        storageLocationRef:
          description: >-
            Storage location from which the item should be taken or to which the
            item should be stowed
          type: string
        taken:
          allOf:
            - $ref: '#/components/schemas/TakenStowLineItemTakeFromForCreation'
          description: >-
            Operative data holding information about the stowing progress. **As
            for now stocks will *not* be updated even if the numbers indicate so
            because the stow job feature is still under development.**
        type:
          description: >-
            Define if items should be taken from specific stock or storage
            location. Use type UNREGISTERED if a new item should be booked into
            the system
          enum:
            - STOCK
            - LOCATION
            - UNREGISTERED
          type: string
      required:
        - quantity
        - type
      title: StowLineItemTakeFromForCreation
      type: object
      description: StowLineItemTakeFromForCreation
    StowLineItemTakeFromType:
      description: >-
        Define if items should be taken from specific stock or storage location.
        Use type UNREGISTERED if a new item should be booked into the system.
      enum:
        - STOCK
        - LOCATION
        - UNREGISTERED
      type: string
      xml:
        name: StowLineItemTakeFromType
      title: StowLineItemTakeFromType
    StowedStowLineItemStowToForCreation:
      properties:
        stowedAt:
          description: >-
            Time and date on which the item was stowed. Will be set to the
            current time if not provided.
          format: date-time
          type: string
        stowedQuantity:
          description: Quantity that was stowed
          type: number
        stowedStockRef:
          description: >-
            Specifies the stock where the item will be stowed. Set this to null
            to explicitly create a new stock. 
             Exception: If stowTo.type is "DISCARD", a new stock will not be created when set to `null`. However, if a stock is specified, its quantity will be increased regardless of the type.
          nullable: true
          type: string
        stowedStorageLocationRef:
          description: >-
            If a new stock is created via stowedStockRef = null, this is used to
            set the storage location of the new stock. 
             If a stock is specified, this field will be ignored.
          type: string
      required:
        - stowedStockRef
        - stowedQuantity
      title: StowedStowLineItemStowToForCreation
      type: object
      description: StowedStowLineItemStowToForCreation
    StringEqFilter:
      properties:
        eq:
          maxLength: 256
          type: string
        notEq:
          maxLength: 256
          type: string
      title: StringEqFilter
      type: object
      description: StringEqFilter
    StringFilter:
      properties:
        eq:
          maxLength: 256
          type: string
        in:
          items:
            maxLength: 256
            type: string
          maxItems: 25
          type: array
        notEq:
          maxLength: 256
          type: string
        notIn:
          items:
            maxLength: 256
            type: string
          maxItems: 25
          type: array
      title: StringFilter
      type: object
      description: StringFilter
    StringListFilter:
      properties:
        contains:
          $ref: '#/components/schemas/StringEqFilter'
      title: StringListFilter
      type: object
      description: StringListFilter
    StringSearchFilter:
      properties:
        eq:
          maxLength: 256
          type: string
        in:
          items:
            maxLength: 256
            type: string
          maxItems: 25
          type: array
        like:
          description: Search by regex pattern
          maxLength: 256
          type: string
        notEq:
          maxLength: 256
          type: string
        notIn:
          items:
            maxLength: 256
            type: string
          maxItems: 25
          type: array
      title: StringSearchFilter
      type: object
      description: StringSearchFilter
    StrippedInboundProcess:
      properties:
        anonymized:
          description: >-
            Indicates the inbound process was anonymized acording to configured
            GDPR retention time.
          type: boolean
        created:
          format: date-time
          type: string
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        facilityRef:
          type: string
        id:
          type: string
        inboundDate:
          description: >-
            Aggregated dates from sources which advise incoming stock. Currently
            that is "purchaseOrder"
          items:
            format: date-time
            type: string
          type: array
        lastModified:
          format: date-time
          type: string
        onHold:
          description: >-
            Indicates if the inbound process is on hold and will not be
            processed further
          type: boolean
        origin:
          description: >-
            Aggregated origin data from sources which advise incoming stock.
            Currently that is just  "purchaseOrder"
          items:
            $ref: '#/components/schemas/InboundProcessOrigin'
          type: array
        scannableCodes:
          description: >-
            scannableCodes such as barcodes that are relevant in the
            inboundProcess, e.g. , barcode of the delivery note
          items:
            type: string
          type: array
        status:
          enum:
            - OPEN
            - PARTIAL_DELIVERY
            - ON_HOLD
            - CLOSED
          type: string
        tenantInboundProcessId:
          type: string
        version:
          type: number
      required:
        - facilityRef
        - id
        - version
        - created
        - lastModified
        - inboundDate
        - origin
        - anonymized
        - status
        - onHold
        - scannableCodes
      title: StrippedInboundProcess
      type: object
      description: StrippedInboundProcess
    TakenStowLineItemTakeFromForCreation:
      properties:
        takenAt:
          description: Time and date on which the item was taken
          format: date-time
          type: string
        takenQuantity:
          description: Quantity that was taken
          type: number
        takenStockRef:
          description: |-
            Specifies the stock from which the goods will be taken. 
             Exception: If stowTo.type is "UNREGISTERED", this field may be null. If a stock is specified, its quantity will be reduced regardless of the type.
          nullable: true
          type: string
      required:
        - takenQuantity
        - takenStockRef
      title: TakenStowLineItemTakeFromForCreation
      type: object
      description: TakenStowLineItemTakeFromForCreation
    User:
      properties:
        assignedFacilities:
          description: The assigned facilities of the user
          items:
            $ref: '#/components/schemas/UserAssignedFacility'
          type: array
        assignedRoles:
          description: The assigned roles of a user
          items:
            $ref: '#/components/schemas/AssignedRoles'
          type: array
        authenticationProvider:
          allOf:
            - $ref: '#/components/schemas/AuthenticationProvider'
          description: The authentication provider of the user
        authenticationProviderType:
          $ref: '#/components/schemas/SupportedLocale'
        created:
          description: Creation date of the user
          format: date-time
          type: string
        customClaims:
          allOf:
            - $ref: '#/components/schemas/CustomClaims'
          description: The custom claims of the user
        firstname:
          description: The first name of the user
          example: John
          type: string
        id:
          description: The id of the user
          type: string
        lastModified:
          description: Last modification date of the user
          format: date-time
          type: string
        lastname:
          description: The last name of the user
          example: Doe
          type: string
        locale:
          $ref: '#/components/schemas/SupportedLocale'
        username:
          description: The username of the user
          example: johndoe
          type: string
        version:
          description: Version of the user
          example: 1
          type: number
      required:
        - firstname
        - lastname
        - username
        - id
        - authenticationProvider
        - version
        - assignedRoles
      title: User
      type: object
      description: User
    UserActionEnum:
      description: The type of action to perform
      enum:
        - ModifyUser
      title: UserActionEnum
      type: string
    UserAssignedFacilitiesFilter:
      properties:
        facilityRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by facilityRef
      title: UserAssignedFacilitiesFilter
      type: object
      description: UserAssignedFacilitiesFilter
    UserAssignedFacilitiesListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/UserAssignedFacilitiesFilter'
          description: Contains returns if at least one entry matches
      title: UserAssignedFacilitiesListFilter
      type: object
      description: UserAssignedFacilitiesListFilter
    UserAssignedFacility:
      properties:
        assignedZones:
          description: The assigned zones of the user
          items:
            $ref: '#/components/schemas/UserAssignedZone'
          type: array
        facilityRef:
          description: The id of the assigned facility
          type: string
        id:
          description: The id of the assigned facility
          type: string
      required:
        - facilityRef
        - id
      title: UserAssignedFacility
      type: object
      description: UserAssignedFacility
    UserAssignedFacilityForCreation:
      properties:
        assignedZones:
          description: The assigned zones of the user
          items:
            $ref: '#/components/schemas/UserAssignedZone'
          type: array
        facilityRef:
          description: The id of the assigned facility
          type: string
      required:
        - facilityRef
      title: UserAssignedFacilityForCreation
      type: object
      description: UserAssignedFacilityForCreation
    UserAssignedZone:
      properties:
        zoneRef:
          description: The id of the assigned zone
          type: string
      required:
        - zoneRef
      title: UserAssignedZone
      type: object
      description: UserAssignedZone
    UserAuthAuthenticationProviderTypeEnumFilter:
      properties:
        eq:
          description: Search by type
          enum:
            - EMAIL_PASSWORD
            - OIDC
          type: string
        in:
          description: Search by type
          enum:
            - EMAIL_PASSWORD
            - OIDC
          type: string
        notEq:
          description: Search by type
          enum:
            - EMAIL_PASSWORD
            - OIDC
          type: string
      title: UserAuthAuthenticationProviderTypeEnumFilter
      type: object
      description: UserAuthAuthenticationProviderTypeEnumFilter
    UserAuthFilter:
      properties:
        type:
          allOf:
            - $ref: >-
                #/components/schemas/UserAuthAuthenticationProviderTypeEnumFilter
          description: Search by type
      title: UserAuthFilter
      type: object
      description: UserAuthFilter
    UserCustomClaimsFilter:
      properties:
        roles:
          allOf:
            - $ref: '#/components/schemas/UserCustomClaimsRolesListFilter'
          description: Nested list search by roles
      title: UserCustomClaimsFilter
      type: object
      description: UserCustomClaimsFilter
    UserCustomClaimsRolesFilter:
      properties:
        facilities:
          allOf:
            - $ref: '#/components/schemas/StringListFilter'
          description: Search by facilities
        name:
          allOf:
            - $ref: >-
                #/components/schemas/UserCustomClaimsRolesUserRoleNamesEnumFilter
          description: Search by name
      title: UserCustomClaimsRolesFilter
      type: object
      description: UserCustomClaimsRolesFilter
    UserCustomClaimsRolesListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/UserCustomClaimsRolesFilter'
          description: Contains returns if at least one entry matches
      title: UserCustomClaimsRolesListFilter
      type: object
      description: UserCustomClaimsRolesListFilter
    UserCustomClaimsRolesUserRoleNamesEnumFilter:
      properties:
        eq:
          description: Search by name
          enum:
            - FULFILLER
            - SUPERVISOR
            - ADMINISTRATOR
          type: string
        in:
          description: Search by name
          enum:
            - FULFILLER
            - SUPERVISOR
            - ADMINISTRATOR
          type: string
        notEq:
          description: Search by name
          enum:
            - FULFILLER
            - SUPERVISOR
            - ADMINISTRATOR
          type: string
      title: UserCustomClaimsRolesUserRoleNamesEnumFilter
      type: object
      description: UserCustomClaimsRolesUserRoleNamesEnumFilter
    UserForCreation:
      properties:
        assignedFacilities:
          description: The assigned facilities of the user
          items:
            $ref: '#/components/schemas/UserAssignedFacilityForCreation'
          type: array
        firstname:
          description: The first name of the user
          example: John
          type: string
        lastname:
          description: The last name of the user
          example: Doe
          type: string
        locale:
          $ref: '#/components/schemas/SupportedLocale'
        password:
          description: The password of the user
          example: elephantMangoDance123
          type: string
        roles:
          description: The roles of the user
          items:
            $ref: '#/components/schemas/UserRole'
          maxItems: 1
          minItems: 1
          type: array
        username:
          description: The username of the user
          example: johndoe
          type: string
      required:
        - firstname
        - lastname
        - username
        - password
        - roles
      title: UserForCreation
      type: object
      description: UserForCreation
    UserPaginatedResult:
      properties:
        total:
          description: >-
            The total number of items matching the search criteria. Only filled,
            if withTotal is set to true in the search options.
          minimum: 0
          type: number
        users:
          items:
            $ref: '#/components/schemas/User'
          type: array
      required:
        - users
      title: UserPaginatedResult
      type: object
      description: UserPaginatedResult
    UserPatchActions:
      properties:
        actions:
          description: The actions to perform
          items:
            $ref: '#/components/schemas/ModifyUserAction'
          type: array
        version:
          description: The version of the user to modify
          type: number
      required:
        - actions
        - version
      title: UserPatchActions
      type: object
      description: UserPatchActions
    UserRole:
      properties:
        facilities:
          description: The facilities the user has access to
          items:
            type: string
          maxItems: 23
          type: array
        name:
          $ref: '#/components/schemas/UserRoleNames'
      required:
        - name
      title: UserRole
      type: object
      description: UserRole
    UserRoleNames:
      description: All available user roles
      enum:
        - FULFILLER
        - SUPERVISOR
        - ADMINISTRATOR
      type: string
      xml:
        name: UserRoleNames
      title: UserRoleNames
    UserSearchPayload:
      properties:
        options:
          $ref: '#/components/schemas/SearchOptions'
        query:
          $ref: '#/components/schemas/UserSearchQuery'
        size:
          default: 20
          description: Number of items to return.
          maximum: 250
          minimum: 1
          type: number
        sort:
          description: Use for sorting the result.
          items:
            $ref: '#/components/schemas/UserSort'
          maxItems: 1
          minItems: 1
          type: array
        startAfterId:
          description: The ID to start after.
          type: string
      required:
        - query
      title: UserSearchPayload
      type: object
      description: UserSearchPayload
    UserSearchQuery:
      properties:
        and:
          items:
            $ref: '#/components/schemas/UserSearchQuery'
          type: array
        assignedFacilities:
          allOf:
            - $ref: '#/components/schemas/UserAssignedFacilitiesListFilter'
          description: Nested list search by assignedFacilities
        auth:
          allOf:
            - $ref: '#/components/schemas/UserAuthFilter'
          description: Nested search by auth
        customAttributes:
          additionalProperties:
            anyOf:
              - $ref: '#/components/schemas/BooleanFilter'
              - $ref: '#/components/schemas/StringEqFilter'
              - $ref: '#/components/schemas/NumberEqFilter'
              - $ref: '#/components/schemas/DateFilter'
          description: Search by custom attributes
          type: object
        customClaims:
          allOf:
            - $ref: '#/components/schemas/UserCustomClaimsFilter'
          description: Nested search by customClaims
        firstname:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by firstname
        lastname:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by lastname
        or:
          items:
            $ref: '#/components/schemas/UserSearchQuery'
          type: array
        username:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by username
      title: UserSearchQuery
      type: object
      description: UserSearchQuery
    UserSort:
      properties:
        customAttributes:
          additionalProperties: true
          maxProperties: 1
          minProperties: 1
          type: object
        firstname:
          enum:
            - ASC
            - DESC
          type: string
        lastname:
          enum:
            - ASC
            - DESC
          type: string
        username:
          enum:
            - ASC
            - DESC
          type: string
      title: UserSort
      type: object
      description: UserSort
    ZoneSearchPayload:
      properties:
        options:
          $ref: '#/components/schemas/SearchOptions'
        query:
          $ref: '#/components/schemas/ZoneSearchQuery'
        size:
          default: 20
          description: Number of items to return.
          maximum: 250
          minimum: 1
          type: number
        sort:
          description: Use for sorting the result.
          items:
            $ref: '#/components/schemas/ZoneSort'
          maxItems: 1
          minItems: 1
          type: array
        startAfterId:
          description: The ID to start after.
          type: string
      required:
        - query
      title: ZoneSearchPayload
      type: object
      description: ZoneSearchPayload
    ZoneSearchQuery:
      properties:
        and:
          items:
            $ref: '#/components/schemas/ZoneSearchQuery'
          type: array
        customAttributes:
          additionalProperties:
            anyOf:
              - $ref: '#/components/schemas/BooleanFilter'
              - $ref: '#/components/schemas/StringEqFilter'
              - $ref: '#/components/schemas/NumberEqFilter'
              - $ref: '#/components/schemas/DateFilter'
          description: Search by custom attributes
          type: object
        facilityRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by facilityRef
        id:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by id
        name:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by name
        or:
          items:
            $ref: '#/components/schemas/ZoneSearchQuery'
          type: array
      title: ZoneSearchQuery
      type: object
      description: ZoneSearchQuery
    ZoneSort:
      properties:
        lastModified:
          enum:
            - ASC
            - DESC
          type: string
      title: ZoneSort
      type: object
      description: ZoneSort
    ZoneWebHookEventPayload:
      properties:
        created:
          description: The date when the zone was created
          format: date-time
          type: string
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        facilityRef:
          description: The reference to the facility associated with the zone
          type: string
        id:
          description: The unique identifier of the zone
          type: string
        lastModified:
          description: The date when the zone was last modified
          format: date-time
          type: string
        name:
          description: The name of the zone
          type: string
        score:
          description: The score of the zone
          type: number
        version:
          description: The version of the zone
          type: number
      required:
        - version
        - id
        - facilityRef
        - name
        - score
      title: ZoneWebHookEventPayload
      type: object
      description: ZoneWebHookEventPayload
    ZoneWebHookEventPayloadWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/ZoneWebHookEventPayload'
      required:
        - payload
      title: ZoneWebHookEventPayloadWebHookEvent
      type: object
      description: ZoneWebHookEventPayloadWebHookEvent
    WebHookEvent:
      properties:
        event:
          description: The type of the send event
          type: string
        eventId:
          description: The id of the event
          type: string
      required:
        - event
        - eventId
      type: object
      title: WebHookEvent
      description: WebHookEvent
    InventoryFacilityStockChangedWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          type: array
          items:
            $ref: '#/components/schemas/InventoryFacilityStockShape'
      required:
        - payload
      type: object
      title: InventoryFacilityStockChangedWebHookEvent
      description: InventoryFacilityStockChangedWebHookEvent
    InboundDeliveryFinishedWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/InboundDeliveryFinishedPayload'
      required:
        - payload
      type: object
      title: InboundDeliveryFinishedWebHookEvent
      description: InboundDeliveryFinishedWebHookEvent
    InboundDeliveryOnHoldWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/InboundDeliveryOnHoldPayload'
      required:
        - payload
      type: object
      title: InboundDeliveryOnHoldWebHookEvent
      description: InboundDeliveryOnHoldWebHookEvent
    InboundDeliveryReceivedWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/InboundDeliveryReceivedPayload'
      required:
        - payload
      type: object
      title: InboundDeliveryReceivedWebHookEvent
      description: InboundDeliveryReceivedWebHookEvent
    InboundDeliveryReleasedWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/InboundDeliveryReleasedPayload'
      required:
        - payload
      type: object
      title: InboundDeliveryReleasedWebHookEvent
      description: InboundDeliveryReleasedWebHookEvent
    FacilityCreatedWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/ManagedFacility'
      required:
        - payload
      type: object
      title: FacilityCreatedWebHookEvent
      description: FacilityCreatedWebHookEvent
    FacilityUpdatedWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/ManagedFacility'
      required:
        - payload
      type: object
      title: FacilityUpdatedWebHookEvent
      description: FacilityUpdatedWebHookEvent
    FacilityDeletedWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          description: The id of the deleted facility
          type: string
      required:
        - payload
      type: object
      title: FacilityDeletedWebHookEvent
      description: FacilityDeletedWebHookEvent
    FacilityWentOnlineWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/ManagedFacility'
      required:
        - payload
      type: object
      title: FacilityWentOnlineWebHookEvent
      description: FacilityWentOnlineWebHookEvent
    FacilityWentOfflineWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/ManagedFacility'
      required:
        - payload
      type: object
      title: FacilityWentOfflineWebHookEvent
      description: FacilityWentOfflineWebHookEvent
    FacilitySuspendedWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/ManagedFacility'
      required:
        - payload
      type: object
      title: FacilitySuspendedWebHookEvent
      description: FacilitySuspendedWebHookEvent
    HandoverJobCreatedWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/Handoverjob'
      required:
        - payload
      type: object
      title: HandoverJobCreatedWebHookEvent
      description: HandoverJobCreatedWebHookEvent
    HandoverJobHandedOverWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/Handoverjob'
      required:
        - payload
      type: object
      title: HandoverJobHandedOverWebHookEvent
      description: HandoverJobHandedOverWebHookEvent
    HandoverJobRevertedWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/Handoverjob'
      required:
        - payload
      type: object
      title: HandoverJobRevertedWebHookEvent
      description: HandoverJobRevertedWebHookEvent
    HandoverJobCanceledWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/Handoverjob'
      required:
        - payload
      type: object
      title: HandoverJobCanceledWebHookEvent
      description: HandoverJobCanceledWebHookEvent
    OrderCreatedWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/Order'
      required:
        - payload
      type: object
      title: OrderCreatedWebHookEvent
      description: OrderCreatedWebHookEvent
    OrderUnlockedWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/Order'
      required:
        - payload
      type: object
      title: OrderUnlockedWebHookEvent
      description: OrderUnlockedWebHookEvent
    ShipmentCreatedWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/Shipment'
      required:
        - payload
      type: object
      title: ShipmentCreatedWebHookEvent
      description: ShipmentCreatedWebHookEvent
    ShipmentUpdatedWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/Shipment'
      required:
        - payload
      type: object
      title: ShipmentUpdatedWebHookEvent
      description: ShipmentUpdatedWebHookEvent
    RoutingPlanSplittedWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/RoutingPlan'
      required:
        - payload
      type: object
      title: RoutingPlanSplittedWebHookEvent
      description: RoutingPlanSplittedWebHookEvent
    RoutingPlanWaitingWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/RoutingPlan'
      required:
        - payload
      type: object
      title: RoutingPlanWaitingWebHookEvent
      description: RoutingPlanWaitingWebHookEvent
    RoutingPlanFallbackRoutingWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/RoutingPlan'
      required:
        - payload
      type: object
      title: RoutingPlanFallbackRoutingWebHookEvent
      description: RoutingPlanFallbackRoutingWebHookEvent
    RoutingPlanRoutedWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/RoutingPlan'
      required:
        - payload
      type: object
      title: RoutingPlanRoutedWebHookEvent
      description: RoutingPlanRoutedWebHookEvent
    RoutingPlanRerouteCreatedWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/RoutingPlan'
      required:
        - payload
      type: object
      title: RoutingPlanRerouteCreatedWebHookEvent
      description: RoutingPlanRerouteCreatedWebHookEvent
    OrderCancelledWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/Order'
      required:
        - payload
      type: object
      title: OrderCancelledWebHookEvent
      description: OrderCancelledWebHookEvent
    OrderCancelledByExpiryEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/Order'
      required:
        - payload
      type: object
      title: OrderCancelledByExpiryEvent
      description: OrderCancelledByExpiryEvent
    OrderForceCancelledWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/Order'
      required:
        - payload
      type: object
      title: OrderForceCancelledWebHookEvent
      description: OrderForceCancelledWebHookEvent
    PickjobCreatedWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/PickJob'
      required:
        - payload
      type: object
      title: PickjobCreatedWebHookEvent
      description: PickjobCreatedWebHookEvent
    PickjobPickLinePickedWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/PickLineItem'
        pickJobRef:
          type: string
      required:
        - payload
        - pickJobRef
      type: object
      title: PickjobPickLinePickedWebHookEvent
      description: PickjobPickLinePickedWebHookEvent
    UpcomingTimeTriggeredRerouteWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/UpcomingTimeTriggeredRerouteWebHookEventPayload'
      required:
        - payload
      type: object
      title: UpcomingTimeTriggeredRerouteWebHookEvent
      description: UpcomingTimeTriggeredRerouteWebHookEvent
    UpcomingTimeTriggeredRerouteWebHookEventPayload:
      properties:
        pickJobData:
          properties:
            pickJobRef:
              type: string
            tenantOrderId:
              type: string
            shortId:
              type: string
            created:
              example: '2020-02-03T08:45:51.525Z'
              format: date-time
              type: string
          required:
            - pickJobRef
            - tenantOrderId
            - shortId
            - created
        facilityData:
          properties:
            name:
              type: string
            facilityRef:
              type: string
            timeZone:
              type: string
          required:
            - name
            - facilityRef
            - timeZone
        rerouteDate:
          example: '2020-02-03T08:45:51.525Z'
          format: date-time
          type: string
      required:
        - pickJobData
        - facilityData
        - rerouteDate
      title: UpcomingTimeTriggeredRerouteWebHookEventPayload
      description: UpcomingTimeTriggeredRerouteWebHookEventPayload
    ExternalActionExecutedWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/ExternalActionExecutedWebHookEventPayload'
      required:
        - payload
      type: object
      title: ExternalActionExecutedWebHookEvent
      description: ExternalActionExecutedWebHookEvent
    ExternalActionExecutedWebHookEventPayload:
      properties:
        logId:
          type: string
        externalActionRef:
          type: string
        type:
          $ref: '#/components/schemas/ExternalActionType'
        editor:
          $ref: '#/components/schemas/Editor'
        actionPayload:
          type: object
          oneOf:
            - $ref: '#/components/schemas/ExternalLinkActionLogPayload'
            - $ref: '#/components/schemas/ExternalFormActionLogPayload'
      required:
        - logId
        - externalActionRef
        - type
        - editor
        - actionPayload
      type: object
      title: ExternalActionExecutedWebHookEventPayload
      description: ExternalActionExecutedWebHookEventPayload
    PickjobPickingCommencedWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/PickJob'
      required:
        - payload
      type: object
      title: PickjobPickingCommencedWebHookEvent
      description: PickjobPickingCommencedWebHookEvent
    PickjobPickingFinishedWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/PickJob'
      required:
        - payload
      type: object
      title: PickjobPickingFinishedWebHookEvent
      description: PickjobPickingFinishedWebHookEvent
    PickjobPickingPausedWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/PickJob'
      required:
        - payload
      type: object
      title: PickjobPickingPausedWebHookEvent
      description: PickjobPickingPausedWebHookEvent
    PickjobOpenedWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/PickJob'
      required:
        - payload
      type: object
      title: PickjobOpenedWebHookEvent
      description: PickjobOpenedWebHookEvent
    PickjobAbortedWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/PickJob'
      required:
        - payload
      type: object
      title: PickjobAbortedWebHookEvent
      description: PickjobAbortedWebHookEvent
    PickjobCanceledWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/PickJob'
      required:
        - payload
      type: object
      title: PickjobCanceledWebHookEvent
      description: PickjobCanceledWebHookEvent
    PackJobUpdatedWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/PackJob'
      required:
        - payload
      type: object
      title: PackJobUpdatedWebHookEvent
      description: PackJobUpdatedWebHookEvent
    PackJobCreatedWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/PackJob'
      required:
        - payload
      type: object
      title: PackJobCreatedWebHookEvent
      description: PackJobCreatedWebHookEvent
    PackJobCanceledWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/PackJob'
      required:
        - payload
      type: object
      title: PackJobCanceledWebHookEvent
      description: PackJobCanceledWebHookEvent
    RoutingPlanNotRoutableWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/RoutingPlan'
      required:
        - payload
      type: object
      title: RoutingPlanNotRoutableWebHookEvent
      description: RoutingPlanNotRoutableWebHookEvent
    ReturnJobCreatedWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/ReturnJob'
      required:
        - payload
      type: object
      title: ReturnJobCreatedWebHookEvent
      description: ReturnJobCreatedWebHookEvent
    ReturnJobCanceledWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/ReturnJob'
      required:
        - payload
      type: object
      title: ReturnJobCanceledWebHookEvent
      description: ReturnJobCanceledWebHookEvent
    ReturnJobClaimedWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/ReturnJob'
      required:
        - payload
      type: object
      title: ReturnJobClaimedWebHookEvent
      description: ReturnJobClaimedWebHookEvent
    ReturnJobClosedWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/ReturnJob'
      required:
        - payload
      type: object
      title: ReturnJobClosedWebHookEvent
      description: ReturnJobClosedWebHookEvent
    ParcelCarrierRequestedWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/Parcel'
      required:
        - payload
      type: object
      title: ParcelCarrierRequestedWebHookEvent
      description: ParcelCarrierRequestedWebHookEvent
    ParcelCarrierAcknowledgedWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/Parcel'
      required:
        - payload
      type: object
      title: ParcelCarrierAcknowledgedWebHookEvent
      description: ParcelCarrierAcknowledgedWebHookEvent
    ParcelCarrierFailedWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/Parcel'
      required:
        - payload
      type: object
      title: ParcelCarrierFailedWebHookEvent
      description: ParcelCarrierFailedWebHookEvent
    UserCreatedWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/User'
      required:
        - payload
      type: object
      title: UserCreatedWebHookEvent
      description: UserCreatedWebHookEvent
    UserUpdatedWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/User'
      required:
        - payload
      type: object
      title: UserUpdatedWebHookEvent
      description: UserUpdatedWebHookEvent
    UserDeletedWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/User'
      required:
        - payload
      type: object
      title: UserDeletedWebHookEvent
      description: UserDeletedWebHookEvent
    ServiceJobCreatedWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/ServiceJob'
      required:
        - payload
      type: object
      title: ServiceJobCreatedWebHookEvent
      description: ServiceJobCreatedWebHookEvent
    ServiceJobFinishedWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/ServiceJob'
      required:
        - payload
      type: object
      title: ServiceJobFinishedWebHookEvent
      description: ServiceJobFinishedWebHookEvent
    RefundTriggerWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/ItemReturn'
      required:
        - payload
      type: object
      title: RefundTriggerWebHookEvent
      description: RefundTriggerWebHookEvent
    AddChannelAction:
      properties:
        channel:
          oneOf:
            - $ref: '#/components/schemas/EmailNotificationChannelForCreation'
        name:
          enum:
            - ADD_CHANNEL
          type: string
        version:
          type: number
      required:
        - name
        - channel
        - version
      title: AddChannelAction
      type: object
      description: AddChannelAction
    EmailNotificationChannel:
      properties:
        enabled:
          type: boolean
        events:
          description: |-
            Supported events for triggering external notifications: 
                  - PICK_JOB_CREATED: Available for facility scoped config and tenant wide config
                  - ROUTING_PLAN_NOT_ROUTABLE: Available for tenant wide config
                  - ROUTING_PLAN_WAITING: Available for tenant wide config
              
          items:
            enum:
              - PICK_JOB_CREATED
              - UPCOMING_TIME_TRIGGERED_REROUTE
              - ROUTING_PLAN_NOT_ROUTABLE
              - ROUTING_PLAN_WAITING
            type: string
          type: array
          uniqueItems: true
        id:
          type: string
        receiver:
          items:
            $ref: '#/components/schemas/EmailReceiver'
          type: array
          uniqueItems: true
        type:
          type: string
      required:
        - enabled
        - events
        - type
        - id
        - receiver
      title: EmailNotificationChannel
      type: object
      description: EmailNotificationChannel
    EmailNotificationChannelForCreation:
      properties:
        enabled:
          type: boolean
        events:
          description: |-
            Supported events for triggering external notifications: 
                  - PICK_JOB_CREATED: Available for facility scoped config and tenant wide config
                  - ROUTING_PLAN_NOT_ROUTABLE: Available for tenant wide config
                  - ROUTING_PLAN_WAITING: Available for tenant wide config
              
          items:
            enum:
              - PICK_JOB_CREATED
              - UPCOMING_TIME_TRIGGERED_REROUTE
              - ROUTING_PLAN_NOT_ROUTABLE
              - ROUTING_PLAN_WAITING
            type: string
          type: array
          uniqueItems: true
        receiver:
          items:
            $ref: '#/components/schemas/EmailReceiver'
          type: array
          uniqueItems: true
        type:
          type: string
      required:
        - enabled
        - events
        - type
        - receiver
      title: EmailNotificationChannelForCreation
      type: object
      description: EmailNotificationChannelForCreation
    EmailReceiver:
      properties:
        email:
          format: email
          type: string
        language:
          $ref: '#/components/schemas/SupportedLocale'
      required:
        - email
        - language
      title: EmailReceiver
      type: object
      description: EmailReceiver
    NotificationCenterConfig:
      properties:
        channels:
          items:
            oneOf:
              - $ref: '#/components/schemas/EmailNotificationChannel'
          type: array
        created:
          format: date-time
          type: string
        lastModified:
          format: date-time
          type: string
        version:
          type: number
      required:
        - version
        - created
        - lastModified
        - channels
      title: NotificationCenterConfig
      type: object
      description: NotificationCenterConfig
    NotificationCenterConfigForCreation:
      properties:
        channels:
          items:
            oneOf:
              - $ref: '#/components/schemas/EmailNotificationChannelForCreation'
          type: array
      required:
        - channels
      title: NotificationCenterConfigForCreation
      type: object
      description: NotificationCenterConfigForCreation
    NotificationCenterConfigForUpdate:
      properties:
        channels:
          items:
            oneOf:
              - $ref: '#/components/schemas/EmailNotificationChannelForCreation'
          type: array
        version:
          type: number
      required:
        - channels
        - version
      title: NotificationCenterConfigForUpdate
      type: object
      description: NotificationCenterConfigForUpdate
    UpdateChannelByIdAction:
      properties:
        channel:
          oneOf:
            - $ref: '#/components/schemas/EmailNotificationChannel'
        name:
          enum:
            - UPDATE_CHANNEL
          type: string
        version:
          type: number
      required:
        - name
        - channel
        - version
      title: UpdateChannelByIdAction
      type: object
      description: UpdateChannelByIdAction
    AvailabilityAllocation:
      properties:
        channelRef:
          type: string
        created:
          format: date-time
          type: string
        facilityRef:
          type: string
        groupRef:
          type: string
        id:
          type: string
        initialStockQuantity:
          type: number
        lastModified:
          format: date-time
          type: string
        version:
          type: number
      required:
        - facilityRef
        - initialStockQuantity
        - groupRef
        - channelRef
        - id
        - version
        - created
        - lastModified
      title: AvailabilityAllocation
      type: object
      description: AvailabilityAllocation
    AvailabilityAllocationForCreationUnderGroup:
      properties:
        facilityRef:
          type: string
        initialStockQuantity:
          type: number
      required:
        - facilityRef
        - initialStockQuantity
      title: AvailabilityAllocationForCreationUnderGroup
      type: object
      description: AvailabilityAllocationForCreationUnderGroup
    AvailabilityAllocationForReplacement:
      properties:
        groupId:
          type: string
        initialStockQuantity:
          type: number
        version:
          type: number
      required:
        - version
        - initialStockQuantity
      title: AvailabilityAllocationForReplacement
      type: object
      description: AvailabilityAllocationForReplacement
    AvailabilityAllocationGroup:
      properties:
        active:
          type: boolean
        activePeriod:
          $ref: '#/components/schemas/AvailabilityAllocationPeriod'
        channelRef:
          type: string
        created:
          format: date-time
          type: string
        id:
          type: string
        lastModified:
          format: date-time
          type: string
        tenantArticleIds:
          items:
            type: string
          maxItems: 1
          type: array
        version:
          type: number
      required:
        - tenantArticleIds
        - active
        - channelRef
        - id
        - version
        - created
        - lastModified
      title: AvailabilityAllocationGroup
      type: object
      description: AvailabilityAllocationGroup
    AvailabilityAllocationGroupForCreationUnderChannel:
      properties:
        active:
          type: boolean
        activePeriod:
          $ref: '#/components/schemas/AvailabilityAllocationPeriod'
        tenantArticleIds:
          items:
            type: string
          maxItems: 1
          type: array
      required:
        - tenantArticleIds
        - active
      title: AvailabilityAllocationGroupForCreationUnderChannel
      type: object
      description: AvailabilityAllocationGroupForCreationUnderChannel
    AvailabilityAllocationGroupForReplacement:
      properties:
        active:
          type: boolean
        activePeriod:
          $ref: '#/components/schemas/AvailabilityAllocationPeriod'
        version:
          type: number
      required:
        - version
        - active
      title: AvailabilityAllocationGroupForReplacement
      type: object
      description: AvailabilityAllocationGroupForReplacement
    AvailabilityAllocationGroupPaginatedResult:
      properties:
        groups:
          items:
            $ref: '#/components/schemas/AvailabilityAllocationGroup'
          type: array
        total:
          minimum: 0
          type: number
      required:
        - total
        - groups
      title: AvailabilityAllocationGroupPaginatedResult
      type: object
      description: AvailabilityAllocationGroupPaginatedResult
    AvailabilityAllocationPaginatedResult:
      properties:
        allocations:
          items:
            $ref: '#/components/schemas/AvailabilityChannel'
          type: array
        total:
          minimum: 0
          type: number
      required:
        - total
        - allocations
      title: AvailabilityAllocationPaginatedResult
      type: object
      description: AvailabilityAllocationPaginatedResult
    AvailabilityAllocationPeriod:
      properties:
        end:
          format: date-time
          type: string
        start:
          format: date-time
          type: string
      title: AvailabilityAllocationPeriod
      type: object
      description: AvailabilityAllocationPeriod
    AvailabilityChannel:
      properties:
        created:
          format: date-time
          type: string
        id:
          type: string
        lastModified:
          format: date-time
          type: string
        name:
          type: string
        strategy:
          enum:
            - REGULAR
            - IRON_RESERVE
            - RESTRICT
          type: string
        version:
          type: number
      required:
        - name
        - strategy
        - version
        - id
        - created
        - lastModified
      title: AvailabilityChannel
      type: object
      description: AvailabilityChannel
    AvailabilityChannelForCreation:
      properties:
        name:
          type: string
        strategy:
          enum:
            - REGULAR
            - IRON_RESERVE
            - RESTRICT
          type: string
      required:
        - name
        - strategy
      title: AvailabilityChannelForCreation
      type: object
      description: AvailabilityChannelForCreation
    AvailabilityChannelForReplacement:
      properties:
        name:
          type: string
        strategy:
          enum:
            - REGULAR
            - IRON_RESERVE
            - RESTRICT
          type: string
        version:
          type: number
      required:
        - name
        - strategy
        - version
      title: AvailabilityChannelForReplacement
      type: object
      description: AvailabilityChannelForReplacement
    AvailabilityChannelPaginatedResult:
      properties:
        channels:
          items:
            $ref: '#/components/schemas/AvailabilityChannel'
          type: array
        total:
          minimum: 0
          type: number
      required:
        - total
        - channels
      title: AvailabilityChannelPaginatedResult
      type: object
      description: AvailabilityChannelPaginatedResult
    Audit:
      properties:
        actor:
          $ref: '#/components/schemas/AuditActor'
        anonymizationDate:
          format: date-time
          type: string
        client:
          $ref: '#/components/schemas/AuditClient'
        created:
          description: Creation date of the entity, auto-generated if not provided
          format: date-time
          type: string
        deletionDate:
          format: date-time
          type: string
        entityCreated:
          format: date-time
          type: string
        entityRef:
          type: string
        entityType:
          enum:
            - PACK_JOB
            - PICK_JOB
            - PICK_RUN
            - HANDOVER_JOB
            - SHIPMENT
            - PARCEL
            - CUSTOM_SERVICE
            - SERVICE_JOB
            - LINKED_SERVICE_JOBS
            - ORDER
            - ROUTING_PLAN
            - FACILITY
            - FACILITY_CARRIER_CONNECTION
            - FACILITY_CUSTOM_SERVICE
            - ROUTING_STRATEGY
            - STOW_JOB
          type: string
        entityVersion:
          type: number
        eventId:
          type: string
        globalActor:
          $ref: '#/components/schemas/AuditActor'
        id:
          type: string
        isAnonymized:
          type: boolean
        lastModified:
          description: Service-generated last modification date of the entity
          format: date-time
          type: string
        operation:
          $ref: '#/components/schemas/AuditOperation'
        trace:
          type: string
        version:
          description: The version of the entity, used for optimistic locking mechanisms
          type: number
      required:
        - id
        - eventId
        - entityRef
        - entityType
        - entityVersion
        - isAnonymized
        - entityCreated
        - deletionDate
        - anonymizationDate
        - trace
        - actor
        - globalActor
        - client
        - operation
        - version
      title: Audit
      type: object
      description: Audit
    AuditActor:
      properties:
        details:
          $ref: '#/components/schemas/AuditActorDetails'
        id:
          type: string
      required:
        - id
        - details
      title: AuditActor
      type: object
      description: AuditActor
    AuditActorDetails:
      properties:
        topic:
          type: string
        username:
          type: string
      required:
        - topic
        - username
      title: AuditActorDetails
      type: object
      description: AuditActorDetails
    AuditClient:
      properties:
        api:
          type: string
        rawInfo:
          type: string
      required:
        - api
        - rawInfo
      title: AuditClient
      type: object
      description: AuditClient
    AuditOperation:
      properties:
        name:
          type: string
        start:
          format: date-time
          type: string
      required:
        - name
        - start
      title: AuditOperation
      type: object
      description: AuditOperation
    AuditsResult:
      properties:
        audits:
          description: The audits that match the filter criteria
          items:
            $ref: '#/components/schemas/Audit'
          type: array
        total:
          description: The total number of audits that match the filter criteria
          minimum: 0
          type: number
      required:
        - audits
        - total
      title: AuditsResult
      type: object
      description: AuditsResult
  securitySchemes:
    BearerToken:
      type: http
      scheme: bearer
      bearerFormat: JWT
tags:
  - description: >-
      Everything your customer ordered in your shop, so everything he or she
      orders for fulfillment.
    name: DOMS - Orders
  - description: >-
      Endpoints to get information out of the brain of our Distributed Order
      Management System.
    name: DOMS - Routing Plans
  - description: Endpoints to configure the Routing Strategy of the DOMS.
    name: DOMS - Routing Strategy
  - description: >-
      Endpoints used by shops to get the current available pickup stores and
      available service levels like Same-Day delivery.
    name: DOMS - Checkout Options
  - description: Get operative processes.
    name: Fulfillment Operations - Operative Process
  - description: Endpoints to Create, Update and Read pickjobs.
    name: Fulfillment Operations - Picking
  - description: Endpoints to Create, Update and Read Custom Service Jobs.
    name: Fulfillment Operations - Custom Services
  - description: Endpoints to manipulate Restow Items.
    name: Fulfillment Operations - Restow
  - description: Endpoints to manipulate operative containers.
    name: Fulfillment Operations - Operative Container
  - description: Endpoints to Create, Update and Read packjobs.
    name: Fulfillment Operations - Packing
  - description: Endpoints to Create, Update and Read handoverjobs.
    name: Fulfillment Operations - Handover
  - description: Endpoints to Create, Update and Read shipments and parcels.
    name: Fulfillment Operations - Shipments
  - description: Endpoints to Create, Update and Read Returns.
    name: Fulfillment Operations - Returns
  - description: Endpoints to Create, Update and Read Carriers.
    name: Last Mile Integration - Carriers
  - description: Endpoints to Create, Update and Read Inbound Processes.
    name: Inventory Management - Inbound
  - description: Endpoints to Create, Update and Read Stowjobs.
    name: Inventory Management - Stowing
  - description: Endpoints to Configure and get Channel Availability.
    name: Inventory Management - Channel Availability
  - description: Endpoints to Create, Update and Read Stocks.
    name: Inventory Management - Stocks
  - description: Endpoints to Create, Update and Read Storage Locations and Zones.
    name: Inventory Management – Storage Locations
  - description: Endpoints to Read and configure Processes.
    name: Core - Processes
  - description: >-
      Endpoints to attach external actions to processes and append logs to
      external actions.
    name: Core - External Actions
  - description: >-
      Endpoints to Read and Modifiy Expires, e.g. by extending the
      provisioningTime.
    name: Core - Expiries
  - description: Endpoints to Create, Update and Read Document Sets.
    name: Core - Document Sets
  - description: Endpoints to Create, Update and Read Custom Services.
    name: Core - Custom Services
  - description: Endpoints to Configure Notifications on FFT events.
    name: Core - Notification Center
  - description: Endpoints to Create, Update and Read facilities.
    name: Core - Facilities
  - description: Endpoints to Create, Update and Read Facility Listings.
    name: Core - Listings
  - description: Endpoints to Create, Update and Read subscriptions.
    name: Core - Eventing
  - description: Endpoints to Create, Update and Read users.
    name: Core - User Management
  - description: Validate properties accepted by the fulfillmenttools platform.
    name: Core - Validations
  - description: Endpoints to Create, Update and Read tags.
    name: Core - Tags
  - description: Endpoints to Create, Update and Read remote configurations.
    name: Core - Remote Configuration
  - description: >-
      Endpoints to Update and Read general configuration of the fulfillmenttools
      platform.
    name: Core - Configuration
  - description: Auditing helps determine who did what when.
    name: Core - Audit
  - description: Obtain Artifact information provided by platform.
    name: Infrastructure - Artifacts
  - description: Access to fulfillmenttools platform GraphQL API.
    name: Infrastructure - GraphQL
  - description: Configure features of the fulfillmenttools platform.
    name: Infrastructure - Features
  - description: Endpoints to get health status about the fulfillmenttools platform.
    name: Infrastructure - Health
  - description: Endpoints to configure external IDPs.
    name: Infrastructure - OIDC Configuration
security:
  - BearerToken: []
